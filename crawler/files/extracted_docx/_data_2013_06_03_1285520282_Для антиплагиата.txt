Аннотация

В данной работе представлена разработка программных средств системы мониторинга автоматов продажи проездных билетов, а точнее приложение АРМ мониторинга и сервера мониторинга.

В первой главе проведен анализ предметной области, рассмотрены аналоги и сформулирована постановка задачи.

Во второй главе описывается проектирование сайта, включающее в себя диаграмму вариантов использования, и структура графического интерфейса пользователя.

В третьей главе рассматривается выбор средств реализации поставленной задачи, обоснование выбора, предъявлены требования к составу и параметрам технических средств.

В четвертой главе рассматриваются сценарии тестирования программных средств.

В пятой главе представлен контрольный пример сайта.




Содержание




























































Введение

В настоящее время, всё больше места в нашей жизни занимают автоматизированные системы. Эти системы можно разделить на 2 вида:

Программные комплексы;

Программно-аппаратные комплексы.

К программным комплексам относятся:

Веб-сайты;

Веб-сервисы;

Автоматизированные многопользовательские системы.

К программно-аппаратным комплексам относятся:

Банкоматы;

Торговые автоматы;

Автоматы продажи билетов.

Для обеспечения постоянного контроля состояния этих систем и своевременным выявлением неисправностей используют специализированные программные и программно-аппаратные комплексы, называемые системами мониторинга.

Мониторинг – система сбора/регистрации, хранения и анализа небольшого количества ключевых (явных или косвенных) признаков/параметров описания данного объекта для вынесения суждения о поведении/состоянии данного объекта в целом. То есть для вынесения суждения об объекте в целом на основании анализа небольшого количества характеризующих его признаков.

Главной задачей разработки системы мониторинга является создание удобного инструмента, позволяющего отслеживать, предупреждать и эффективно и своевременно устранять неисправности.




Анализ предметной области

Виды систем мониторинга

В мире существуют различные виды систем мониторинга, которые по своим задачам можно разделить на два типа:

Мониторинг подвижных объектов.

Мониторинг стационарных объектов.

Системы мониторинга первого типа предназначены для наблюдения, контроля, управления и обеспечения безопасности таких подвижных объектов, как частный автотранспорт, автопарки различных организаций, железнодорожный и водный транспорт.

Принцип действия систем мониторинга подвижных объектов следующий:

Спутниковая система ГЛОНАСС/GPS определяет координаты объекта.

Навигационное оборудование, установленное на объекте, получает информацию о местоположении.

Навигационное оборудование получает информацию о состоянии объекта (скорости, направлении, состоянии различных датчиков и т.д.) и посылает эти данные на диспетчерский центр.

В случае возникновения тревожной ситуации: взлома или угона автомашины, выхода объекта из заданной зоны передвижения, слива топлива и т.д. - на диспетчерский центр посылается сигнал тревоги.

Вся информация о местонахождении, передвижении и состоянии объектов отображается на экране монитора на фоне электронной карты местности.

Вся информация сохраняется в памяти Системы и может быть выведена в виде специализированного отчета.

Диспетчер полностью контролирует текущую ситуацию, получает сообщения в случае нестандартных происшествий, может управлять объектами и выводить любую необходимую информацию на экран монитора.

Одна из разновидностей такой системы мониторинга – GPS-мониторинг.

GPS-мониторинг транспорта – одна из разновидностей систем спутникового мониторинга транспорта, основанная на использовании американских спутников GPS. Следует различать GPS-мониторинг транспорта с использованием американских спутников GPS и ГЛОНАСС-мониторинг транспорта с использованием российских спутников ГЛОНАСС.



Рисунок 1. Интерфейс системы GPS-мониторинга

GPS-мониторинг транспорта – технология, применяемая в диспетчерских службах на транспорте, а также для решения задач транспортной логистики в системах управления перевозками и автоматизированных системах управления автопарком для контроля фактических маршрутов транспортных средств при помощи спутников GPS.

Автомобильный трекер – прибор, устанавливаемый на автомобиль с целью отслеживания его дальнейшего перемещения и контроля его местоположения.

Обычно трекер определяет своё местоположение, принимая сигналы ГЛОНАСС/GPS и отправляя их посредством мобильного интернет канала GPRS на сервер в Интернете, на котором владелец прибора наблюдает его перемещения. Почти все современные (2008—2009 годы) приборы, работающие на этом принципе, могут принимать входящие звонки.

В настоящее время в России набирает популярность направление ГЛОНАСС-мониторинг транспорта, работа которого основана на функционировании российских ГЛОНАСС-спутников.

В offline варианте необходимость дистанционной передачи данных отсутствует. Это позволяет использовать более дешёвые мобильные модули и отказаться от услуг операторов мобильной связи.

Системы мониторинга стационарных объектов предназначены для контроля и наблюдением за зданиями, потенциально опасными объектами, автоматами продажи продуктов питания, билетов, банкоматов, терминалов приема платежей и т.п.

Принцип действия мониторинга стационарных объектов существенно и проще систем первого типа:

Оборудование (или программное обеспечение), установленное на объекте, собирает всю информацию о состоянии с охранных датчиков, специализированных датчиков (определения давления, газа температуры и т.п.), датчиков контроля доступа и т.д.

Объектовое оборудование посылает эти данные на диспетчерский центр.

Вся информация о состоянии объекта отображается на экране монитора.

В случае возникновения тревожной ситуации: взлома, пожара, изменения состояния оборудования – на диспетчерский центр посылается сигнал тревоги.

Вся информация сохраняется в памяти Системы и может быть выведена в виде специализированного отчета.

Диспетчер полностью контролирует текущую ситуацию, получает сообщения в случае нестандартных происшествий, может управлять объектами и выводить любую необходимую информацию на экран монитора.

Несмотря на то, что область применения, архитектура, и требования у таких систем разные, обе они решают одни и те же задачи:

Контроль за состоянием объектов;

Сокращение времени простоя;

Снижение нагрузки на эксплуатирующий персонал за счет автоматизации функций;

Оптимизация и сокращение затрат на обслуживание;

Сбор статистики и оптимизации маршрутов.



Рисунок 2. Интерфейс системы онлайн-мониторинга стационарного аппарата

Система мониторинга, программные средства для которой разрабатываются в рамках данной дипломного проекта, предназначена для контроля и наблюдения за стационарными объектами.

Анализ исходных данных

Вендинг – это продажа товаров и услуг с помощью автоматизированных систем (торговых автоматов).

Предпосылки появления систем мониторинга в сфере обслуживания клиента могут быть различные. В одном случае это может быть возрастающая конкуренция (например, в сфере вендинг-бизнеса), так и желание увеличения числа пассажиропотока путём установки уменьшения очередей к кассам (например, продажа проездных билетов метро). В обоих случаях основная цель заказчика – увеличение прибыли, то есть то, чего можно добиться за счет оптимизации процессов и снижении затрат на обслуживание автоматов. Эффект от использования таких систем особенно будет заметен в том случае, если необходимо контролировать работу нескольких десятков, а то и сотен автоматов.

Бизнес-процесс обслуживания аппаратов

Ниже следует обобщенное описание технического обслуживания устройств на примере автоматов продажи продуктов питания до и после использования системы мониторинга. Таким же образом можно описать бизнес-процесс обслуживания автоматов продажи билетов.

Для расчета мы выберем ситуацию, в которой продажи у автоматов А1 и А2 в первые три дня по каким-то причинам были существенно ниже среднестатистических, а автомат А8 наоборот, показывал высокий уровень продаж и израсходовал запас ингредиентов уже на третий день.



Рисунок 3. Маршрут обслуживания

до использования системы мониторинга

Путь полного объезда сети составляет 103,9 км. Два объезда за шесть дней равны 207,8 км. В день второго (четвертый объезд) объезда автоматы А1 и А2 имели запас ингредиентов и не требовали дозаправки, а автомат А8, израсходовав запас в течение суток простаивал.

Во втором случае диспетчер владел информацией об отсутствии ингредиентов в автомате А8 и направил на третий день сервис-инженеров по маршруту длинной 49,5 км – заправить автомат и пополнить запас до максимума в ближайших к нему автоматах. На четвертый день выбран маршрут длинной 56,7 км, исключающий автоматы А1 и А2.



Рисунок 4. Маршрут обслуживания при использовании системы мониторинга

Таким образом, владение информацией о текущем состоянии автоматов оператор может составлять оптимальный маршрут движения сервис-инженера, что уменьшает нагрузку на сервис-инженера и уменьшает время простоя аппарата.

Технические характеристики контролируемых аппаратов

Система мониторинга должна позволять отслеживать технические неисправности аппарата. Для этого разработчику необходимо знать, какие узлы имеются в аппарате, и какую функцию они выполняют. Большинство аппаратов продажи имеют схожую структуру. Рассмотрим это на примере аппаратов продажи билетов метро.



Монетоприёмник – устройство, предназначенное для приема монет. Обычно применяется в автоматах самообслуживания, и игровых автоматах. С помощью набора датчиков, монетоприёмник определяет номинал и (или) подлинность монеты.

Диспенсеры карт – это устройства приема, выдачи, записи (и перезаписи) используемые  в банкоматах, автоматах самообслуживания, автоматах продажи проездных карт и билетов и т.д.

Купюроприёмник – устройство, предназначенное для приема бумажных денег, обычно используется в аппаратах и системах самообслуживания населения (торговых и игровых автоматах, платежных терминалах).

Монетовозвратный механизм (хоппер) – устройство, предназначенное для выдачи монет/жетонов  одного номинала.

Датчик открытия дверей – устройство, позволяющее системе определить открыты ли в данные момент двери аппарата.

Контроллер – устройство управления в электронике и вычислительной технике.

Источник бесперебойного питания – источник вторичного электропитания, автоматическое устройство, назначение которого – обеспечить подключенное к нему электрооборудование бесперебойным снабжением электрической энергией в пределах нормы.

Аналоги

Система мониторинга АПБ Московского метрополитена v1.0.0.13

Система мониторинга АПБ (автоматов продажи билетов) московского метрополитена – это программный комплекс, который позволяет производить мониторинг программно-аппаратных средств продажи проездных билетов.



Рисунок 5. Интерфейс АРМ мониторинга АПБ Московского метрополитена

Принцип работы системы мониторинга АПБ Метрополитена следующий:



Рисунок 6. Архитектура системы мониторинга АПБ метрополитена

Сервер поочередно опрашивает все аппараты продажи билетов.

Как только аппарат получил сигнал от сервера о необходимости предоставления данных, агент мониторинга опрашивает узлы аппарата. Собранные данные он предоставляет серверу мониторинга.

Агент посылает такие данные, как:

Статус автомата;

Режим работы автомата;

Состояние дверей автомата;

Открыта или закрыта смена на аппарате;

Информацию о значении  внутренних счетчиков узлов аппарата;

Информацию о состоянии каждого узла аппарата;

Коды ошибок, если такие есть и т.п.

Сервер, получив новые данные о состоянии автоматов, записывает их в свою базу данных.

После записи новых данных, приложение АРМ мониторинга запрашивает новые данные из базы данных и отображает их в удобном для восприятия и анализа вида.

Полный цикл опроса составляет от 35 до 45 минут.

Кроме  того, каждый аппарат раз в определенный промежуток времени посылает серверу сообщение, повествующее о том, что автомат всё ещё работает.

Если сервер в течение времени, превышающем значение тайм-аута, не получил ни одного сообщение от аппарата, то он немедленно присваивает этому аппарату присваивает статус «Недоступен» и записывает эту информацию в базу данных.



Система мониторинга X.4

Система мониторинга и управления терминалами самообслуживания «Х.4» – это программный комплекс, который дает возможность производить мониторинг программно-аппаратного состояния терминалов самообслуживания, мониторинг событий и транзакций, удаленно управлять устройствами самообслуживания, работать с файловой системой. «Х.4» также обеспечивает ряд дополнительных возможностей, таких как: планировщик задач, информирование об определенных событиях, формирование отчетов по событиям и транзакциям и т.п.



Рисунок 7. Архитектура X4

Система мониторинга Х.4 разрешает:

обеспечивать параллельную поддержку разных финансовых протоколов;

строить масштабированные решения для всей информационной инфраструктуры банка;

гибко конфигурировать и администрировать все настройки.

Система мониторинга ProView

ProView – это система, которая предназначена для мониторинга и администрирования систем самообслуживания. Администратору предоставляется обзор сети самообслуживания таким образом, что он может распознать состояние различных терминалов, которые находятся под его ответственностью, просмотрев его только обзорно. Изменение статусов отображается автоматически.



Рисунок 8. Архитектура системы ProView

Основными сферами применения системы мониторинга ProView являются:

Функциональные:

техническое обслуживание (удаленная диагностика);

работа отдела поддержки (удаленная диагностика, отдел поддержки пользователей)

работа центрального администрирования (удаленная диагностика, пересылка файлов, удаленное управление);

Организационные:

управление на уровне учреждения, отраслевое или локальное;

централизованное управление, управление в центре обработки данных, или в центре управления внешними системами.

Архитектура разрабатываемой системы

Система мониторинга, программные средства которой разрабатываются в данной дипломном проекте, является логичным продолжением системы мониторинга АПБ метрополитена.

Основные изменения, касающиеся новой системы мониторинга, заключаются в изменении принципа работы системы в целом:



Рисунок 9. Архитектура разрабатываемой системы

Как только изменятся состояние аппарата продажи билетов, программное обеспечение аппарата записывает информацию об изменениях в разделяемую память.

Агент мониторинга считывает информацию из разделяемой памяти и формирует запрос серверу мониторинга.

Сервер мониторинга получив новые данные от аппарат, сравнивает его новое состояние с последней записью о его состоянии в базе дынных.

Если полученная информация является новой, то сервер производит запись этой информации в базу данных, а затем транслирует эту информацию в АРМ мониторинга.

Если снова полученная информация не является новой, то сервер мониторинга просто игнорирует её, не производя запись в базу данных.

Если сервер, в течение заданного интервала времени не получил ни одного сообщения от агента АПБ, то он автоматически меняет статус аппарата на «Недоступен», производя соответствующие изменения в базе данных и транслируя эту информацию на АРМ мониторинга.

Такой подход позволяет уменьшить время обновления состояний в автомата, уменьшить нагрузку на сервер мониторинга, а так же сократить количество лишней информации.

Таким образом, оператор АРМ Мониторинга всегда имеет доступ к актуальной информации, что позволяет ему быстро реагировать на аварийные ситуации, тем самым уменьшая время простоя автомата.

Постановка задачи

Целью дипломного проекта является создание программных средств, позволяющих осуществлять контроль над состоянием аппаратов продажи проездных билетов и составлять оптимальный график маршрута сервисного инженера. Исходя из требований, предъявляемых к проекту необходимо создать два приложения входящих в систему мониторинга:

АРМ Мониторинга – приложение мониторинга за состоянием аппаратов с графическим интерфейсом пользователя.

Сервер мониторинга – подсистема сбора и хранения информации, поступающей с автоматов продажи билетов и транслирующая её на АРМ Мониторинга.

Каждое программное средство должно реализовывать набор предъявляемых к ним требований. АРМ Мониторинга должен реализовывать следующие требования:

В АРМ мониторинга должна отображаться информация, в соответствии с сообщениями, полученными от агента устройства.

В АРМ мониторинга должна отображаться общая структура устройств.

Для каждого устройства должна отображаться информация: 

расположение устройства (для метро – ветка/станция/вестибюль, для других устройств – адрес или уникальное название местоположения, например, торговый центр «…»)

статус устройства.

В АРМ мониторинга должна отображаться детальная информация об устройстве и о состоянии узлов устройств.

Сервер мониторинга должен реализовывать следующие требования:

Сервер мониторинга, получает информацию от агента устройства. Информация содержит данные о событии и дату/время произошедшего события.

Полученная от агента устройства информация должна записываться в базу данных мониторинга и транслироваться в АРМ мониторинга.

Если за период времени, превышающий значение тайм-аута отсылки сообщений, сервер мониторинга не получил какого-либо сообщения от устройства, то устройство получает статус «Не доступен».

Разработка агента и программного обеспечения автомата не входит в рамки текущего дипломного проекта.




Проектирование АРМ мониторинга и сервера мониторинга

Диаграммы вариантов использования

В процессе анализа предметной области были выявлены и конкретизированы функциональные требования к АРМ мониторинга и сервера мониторинга.

На нижеследующей диаграмме вариантов использования UML данные требования представлены в графическом виде.



Рисунок 10. Диаграмма вариантов использования «Оператор»

Диаграммы вариантов использования являются обобщенным графическим представлением функциональных требований. Рисунок 10 представляет диаграмму вариантов использования АРМ мониторинга.

Сценарии вариантов использования

В таблицах 1-12 описываются сценарии вариантов использования АРМ мониторинга.

Таблица 1. Вариант использования «Добавление новой линии»

Таблица 2. Вариант использования «Добавление нового автомата»

Таблица 3: Вариант использования «Добавление новой станции метро»



Таблица 4. Вариант использования «Расширение списка автоматов»



Таблица 5. Вариант использования «Просмотр списка автоматов»

Таблица 6. Вариант использования «Проверка состояния автомата»

Таблица 7: Вариант использования «Проверка режима работы автомата»

Таблица 8. Вариант использования «Проверка наличия ошибок в работе автомата»

Таблица 9: Вариант использования «Проверка состояния узлов автомата»

Таблица 10: Вариант использования «Просмотр информации по узлам автомата»

Таблица 11: Вариант использования «Просмотр списка узлов автомата»

Таблица 12: Вариант использования «Проверка версии ПО автомата»

Структура АРМ мониторинга

Структура графического интерфейса пользователя приложения АРМ мониторинга должна удовлетворять описанным ниже требованиям. 

Приложение АРМ мониторинга настольное. Окно приложения должно состоять из трех частей:

Окно дерева автоматов;

Окно состояния автомата;

Окно узлов автомата.

Окно дерева автоматов отображает соответственно графический элемент «дерево», ветками которого являются линии и станции метрополитена. Листьями этого дерева являются непосредственно сами автоматы. При выборе автомата из этого дерева, информация о нем отображается в окне состояния автомата.



Окно состояния автомата отображает состояние и параметры выбранных автоматов. Окно состояния содержит вкладки, на каждой из которых отображается информация об одном конкретном автомате. При открытии вкладки в окне узлов автомата отображаются узлы, а также их состояние в окне узлов автомата.

В окне узлов автомата отображается таблица с узлами конкретного автомата. При выборе узла, в этом же окне отображается информация о нём (например, производитель, модель, версия драйвера и т.п.).

Окно приложения АРМ мониторинга должно также содержать строку меню и панель инструментов.

Общий вид структуры приложения можно посмотреть на рисунке 11



Рисунок 11. Структура окна приложения АРМ мониторинга




Разработка АРМ мониторинга и сервера мониторинга

Обоснование выбора средств разработки

Для реализации выдвинутых к системе требований, можно выбрать такие средства реализации как Java, Eclipse, Microsoft SQL Server Express, Apache Tomcat. 

Основной особенностью разработки системы мониторинга является то, что приложение АРМ мониторинга является так называемым RCP (Rich Client Platform) приложением.

Rich Client Platform – набор модулей для разработки программного обеспечения. RCP состоит из:

Ядра.

Фреймворка для разработки.

Набора виджетов.

Средства для работы с файлами.

Интегрированной рабочей среды.

RCP является основой для настольных приложений. Большинство настольных приложений имеют схожие элементы, такие как меню, панели инструментов, панели прогресса, панели статуса, визуализация данных, настройки приложений, сохранения и загрузка данных и конфигураций пользователя, разбиение экрана, локализация, системы помощи и тому подобные. Для этих и иных типичных для клиентских приложений элементов, RCP предоставляет фреймворк, с которым все эти элементы и функции могут быть просто и быстро уложены вместе.

Широкие возможности конфигурируемости и расширяемости приложений занимает центральное значение во фреймворках такого типа.

Rich Client Platform предоставляет разработчику множество интерфейсов прикладного программирования (API). Например, эти интерфейсы могут быть использованы разработчиками для управления окнами и меню или для поддержки отображения настроек. Таким образом, благодаря возможности использовать множество раз эти предопределенные компоненты, программист может сконцентрироваться над реализацией бизнес-логики, не тратя время на программирование компонент.

Java – объектно-ориентированный язык программирования, разработанный компанией Sun Microsystems.

Одиннадцать основных особенностей Java. Java  это простой, объектно-ориентированный, распределенный, надежный, безопасный, не зависит от архитектуры компьютера, переносимый, интерпретируемый, высокопроизводительный, многопотоковый и динамичный язык.

Программы на Java транслируются в байт-код, выполняемый виртуальной машиной Java (JVM) — программой, обрабатывающей байтовый код и передающей инструкции оборудованию как интерпретатор.

Достоинством подобного способа выполнения программ является полная независимость байт-кода от операционной системы и оборудования, что позволяет выполнять Java-приложения на любом устройстве, для которого существует соответствующая виртуальная машина. Другой важной особенностью технологии Java является гибкая система безопасности благодаря тому, что исполнение программы полностью контролируется виртуальной машиной. Любые операции, которые превышают установленные полномочия программы (например, попытка несанкционированного доступа к данным или соединения с другим компьютером) вызывают немедленное прерывание.

Часто к недостаткам концепции виртуальной машины относят то, что исполнение байт-кода виртуальной машиной может снижать производительность программ и алгоритмов, реализованных на языке Java.

Eclipse – свободная интегрированная среда разработки модульных кроссплатформенных приложений. Развивается и поддерживается Eclipse Foundation.

Eclipse в первую очередь служит как платформа для разработки расширений. Любой разработчик может расширить её своими модулями. Благодаря этому Eclipse идеально подходит для разработки RCP приложений. Модульность, кроссплатформенность, поддержка мультиязычности, бесплатность, огромное количество существующих плагинов, библиотек и фреймворков. Все это позволяет создавать приложения коммерческого уровня.

 

Рисунок 12. Архитектура Eclipse

Eclipse написана на Java, потому является платформо-независимым продуктом, за исключением библиотеки SWT, которая разрабатывается для всех распространённых платформ (см. ниже). Библиотека SWT используется вместо стандартной для Java библиотеки Swing.

Microsoft SQL Server Express – это платформа баз данных, основанная на Microsoft SQL Server. SQL Server Express облегчает разработку управляемых данными приложений с широкими возможностями, обеспечивает улучшенную безопасность хранилищ и быстрое развертывание. Основной используемый язык запросов – Transact-SQL. 

Microsoft SQL Server Express можно бесплатно загружать и распространять. Если необходимы дополнительные функции базы данных, выпуск SQL Server Express можно легко обновить до расширенных версий SQL Server.

Apache Tomcat – контейнер сервлетов с открытым исходным кодом, разрабатываемый Apache Software Foundation. Реализует спецификацию сервлетов и спецификацию JavaServer Pages (JSP). Написан на языке Java.

Tomcat позволяет запускать веб-приложения, содержит ряд программ для самоконфигурирования.

Tomcat используется в качестве самостоятельного веб-сервера, в качестве сервера контента в сочетании с веб-сервером Apache HTTP Server, а также в качестве контейнера сервлетов в серверах приложений JBoss и GlassFish.

Требования к эксплуатации, составу и параметрам технических средств

Условия эксплуатации программного комплекса должны соответствовать условиям работоспособности оборудования, используемого для работы с программным комплексом (стационарные и портативные персональные компьютеры, сервер)

Технические средства сервера должны быть рассчитаны с учётом предполагаемой высокой нагрузки – приём, обработка информации о состоянии от 1200 автоматов и рассылка полученной информации, на АРМ мониторинга.

Технических средств сервера мониторинга должны быть следующие:

Windows Server 2012;

Процессор с 2 ядрами и более

ОЗУ емкостью от 2 Гб.

Свободный объём памяти жёсткого диска 1 Тб;

Сетевая карта Ethernet с поддержкой скорости передачи данных по локальной сети от 100 Мбит/с;

Технические средства рабочей станции пользователя должны быть следующие:

Windows XP и выше.

Процессор с 2 ядрами и тактовой частотой каждого ядра от 1,2 ГГц;

ОЗУ емкостью от 1 ГБ;

Свободный объём памяти жёсткого диска от 5 ГБ.

Сетевая карта Ethernet с поддержкой скорости передачи данных по локальной сети от 100 Мбит/с.

Клавиатура;

Мышь.

Для взаимодействия серверной и клиентских частей программного комплекса, сервер и персональные компьютеры пользователей должны быть объединены в локальную вычислительную сеть.

Пользователи АРМ мониторинга должны обладать минимальными знаниями и навыками для работы с компьютером.




Отладка АРМ мониторинга и сервера мониторинга

Прежде чем выпускать конечный продукт необходимо протестировать его работу, проверить корректность выводимых данных, способность принимать данные от других приложений и другие требования, предъявленные к нему.

Для проверки работоспособности приложения АРМ мониторинга и сервера мониторинга мною были разработаны наборы тест-кейсов. Разрабатываемый продукт считается законченным, если он прошел все тесты.

В данных тестах применяется сокращение АПБ, что расшифровывается как автомат продажи билетов.

Тестирование приложения АРМ мониторинга

В этом пункте представлены сценарии тестирования приложения АРМ мониторинга.

Следующие три сценария тестирования необходимы для того, что бы проверить корректность отображения статусов устройств. В следующих трех случаях имитируется смена режимов работы отслеживаемого автомата и отказ одного из его узлов. Эти тесты проводятся с помощью корректно работающих автоматов.

Сценарий 1. Режим продаж

Сценарий 2. Режим кассира.

Сценарий 3. Сервисный режим



Сценарий 4. Ошибка узла



Следующие сценарии проверяют работу функции добавления и удаления в список автоматов новых линий метрополитена, станций и автоматов.

Сценарий 5. Добавление линии метрополитена

В описанном выше сценарии тестировщик сначала создает новую линию метрополитена, а затем удаляет её.

Сценарий 6. Добавление устройства.

В выше описанном сценарии тестировщик создаёт новый автомат, а затем удаляет его, тем самым проверяя правильность выполнения функций добавления и удаления автомата.

Далее представлены сценарии тестирования, проверяющие функции отображения различной информации по автомату

Сценарий 7. Отображение детальной информации в АРМ Мониторинга

Сценарий 8. История статусов АПБ

Сценарий 9. Детальная информация по узлам АПБ

В написанных выше сценариях тестировщик должен проверить корректность отображения получаемой от сервера мониторинга информации о текущем автомате.

Тестирование сервера мониторинга

В этом пункте представлены сценарии тестирования сервера мониторинга и корректность передачи данных от сервера к клиенту.

Сценарий 1. Ошибка связи

Благодаря этому сценарию оператор может определить, корректно ли записываются данные об ошибке (в данном случае потеря связи с автоматом) в базу данных сервера мониторинга.

Сценарий 2. Ошибка дверей

Сценарий 3. Ошибка купюроприемника

Следующие сценарии тестирования должны проверять корректность передачи информации об ошибке от сервера к приложению АРМ мониторинга. АРМ мониторинга должен корректно отобразить полученную ошибку.

Сценарий 4. Ошибки связи

Сценарий 5.Ошибка хоппера

Сценарий 6. Ошибка кассеты купюроприемника

Следующие два теста проверяют, корректно ли сервер определяет состояние автомата как «Недоступен» и передает ли он эту информацию приложению АРМ мониторинга.

Сценарий 7. Ошибка связи

Сценарий 8. Ошибка связи






Контрольный пример работы

Контрольный пример работы и описание интерфейса

На примере работы приложения АРМ мониторинга в данной главе представлен графический интерфейс пользователя и его описание.

После запуска, приложение АРМ мониторинга сразу отображает рабочую область, состоящую из 3 частей: список автоматов метрополитена, состояние автоматов и список узлов автомата.



Рисунок 13. Окно приложения АРМ мониторинга

В списке автоматов метрополитена автоматы рассортированы по линиям, станциям и вестибюлям.







Рисунок 14. Список автоматов метрополитена

 Если пользователю необходимо получить информацию о состоянии узлов выбранного автомата, то её он может получить в окне состояния автомата.



Рисунок 15. Состояние автомата

Всю необходимую информацию об узлах выбранного автомата пользователь может получить в списке узлов автомата



Рисунок 16. Список узлов автомата

Если у пользователя будет необходимость добавить в список автоматов новую линию метрополитена, он может воспользоваться функцией добавления линий и автоматов метрополитена.



Рисунок 17. Окно добавления новой линии, станции и вестибюля метрополитена





Рисунок 18. Окно добавления нового автомата




Заключение

В данной дипломном проекте представлено решение задачи разработки программных средств системы мониторинга автоматов продажи проездных билетов.

Результат выполнения дипломного проекта:

Проведен анализ предметной области.

Поставлена задача дипломного проекта, которая была определена как разработка программных средств системы мониторинга автоматов продажи проездных билетов.

Выполнено проектирование программных средств.

Определены требования к эксплуатации, составу и параметрам технических средств.

Разработано приложение АРМ мониторинга и сервер системы мониторинга.

Представлен контрольный пример работы программных средств и продемонстрирован пользовательский интерфейс программных средств.




Список литературы

К. Хорстман, Г. Корнел  «Java 2. Том 2. Тонкости программирования. Библиотека профессионала. 7-е издание», 2008 г., 983 страницы.

Heiko Böck «The Definitive Guide to NetBeans Platform 7», 2011, 522 страницы.

Статья «Удаленный мониторинга торгового автомата. Суть и цена вопроса» - 

Статья «Система мониторинга и управления для автоматов eVend» - .

Обзорные статьи систем мониторинга - , .

Статья «Разработка простого Eclipse RCP приложения» - .

Статья «Eclipse 4 RCP - Tutorial» - http://www.vogella.com/articles/EclipseRCP/article.html.

Статья «Разработка вашего первого Eclipse RCP приложения» - http://www.ibm.com/developerworks/ru/edu/os-ecl-rcpapp/