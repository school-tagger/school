Аннотация



Данная дипломная работа посвящена разработке системы электронного журнала/дневника для школ.

Разработанное программное обеспечение позволяет автоматизировать контроль качества и документооборота.

В первой главе проводится анализ предметной области, описывается существующий технологический процесс в школе, рассматриваются уже существующие аналоги и выдвигаются требования к разрабатываемому программному продукту.

Во второй главе строятся диаграммы использования: частные для каждой АРМ (Автоматизированное Рабочее Место) и общая модель. Помимо этого, в данной главе проводится разработка базы данных.

В третье главе разрабатываются алгоритмы работы системы для каждой АРМ в отдельности.

Четвертая глава является контрольным примером, который проводит тестирование работоспособности системы для разных АРМ.

В заключении подводятся итоги и оцениваются результаты работы.









Введение



Мы живем в удивительное время, большую роль в котором играет повсеместное распространение интернета. Теперь, находясь дома, человек может работать, взаимодействовать и общаться с другими людьми, работать с  массивами информации. Благодаря тому, что доступ в сеть есть почти во всех (если не везде) странах и во многих городах у людей появляются новые возможности, которые не были раньше. И это позволяет уже иначе работать с информацией.



Тем не менее, во многих учебных заведениях, (а именно в школах) по-прежнему работают с бумажными носителями, такими как: локальные акты, протоколы, дневники, журналы, приказы и прочие документы. У них есть определенные недостатки:

Занимают много места.

Имеют большой вес, особенно при большом их количестве.

Требуют особых условий хранения.



Электронные носители информации позволяют решить многие эти проблемы, поскольку они:

Занимают мало места.

Способны хранить большие объемы информации.

Позволяют с большой легкостью копировать информацию, что позволяет решить проблему ее утрачивания.



Однако же наличие одних электронных ресурсов недостаточно для того, чтобы наладить эффективную работу в школе. Для этого необходимо использовать современные носители информации вкупе с системой, которая позволит иметь доступ к информации, обрабатывать и при необходимости редактировать ее, а также выводить данные на печать.



Для решения поставленной задачи необходимо разработать систему, позволяющей получить доступ из сети (локальной, либо сети интернет – на выбор школы), под названием «Электронная школа». Необходимость в такой системе имеется давно и ее внедрение позволит: 

Повысить успеваемость учащихся за счет оперативности в получении достоверной информации родителей о посещаемости занятий и о предстоящих работах учеников.

Резко сократить бумажные потоки документооборота и перейти на электронный документооборот.

Освободить преподавательский состав школы от рутинного труда по составлению отчетов и обмену информацией.



Разработка данной системы будет вестись силами одного специалиста, и будет включать себя несколько областей, такие как: анализ области, разработка базы данных, написание кода программы, реализация интерфейса.



Для реализации основной логики проекта будет использоваться фреймворк Ruby on Rails 3, поскольку обладает большим набором методов и позволяет проектировать качественные и безопасные проекты, держащие хорошую нагрузку. В качестве базы данных будет использоваться PostgreSQL 9, поскольку является открытым, бесплатным и обладающим очень мощным функционалом прямо из коробки. Для интерфейса будет использован CSS-фреймворк Twitter Bootstrap 2.



Результатом работы будет являться готовая система, которую можно внедрить на сервер самой школы и пользоваться ею локально. Также систему можно будет запустить на сайте, и дать доступ сразу многим школам.




Анализ предметной области

1.1 Описание предметной области



Школа - учебное заведение для получения общего образования. В широком смысле, данное слово способно применяться в качестве названия для остальных образовательных учреждений.



Время в школе разделяется на следущие этапы: внеурочная деятельность, перемена, урок. Урок и перемена, как правило, сменяют друг друга несколько раз. Завершается же учебный день обычно внеурочной деятельностью.

Урок  - занятие школьников по предметам.



Перемена  - отдых между уроками.



Внеурочная деятельность – это такая система дополнительного образования, при которой ученик располагается в школе после уроков (и ему/ей  обеспечивается питание, а также дается возможность для подготовки своих уроков).



В школах существует такие понятия как отметка и оценка. Отметки в русских школах выставляются по пятибалльной системе (и имеют значение от 1 до 5). Отметки 1 и 2 являются неудовлетворительной оценкой. Отметка 3 является удовлетворительной, но недостаточно высокой. Отметка 4 – хорошая оценка, показывающая хорошие знания. Отметка 5 - является отличной оценкой, лучшей возможной.



Успеваемость в школе оценивается по следующей формуле:



где N – общее число учащихся в классе (всех), шт.;

N2 – количество учащихся, получивших отметку “2”, шт.



Качество знаний в школе оценивается по следующей формуле:



где N – общее число учащихся в классе (всех), шт.;

N4 – количество учащихся, получивших отметку “4”, шт;

N5 – количество учащихся, получивших отметку “5”, шт.



Порой к самой оценке присоединяется символ минуса либо символ плюса. В частности, если взять отметку 4+, то она будет выше, чем 4, но при всем при этом ниже, чем 5−. И так далее. Стоит при этом заметить, что минусы и плюсы не учитываются в дальнейшем. Оценки с минусом либо плюсом не ставятся в сам же аттестат. Минусы (как и плюсы) почти никогда не добавляются к неудовлетворительным отметкам (1 и 2), поскольку существуют полуофициальные «правила». Для вывода «рубежной отметки» за различные периоды используется определённая механика, базирущаяся на текущих отметках. Он (метод) аналогичен расчёт среднего арифметического, при котором  отдается приоритет конечным значениям.



Образовательные учреждения, которые дают общее среднее образование: гимназии, лицеи и общеобразовательные школы. Поступают в общеобразовательное учреждение в 6-7 лет, а завершают обучение в 17-18 лет. Классическая программа в школе для общего среднего образования предполагает 10 - 12 классов и столько же лет для обучения учащихся.



Первого сентябра начинается учебный год. Заканичиваться он может либо в июне, либо в мае. Ниже представлены основные способы для деления учебного года:

Деление на три триместра. При таком способе имеется 3 триместра, каждый из которых делится на 5 блоков каникулами длиной в неделю между блоками. Также проводятся летними каникулы между I и III триместрами. Помимо первого способа, программа в школе может делиться на триместры, но не иметь семидневных каникул, а следовать каникулам по Госстандарту. Также имеется еще один вариант, при котором перемежается пяти, либо шести-недельные учебные модули с недельными каникулами. Триместр составляется из двух таких периодов.

Деление на четыре четверти. При таком способе имеется четыре четверти и между каждой из них учеников отпускают на каникулы («зимние», «весенние», «летние», «осенние»).



В старших классах (с десятого по одиннадцатый) год разделяют на 2 полугодия.



Итоговая оценка по изучаемым предметам выставляется в конце каждого триместра, либо четверти. Годовая оценка проставляется (как и полагается) в конце каждого года. Порой оценка за полугодие отмечается совместно с оценками за четверть. Ученика могут оставить на второй год или перевести на класс ниже, если он имеет неудовлетворительные годовые оценки.



Экзамены по предметам сдаются в конце последнего класса, а также в конце 9. По результатам годовых оценок и экзаменов и выставляются оценки в аттестат. При наличии предметов, по которым нет экзаменов, в аттестат пишут годовую оценку.



Ученик получает на руки свидетельство о своем полном среднем образовани. В России он носит название “Аттестат о полном общем образовании” после успешного завершения обучения 11 классов. Если же ученик закончил только 9 классов, то он получает аттестат об основном общем образовании.



Здесь также важно заметить, что по закону РФ “об образовании” обязательным является среднее (полное) общее образование. В школе этому соответствует 11 лет обучения. Возможная альтернатива – это получение среднго профессионального образования (в ПТУ либо колледже), что также подразумевает получение полного общего образования.



В школах возможно два типа рабочих недель. Первая: пятидневная рабочая неделя, при которой выходными является суббота и воскресение. Вторая: шестидневная неделя, при которой воскресенье является выходным. 



Ежедневно в школе проводится от четырех до восьми уроков. Причем, по новым нормам от СанПиН, можно проводить не более пяти уроков в классах с первого по четвертый включительно, также разрешено проводить не более шести уроков в 5 и 6 классах, а 7-11 классах - не более семи. В этой системе проводят уроки в 45 минут длинной (и не менее 35 минут). Все уроки делятся переменами по пять-двадцать минут. Ученики выполняют домашние задачи (для младших школьников задания на дом могут не давать) кроме своего обучения в классах.



Для наглядности, приведем схему управления в самой школе:
















1.2 Определение веб-сайта



«Сайт — совокупность электронных документов(файлов) частного лица или организации в компьютерной сети, объединённых под одним адресом (доменным именем или IP-адресом).»



Всемирная паутина состоит из всех существующих сайтов, которые паутина объединяет в единое целое. Таким образом, различные цистицы информации со всех частей мира образует единую базу данных мирового масштаба. Для работы людей с сайтами был разработан специальный протокол под названием HTTP.



Страницы сайтов — это определенный массив текстовых файлов, написанных с использованием языкя разметки (HTML). Такие файлы загружаются на компьютер пользователя с помощью браузера, и выводятся на какое-либо средство отображение пользователя: экран телефона, синтезатор речи, монитор.



Сам язык разметки HTML являются весьма мощным (хотя и избыточным) иструментом для работы. Он позволяет создавать гиперссылки, различает функциональные элементы, разрешает вставлять картинки (а также аудио и видео элементы).



Для того чтобы изменить дизайн страницы используется язык под названием CSS. Он позволяет собрать воедино в одном (или нескольких) файле все элементы, отвечающие за форматирование (размер и тип шрифта), оформление (цвет фона, текста) и так далее.



Для придания странице динамичности используется различные языки программирования, наиболее популярными из которых являются JavaScript и PHP.



Страницы сайтов могут быть статичным (и простым) набором файлов или создаваться определенной программой на сервере. Такая страница(-ы) может быть произведена на заказ либо же сделана на основе существующих программных решений, рассчитанных на определенный класс задач. Различные решения имеют различную степень гибкости и сложности в освоении. Такие программы называются системами управления содержимым (CMS).



Первоначально первые сайты являлись набором неизменных документов, такие как сайт-визитка. Но технологии (как и коммуникации) развивались, и увеличивалось количество ссылок (внешних и внутренних). У сайтов появилось больше целей и возможностей. Появились сайты, предназначавшиеся для отображения новостей, различного типа медиа и так далее. На сегодняшний день современный сайт характеризуется высокой динамикой, интерактивностью и интуитивностью. Для таких случаев специалисты используют термин веб-приложение — готовый программный комплекс для решения задач сайта. Веб-приложение без данных есть сайт только с технической точки зрения, хотя оно и входит в состав сайта. Продвижение сайтов в поисковых сетях стало большой индустрией.



Большую роль по обслуживанию и уходом за сайтом несет человек, которого называют администратором. Как правило, первоначальную разработку сайта выполняет опытный специалист или группа специлистов: дизайнер, верстальщик, программист. В настоящее время создано большое число программ, что повышает требования к разработчиками. Соответственно, появилось большое число узких направлений, таких как верстальщик сайта.



Разумеется, простую и статическую страничку способен сделать даже секретарь. Но для больших и сложных проектов нужны опытные и порой узкие специалисты, целая команда таких людей. Для обратной связи с пользователями на портале организуется техническая поддержка из одного и более людей. Множество сайтов (таких как онлайн-магазины) обновляют по разу и более в день. Новостные сайты указывают дату публикации с точностью до минуты, поскольку журналисты имеют разный приоритет на цитирование и ссылки.



По технологическим особенностям сайты бывают следующие:

Сайты, созданные с применением Flash-технологий, при которой сайт находится на одной странице, предназначенной исключительно для загрузки Flash-файла.

Статические — состоящие из статичных html (htm, dhtml) страниц, составляющих единое целое. 

Динамические — собраны из динамичных html (htm, dhtml), скриптов, информации, страниц-шаблонов, и так далее в качестве отдельных файлов. Содержимое страницы создается по запросу определенными скриптами.




1.3 Технологический процесс

1.3.1 Описание технологического процесса



Для лучшего понимания, что нужно от программного продукта необходимо описать технологический процесс.



Перед началом учебного года родители регистрируют своего ребенка в электронной системе, с помощью которой встают на очередь в учебное заведение. После этого завуч заводит личное дело на нового ученика. В личное дело заносится информация об ученике, его родителях и их контактные данные. Если ученик переводится из другой школы, то родители передают завучу личное дело с предыдущего места обучения. На основе имеющихся личных дел учеников формируются классы. Каждому классу назначается классный руководитель из числа учителей этой школы. Завуч составляет расписание на основе индивидуального учебного плана образовательного учреждения.



Для каждого класса заводится журнал, в котором для каждого предмета отводятся одна или несколько страниц (в зависимости от количества занятий за год), где перечислены ученики и напротив их фамилий ставятся отметки о посещении занятий и оценки за различные работы (контрольные, домашние, лабораторные, классные и т. д.). В журнале своего класса классный руководитель заполняет номер класса, ФИО учеников, которые обучаются в этом классе, название предметов и ФИО учителей.



Учебный год разбивается на учебные периоды – четверти или треместры. В конце каждого учебного периода на основании отметок учеников и их посещаемости ставятся отметки за каждый преподаваемый предмет. В конце учебного года на основании промежуточной аттестации ставятся годовые отметки.



Перед началом учебного года родители должны приобрести ученику дневник. В дневнике хранится расписание класса, информация о прошедших и предстоящих работах (контрольные, домашние, лабораторные, классные и т. д.) и оценки за прошедшие работы. В конце дневника приведена сводная таблица, где напротив каждого предмета отражены отметки ученика за каждый учебный период.



На протяжении всего учебного года проводятся занятия, на которых учителя обучают учеников предметам согласно учебной программе. На занятиях учителя оценивают знания учеников  на основе разного вида работ (контрольные, домашние, лабораторные, классные и т. д.). 



Учителя на каждом уроке отмечают в журнале посещаемость учеников. Также в журнал ставятся отметки за определенный вид работы (контрольные, домашние, лабораторные, классные и т. д.).



Классный руководитель раз в месяц подводит итоги о количестве уроков, пропущенных учениками. В конце каждой недели классный руководитель собирает дневники у своего класса и переносит в них отметки из классного журнала. В начале следующей недели проверяется наличие подписи родителя  в дневнике ученика, ее присутствие означает то, что он ознакомился с отметками своего ребенка.



Несколько раз в год проводятся родительские собрания, на которых классный руководитель и преподавательский состав уведомляют  родителей об успеваемости и посещаемости учеников. Также на родительских собраниях классный руководитель обсуждает организационные вопросы с родителями учеников.



Классный руководитель занимается организацией и проведением мероприятий для своего класса. Ученики должны проинформировать классного руководителя о своей готовности/неготовности участвовать в мероприятии.



На основе годовых оценок принимается решение о переводе ученика в следующий класс. После окончания учебного года журнал отправляется в архив. Если родители ученика решили перевести его в другую школу по своему личному желанию, то завуч отдает личное дело на руки родителям ученика. Если ученик окончил школу, то его личное дело закрывается и передается в архив.



1.3.2 Модель технологического процесса



Для большей наглядности представим вышеописанный технологический процесс на диаграмме IDEF0.


























1.4 Анализ программных продуктов конкурентов



В качестве конкуретных решений будут рассмотрены 5 систем: 

Web Школа

Электронный дневник школьника (Эдш)

Аверс: Электронный классный журнал

КлассИнфо

РУЖЕЛЬ



Таблица 1.1.



Анализ программных продуктов по основным показателям



Таблица 1.2



Анализ программных продуктов по функциональным возможностям электронного журнала








Таблица 1.3.



Анализ программных продуктов по функциональным возможностям электронного дневника учащегося





Таблица 1.4.



Анализ программных продуктов по способу информирования родителя о результатах успеваемости





1.5 Требования к реализуемой системе

1.5.1 Требования к функциям системы



На основе рассмотренных параметров у систем видно, что есть большая необходимость в системе, которая будет обеспечивать следующие возможности, устраняя недостатки существующих систем:

Возможность развернуть систему в качестве сайта и иметь доступ через сеть интернет.

Работа на основных операционных системах: Windows, Linux, Mac OS X.

Возможность развернуть систему локально и иметь доступ с ограниченного числа компьютеров.

Возможность выставления оценок с учетом значимости проводимого мероприятия.

Расчет уровня обученности и качества образования.

Создание резервной копии.



Очевидно, что изначально система должна обеспечивать базовые возможности, разные для различных АРМ.



Базовые функции самой системы:

Поддержка и разграничение прав доступа для учетных записей различного типа, таких как: администратор, заместитель директора по учебной работе, классный руководитель, учитель, ученик, родитель.



Функции АРМ Заместителя директора по учебной работе:

Назначение преподавательского состава.

Создание личного дела на нового ученика.

Назначение родительских собраний.

Просмотр отчета о проведенном родительском собрании.

Просмотр отчетов о проведенных мероприятиях.

Составление учебных программ.

Составление расписаний занятий.

Печать расписания занятий для каждого класса.

Печать личного дела ученика.

Перевод учеников в следующий класс.

Формирование классов.



Функции АРМ Классного руководителя:

Просмотр журнала своего класса.

Составление отчетов о мероприятиях.

Составление отчетов о родительских собраниях.

Просмотр расписания своего класса.

Организация внеклассных мероприятий.



Функции АРМ Учителя:

Заполнение журнала по своему предмету (включает в себя отметки, посещаемость, темы уроков).

Назначение предстоящих работ (домашние, контрольные, лабораторные).

Просмотр статистики по ученикам (посещаемость, средний балл, степень обученности, качество знаний).



Функции АРМ Ученика:

Просмотр расписания своего класса.

Просмотр предстоящих мероприятий и подтверждение своего участия в них.

Просмотр успеваемости по предметам (посещаемость, ср. балл).



Функции АРМ Родителя:

Просмотр расписания своих детей.

Редактирование информации о себе и своих контактах.

Просмотр информации о предстоящих родительских собраниях.



Функции АРМ Администратора:

Создание резервной копии базы данных.

Восстановление базы данных из резервной копии.

Создание учетных записей завуча и учителя.

Редактирования логинов и паролей всех учетных записей системы.



1.5.2 Требования к надежности системы



Система должна обладать надежностью, для обеспечения круглосуточной работы пользователей и обеспечивать оперативное восстановление работоспособности при сбоях.



Система должна обеспечивать отсутствие отказов в работе программного обеспечения, развернутого в составе системы, приводящих к длительной остановке процесса эксплуатации программных средств.



Надежное функционирование программного комплекса должно быть обеспечено выполнением следующих мероприятий:

Организация бесперебойного электропитания технических средств.

Использование лицензионного программного обеспечения.

Контроль над целостностью данных на уровне СУБД.

Сохранение целостности данных при нештатном завершении программы.

Сохранение работоспособности программного обеспечения при некорректных действиях пользователя.

Регулярное резервное копирование базы данных.

Разграничение прав доступа пользователей системы.



1.5.3 Требования к условиям эксплуатации



Эксплуатация разрабатываемой системы возможна при наличии необходимого технического оснащения, описанного в пункте 1.4.4.



Для нормальной эксплуатации разрабатываемой системы должно быть обеспечено бесперебойное питание сервера.



При эксплуатации система должна быть обеспечена соответствующая стандартам эксплуатации средств вычислительной техники температура и влажность воздуха (ГОСТ 21552-84) .



Периодическое техническое обслуживание используемых технических средств должно проводиться в соответствии с требованиями технической документации изготовителей, но не реже одного раза в год.



Периодическое техническое обслуживание и тестирование технических средств должны включать в себя обслуживание и тестирование всех используемых средств, включая рабочие станции, серверы, кабельные системы и сетевое оборудование, устройства бесперебойного питания.



В процессе проведения периодического технического обслуживания должны проводиться внешний и внутренний осмотр и чистка технических средств, проверка контактных соединений, проверка параметров настроек работоспособности технических средств и тестирование их взаимодействия.



На основании результатов тестирования технических средств должны проводиться анализ причин возникновения обнаруженных дефектов и приниматься меры по их ликвидации.



Восстановление работоспособности технических средств должно проводиться в соответствии с инструкциями разработчика и поставщика технических средств и документами по восстановлению работоспособности технических средств и завершаться проведением их тестирования. 



Размещение помещений и их оборудование должны исключать возможность бесконтрольного проникновения в них посторонних лиц и обеспечивать сохранность находящихся в этих помещениях конфиденциальных документов и технических средств.



Размещение оборудования, технических средств должно соответствовать требованиям техники безопасности, санитарным нормам и требованиям пожарной безопасности.



Все пользователи системы должны соблюдать правила эксплуатации электронной вычислительной техники.



1.5.4 Требования к составу и параметрам технических средств



Сервер должен обеспечивать производительность даже под высокой нагрузкой. По данным сайта enigma.ru  этим требованиям соответствует сервер HP ProLiant ML370 G6. Он обладает следующими характеристиками:

Процессор: Intel Xeon E5620 (4 ядра, 2.40 ГГц).

Чипсет: Intel® 5520.

Оперативная память: 2 x 2ГБ DDR3-1333 RDIMM.

Жесткий диск: 300ГБ, 7200 об/мин, SATA.

Сетевая карта: Ethernet 1Гбит/cек.



Вся нагрузка по обработке данных возлагается на сервер, клиентские компьютеры должны обеспечить возможность запуска на них приложения, обменивающегося информацией с сервером, посредством протокола http. В качестве этого приложения должен использоваться браузер Google Chrome не ниже версии 24.



Операционная система (ОС), установленная на клиентских компьютерах должна обеспечивать запуск браузера Chrome. Рекомендуемая ОС – Windows 7 Home Basic.



Таким образом, рекомендуемые минимальные системные требования для клиентских компьютеров зависят от ОС, для Windows 7 Home Basic требования следующие:

Процессор с тактовой частотой не менее 1 ГГц.

Оперативная память объемом в 1256 МБ.

Жесткий диск со свободной памятью в 20 ГБ.

Монитор с разрешением 1042х768.

Графическое устройство DirectX 9 с драйвером WDDM версии 1.0 или выше.

Сетевая карта Ethernet 10 Мбит/сек.

Клавиатура.

Мышь.



Сервер должен быть оснащен источником бесперебойного питания. На рабочем месте завуча должен присутствовать принтер.



1.5.5 Требования к информационной и программной совместимости



Разрабатываемая система рассчитана на функционирование на центральном сервере под управлением ОС Ubuntu 12.04 LTS. LTS релиз системы характеризуется крайне высокой стабильностью и долгим временем поддержки от разработчиков. Кроме того, версия 12.04 является одной из наиболее последних, что гарантирует большую безопастность. Таким образом, именно это издание хорошо подходит в качестве системы для сервера.



База данных системы будет обслуживаться СУБД PostgreSQL 9. Она доступна под Ubuntu. «Ее сильными сторонами являются:

Поддержка БД практически неограниченного размера

Мощные и надёжные механизмы транзакций и репликации

Легкая расширяемость

Расширяемая система встроенных языков программирования: в стандартной поставке поддерживаются PL/pgSQL, PL/Perl, PL/Python и PL/Tcl; дополнительно можно использовать PL/Java, PL/PHP, PL/Py, PL/R, PL/Ruby, PL/Scheme и PL/sh, а также имеется поддержка загрузки C-совместимых модулей.»

Поддержка множества платформ, таких как: Unix, Mac OS, Windows.

Поддержка наследования.

Поддержка юникода.

Соблюдение принципов ACID (Atomicity, Consistency, Isolation, Durability – Атомарность, Согласованность, Изолированность, Надежность).

Поддержка полнотекстового поиска.  

Контроль целостности.

Соответствует стандартам ANSI SQL-92 и ANSI SQL-99.



Все это (а также наличие у автора опыта работы с этой БД) делает PostgreSQL отличным решением в качестве базы данных для разрабатываемой системы.



Базовым фреймворком для реализации системы должен быть Ruby on Rails 3 (далее - RoR). Преимущества в его использовании заключаются в следующем:

Качественная архитектура для разрабатываемых приложений, построенная по принципу MVC – Model, View and Controller (Модель, Представление и контроллер). Это позволяет граммотно писать приложение и дает хорошие возможности для расширения в будущем.

Открытость и расширяемость. Исходный код фреймворка доступен любому человеку. Это позволяет поправить сам движок при возникновении каких-либо серьезных проблем. Таким образом, можно наложить быстрый патч, исправляющий уязвимость еще до официального исправления.

Большой набор сторонних библиотек. Это позволяет быстро реализовывать функциаонал, такой как авторизация пользователей на сервере.

Assets pipeline. Начиная с версии 3.1, RoR включает в себя технологию под названием assets pipeline, которая сжимает в 2 отдельных файла все css и javascript приложения. Это позволяет экономить трафик пользователей и ускорить загрузку приложения.

Безопасность. Rails 3 спроектирован так, что изначально предоставляет хорошую защиту для веб-приложений. Среди них: защита от xss (путем генерации уникального токена для каждого пользователя), фильтрация отображаемой информации на странице по-умолчанию. Использование REST также позволяет создать защиту от CSRF (подделка межсайтовых запросов).

Интеграция с базой данных. Rails использует ORM (Object-relational mapping, Объектно-реляционное отображение) для взаимодействия с базой данных. Это позволяет писать гораздо меньше кода для выполнения рутинных операций. При всем при этом сохраняется возможность писать прямые SQL-запросы для реализации нетривиальных выборок.



Базовым языком программирования для реализации системы должен быть Ruby 1.9. Его преимущества заключаются в следующем:

Объектно-ориентирован. Ruby является полностью объектно-ориентированным, в нем все данные являются объектами.

Мультипарадигменность. Ruby поддерживает различные стили, такие как: процедурное программирование, объектно-ориентированное программирование и функциональное программирование (за счет замыканий, анонимных функций и обязательным возвратом любой функции значения).

Содержит сборщик мусора, который работает и для сторонних библиотек автоматически.

Имеет мощный механизм вызова и обработки исключений.

Перенесен на множество платформ. Работает на таких системах как Linux, Mac OS, Windows.

Имеет мощный набор методов из коробки, в том числе для работы с текстом.




Разработка моделей программной системы



2.1 Модель автоматизируемого процесса



2.2.1 Общая диаграмма вариантов использования










2.2.2 Диаграмма для АРМ Классный руководитель








2.2.3 Диаграмма для АРМ Заместитель директора по учебной работе.








2.2.4 Диаграмма для АРМ Учитель







2.2.5 Диаграмма для АРМ Ученик








2.2.6 Диаграмма для АРМ Родитель







2.2.7 Диаграмма для АРМ Администратор








2.3 Разработка Базы Данных



Проектирование баз данных – процесс создания схемы базы данных и определения неоходимых ограничений целостности.



Основные задачи проктирования баз данных заключается в следующем:

Обеспечение хранения в БД всей необходимой информации.

Обеспечение возможности получения данных по всем необходимым запросам.

Сокращение избыточности и дублирования данных.

Обеспечение целостности базы данных.



Разработка базы данных в данной дипломной работе будет состоять из следующих этапов:

Создание инфологических моделей каждой АРМ в отдельности и итоговой общей модели всей системы.

Создание даталогической модели всей системы.

Ограничения базы данных.



2.3.1 Локальные инфологические модели



«Концептуальное (инфологическое) проектирование — построение семантической модели предметной области, то есть информационной модели наиболее высокого уровня абстракции. Такая модель создаётся без ориентации на какую-либо конкретную СУБД и модель данных. 



Термины семантическая модель, концептуальная модель и инфологическая модель являются синонимами. Кроме того, в этом контексте равноправно могут использоваться слова модель базы данных и модель предметной области, поскольку такая модель является как образом реальности, так и образом проектируемой базы данных для этой реальности.»



2.3.1.1 Локальная инфологическая модель АРМ Заместитель директора по учебной работе








2.3.1.2 Локальная инфологическая модель АРМ Классный руководитель








2.3.1.3 Локальная инфологическая модель АРМ Учитель








2.3.1.4 Локальная инфологическая модель АРМ Ученик










2.3.1.5 Локальная инфологическая модель АРМ Родитель










2.3.1.6 Локальная инфологическая модель АРМ Администратор










2.3.2 Концептуальная инфологическая модель БД всей системы








2.3.3 Даталогическая модель.



«Логическое (даталогическое) проектирование — создание схемы базы данных на основе конкретной модели данных, например, реляционной модели данных. Для реляционной модели данных даталогическая модель — набор схем отношений, обычно с указанием первичных ключей, а также связей между отношениями, представляющих собой внешние ключи.

Преобразование концептуальной модели в логическую модель, как правило, осуществляется по формальным правилам.»



2.3.3.1 Даталогическая модель БД системы.



Таблица 1. Схема отношений Ученики (Pupils)



Таблица 2. Схема отношений Учителя (Teachers)



Таблица 3. Схема отношений Классные руководители (Teachers_leaders)



Таблица 4. Схема отношений Классы (Classes)



Таблица 5. Схема отношений Предметы (Subjects)



Таблица 6. Схема отношений Расписание (Timetable)



Таблица 7. Схема отношений Занятия (Lessons)



Таблица 8. Схема отношений Собрания (Meetings)



Таблица 9. Схема отношений Ученики-родители (Pupils-Parents)



Таблица 10. Схема отношений Родители (Parents)



Таблица 11. Схема отношений Оценки (Estimations)



Таблица 12. Схема отношений Итоги (Results)



Таблица 13. Схема отношений Посещаемость (Attendances)



Таблица 14. Схема отношений Посещаемость собраний (Attendance_of_meetings)



Таблица 15. Схема отношений Квалификация (Qualifications)



Таблица 16. Схема отношений Программы (Curriculums)



Таблица 17. Схема отношений Телефоны родителей (Parents_phones)



Таблица 18. Схема отношений Телефоны учителей (Teachers_phones)

 

Таблица 19. Схема отношений Образование учителей (Teachers_educations)



Таблица 20. Схема отношений Отчетность (Reportings)



Таблица 21. Схема отношений Мероприятия (Events)



Таблица 22. Схема отношений Ученики на мероприятиях (Pupils_events)



Таблица 23. Схема отношений Приказы (Orders)



Таблица 24. Схема отношений Ученики-Классы (Pupils-Classes)



Таблица 25. Схема отношений Пользователи (Users)



Таблица 26. Схема отношений Телефоны учеников (Pupils-Phones)



Примечания:

С – тип Char

V – тип Varchar

T – тип Time

D – тип Date

N – тип Numeric




2.3.4 Ограничения БД





Контроль за ограничениями целостности осуществляет на уровне СУБД.






Разработка программных модулей системы



3.1 Разработка алгоритмов работы системы



3.1.1 Основной алгоритм работы системы






3.1.2 Основной алгоритм работы АРМ Заместитель директора по учебной работе








3.1.3 Алгоритм работы АРМ Классный руководитель






3.1.4 Алгоритм работы АРМ Учитель






3.1.5 Алгоритм работы АРМ Ученик






3.1.6 Алгоритм работы АРМ Родитель






3.1.7 Алгоритм работы АРМ Администратор






Контрольный пример



4.1 Тесты для АРМ Администратор



Для входа в систему Системному администратору требуется в форме авторизации ввести свой логин и пароль и нажать на кнопку «Войти». По умолчанию:



Логин admin

Пароль qwerty



Для завершения работы в АРМ «Системный администратор» надо нажать на кнопку «Выход».



4.1.1 Создание учетных записей Заместителя директора по учебной работе и Учитилей



Системный администратор с помощью своего АРМ добавляет в базу данных информацию об Учителе и о Заместителе директора по учебной работе. Во вкладке «Учетные записи» нажимаем кнопку «Создать учетную запись» и выбираем категорию «Заместитель директора по учебной работе», далее заполняется форма:



Логин учетной записи sh

Пароль учетной записи qwerty.



Логин и пароль так же можно сгенерировать с помощью соответствующих кнопок: «Сгенерировать логин», «Сгенерировать пароль». После этого нажимаем кнопку «Создать».



Системный администратор может создать учетную запись «Учитель».  Для этого надо зайти во вкладке «Учетные записи» нажимаем кнопку «Создать учетную запись» и выбираем категорию «Учитель», далее заполняется форма:



Фамилия Лысикова

Имя Мария

Отчество Александровна

Пол женский

Дата рождения 15 августа 1970

Мобильный телефон 89165764455

Домашний телефон 5497766

Название ВУЗа РГГУ

Дата выпуска из ВУЗа 25 июня 1992

Степень доктор наук

Специальность педагог

Категория 

Логин учетной записи t

Пароль учетной записи qwerty.



Логин и пароль так же можно сгенерировать с помощью соответствующих кнопок: «Сгенерировать логин», «Сгенерировать пароль».

После этого нажимаем кнопку «Создать».



Для редактирования учетных записей «Заместитель директора по учебной работе» и «Учитель» следует зайти во вкладку «Учетные записи» и из таблице выбираем нужную строку, кликая по ней левой кнопкой мыши. Переходим в редактирование и изменяем информацию, нажимаем кнопку «Обновить».



4.2 Тесты для АРМ Заместитель директора по учебной работе



Для входа в систему Завучу требуется в форме авторизации ввести свой логин и пароль, который дал ему системный администратор и нажать на кнопку «Войти». Для завершения работы в АРМ «Завуч» надо нажать на кнопку «Выход».



4.2.1 Создание личного дела ученика



Завуч с помощью АРМ добавляет в базу данных личную информацию (информация об ученике, его родителях и их контактные данные) на нового ученика. Чтобы заполнить данные ученика следует во вкладке «Ученики» нажимать кнопку «Создать ученика» и далее заполнить форму (для примера):



Фамилия Мартынова

Имя Анна

Отчество Викторовна

Пол женский

Дата рождения 16 ноября 1994

Национальность русская

Адрес прописки г. Москва 1-ая Маяковская улица, д.3, корп. 2, кв. 44

Адрес проживания г. Москва 1-ая Маяковская улица, д.3, корп. 2, кв. 44

Домашний телефон 3567631

Мобильный телефон 89268794356

Логин учетной записи pu2

Пароль учетной записи qwerty.



Логин и пароль так же можно сгенерировать с помощью соответствующих кнопок: «Сгенерировать логин», «Сгенерировать пароль». После этого нажимаем кнопку «Создать».



Заполнения информации о родителей ученика происходит аналогично. Во вкладке «Родители» нажимаем кнопку «Создать родителя» и далее заполняется форма (для примера):



Фамилия Мартынов

Имя Петр

Отчество Сергеевич

Пол мужской

Дата рождения 26 мая 1965

Дети Мартынова Анна Викторовна

Логин учетной записи p

Пароль учетной записи qwerty.



Логин и пароль так же можно сгенерировать с помощью соответствующих кнопок: «Сгенерировать логин», «Сгенерировать пароль».

Далее нажать на кнопку «Создать».



4.2.2 Создание Классного руководителя



Во вкладке «Учителя» необходимо нажать кнопку «Создать классного руководителя» и далее заполняется форма (для примера):



ФИО учителя Лысикова Мария Александровна

Логин учетной записи ch

Пароль учетной записи qwerty.



Логин и пароль так же можно сгенерировать с помощью соответствующих кнопок: «Сгенерировать логин», «Сгенерировать пароль». Далее надо нажать на кнопку «Создать». 



4.2.3 Составление классов



После заполнения личных дел учеников и назначений классных руководителей можно создать классы. Это делается следующем образом: во вкладке «Классы» нажимаем кнопку «Создать класс» и далее заполняется форма (для примера):



Номер класса 11

Дата создания класса 14 августа 2012

ФИО Классного руководителя Лысикова Мария Александровна

Ученики в классе выбрать галочками нужных учеников (выбор предмета, которые учителя будут вести у данного класса). Далее нажать на кнопку «Создать».

4.2.4 Работа с расписанием



В базу данных системы заносится предметы, которые будут изучать школьники данной школы. Предмет создается: во вкладке «Предметы» нажимаем кнопку «Создать» и далее заполняется форма (для примера):



Имя предмета физика



Далее следует нажать на кнопку «Создать».



После этого необходимо назначить учителю его предмет, который он может вести. Для этого необходимо перейти в раздел «Учителя», выбрать учителя «Лысикова Мария Александровна», нажав на него кнопкой мыши. После этого необходимо проставить галочку у предмета, который учитель может вести, к примеру «Физика». Далее нужно нажать кнопку «Обновить».



Теперь необходимо указать, что преподаватель ведет свой предмет у класса. Для этого нужно перейти на вкладку “Классы”, нажать на класс с номером 11 и поставить галочку у строки с предметом “Русский” для преподавателя «Лысикова Мария Александровна».



Во вкладке «Расписание» нажимаем на кнопку «Создать расписание для класса», выбираем класс и заполняем поля: предмет, номер кабинета, тип занятия по дням недели, нажимаем кнопку «Создать».



Форма заполнения аналогично для вторника, среды, четверга.



Так же выбранное расписание можно распечатать. Для этого надо выбрать вкладку «Расписание» нажимать кнопку «Показать расписание для класса», выбирать требуемый класс, далее нажимать кнопку «Отправить на печать».



Расписание можно редактировать через вкладку «Расписание» нажимаем кнопку «Показать расписание для класса», выбираем требуемый класс, далее выбираем строку расписания для редактирования. Переходим в редактирование и изменяем информацию, нажимаем кнопку «Обновить».



4.2.5. Работа с функцией родительские собрания



Заместитель директора по учебной работе через свое АРМ можно создавать родительские собрания. Для этого надо выбрать вкладку «Родительские собрания» нажимать кнопку «Создать собрание» и заполнить форму (для примера):



Тема собрания сбор денег на охрану

Дата 5 сентября 2012

Время 17:18

Номер кабинета 345

Номер класса 11



И нажимать кнопку «Создать».



4.2.6. Работа с функцией отчеты



Так же Заместитель директора по учебной работе может просмотреть отчеты по родительским собраниям и мероприятиях для выбранного класса. 



Для просмотра отчета по родительскому собранию надо выбрать вкладку «Отчеты», нажать кнопку «Выбрать класс», выбираем класс, из таблицы «Родительские собрания» выбираем нужную строку для просмотра отчета.



Для просмотра отчета по мероприятиях выполняются аналогичные действия, только выбираем вместо вкладки «Родительские собрания» выбираем вкладку «Мероприятия».



4.2.7. Работа с функцией приказы



Заместитель директора по учебной работе может создавать приказы: Во вкладке «Приказы» нажимаем кнопку «Создать» и далее заполняется форма:



Номер приказа 34

Дата создания приказа 12 августа 2012

Текст приказа  Приказываю, Петрова Дениса Ивановича, перевести в школу № 56. 

Номер класса 11

Ученик Петров Денис Иванович



Далее нажать на кнопку «Создать».




Заключение



В данной дипломной работе было продены все основне этапы реализации крупного проекта: определение предметной области, проектирование предметной области, написание кода (реализация пользовательского интерфейса осталась за кадром).

Реализация составила порядка полугода работы одного разработчика. Полученная система обладает рядом качеств:



Поддержка нескольких операционных систем в качестве сервера: Mac OS X, Linux и прочие.

Возможность развертывания в качестве сайта с доступом внешнему миру и возможность развернуть систему локально с ограниченным доступом.

Создание бэкапов прямо из пользовательского интерфейса.

Наличие основны ролей: заместитель по воспитательной работе, учитель, классный руководитель, родитель, ученика, администратор. Каждая роль разграничена от других, таким образом чужие данные увидены не будут.

Ведение журнала для класса, выставление оценок с учетом значимости мероприятий.

Просмотр своих оценок и статистики учеником и родителем.

Расчет уровня обученности и качества образования.

Возможнсть создания мероприятий и отмечание ученика себя как участника.














Список литературы



1. Школа: [Электронный документ]. – (http://ru.wikipedia.org/wiki/Школа). Проверено 23.02.2013

2. Ушаков Д. Н. Толковый словарь русского языка. Гос. изд-во иностр. и нац. слов, 1940. – Т. 4

3. Постановление Главного государственного санитарного врача Российской Федерации от 29 декабря 2010 г. N 189 г. Москва: [Электронный документ]. – (  ). Проверено 23.02.2013

4. Сайт: [Электронный документ]. – (). Проверено 10.03.2012

5. Интернет-каталог IT компании полного цикла “Энигма энтер”. [Электронный документ]. – (). Проверено 05.03.2013.

6. Интернет-магазин оборудования. [Электронный документ]. – (). Проверено 05.03.2013.

7. Интернет-страница. [Электронный документ]. – (). Проверено 05.03.2013.

8. Интернет-страница. [Электронный документ]. – (). Проверено 05.03.2013.

9. PostgreSQL. [Электронный документ]. – (). Проверено 05.03.2013

10. Сайт: [Электронный документ]. – ( ). Проверено 23.04.2012

