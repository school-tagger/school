АННОТАЦИЯ

	В современном мире сложность используемой техники и технологии растет всё быстрее и быстрее. Вместе с этим растёт и цена ошибки в различных отраслях производства. Поэтому к квалификации проектировщика производственного комплекса предъявляют всё более высокие требования, так как его работа качественно усложняется.

	В данной дипломной работе решается задача автоматизации проектирования с применением методов оптимизации. Но процессы проектирования являются наиболее сложно поддающейся областью для автоматизации, так как носят трудоёмкий итерационный характер.  Это связано с тем, что цикл "проектирование – изготовление – испытание" предполагает множественного повторения. Он повторяется до тех пор, пока не будут найдены оптимальные параметры, удовлетворяющие требованиям технического задания. 

	Для осуществления быстрого и точного решения поставленной задачи был разработан онлайн сервис «CADoptimizer». Он представляет собой программный комплекс, работающий на удаленном сервере, и доступный как web – сайт в интернете. Моей задачей при создании этого сервиса была разработка пользовательского интерфейса и объединение модулей, разработанных другими участниками проекта в единый комплекс. На сервисе действует система учетных записей пользователя, с помощью которой проектировщик может сохранить состояние своей работы, чтобы позднее продолжить проектирование с любого устройства. Также сервис позволяет создавать свою библиотеку математических моделей. Используя эти модели, пользователь будет решать задачи оптимального проектирования объекта или процесса.




ОГЛАВЛЕНИЕ






А. СПЕЦИАЛЬНАЯ ЧАСТЬ

ВВЕДЕНИЕ

	В дипломном проекте требовалось разработать WEB - интерфейс для онлайн сервиса автоматизированного проектирования. Интерфейс должен позволять проектировщику производить многокритериальную и многопараметрическую оптимизацию параметров объекта проектирования. А также в мою задачу входило объединение модулей, разработанных другими участниками проекта.

	В пояснительной записке приведены требования, предъявляемые к комплексу, показана его общая структура и кратко описан принцип его работы. 



ПОСТАНОВКА ЗАДАЧИ

2.1 Назначение и структура онлайн сервиса

	В дипломном проекте решается задача разработки онлайн сервиса для оптимального проектирования, создание пользовательского интерфейса и объединение модулей, разработанных другими участниками проекта.

2.1.1 Назначение онлайн сервиса «CADoptimizer»

	Сервис предназначен для осуществления многокритериальной и многопараметрической оптимизации характеристик объекта или процесса, предоставленного в виде математической модели в режиме онлайн.

2.1.2 Цели создания сервиса

Уменьшение временных затрат на проектирование объектов / процессов;

Получение наиболее оптимальных параметров для объекта проектирования;

Повышение точности вычислений.

2.1.3 Преимущества сервиса «CADoptimizer» перед аналогичными решениями

Возможность оптимизации характеристик любого объекта или процесса, заданного в виде математической модели;

Снижение требований к устройству пользователя за счет серверных вычислений (требуется только наличие доступа к интернету);

Отсутствие необходимости установки прикладного программного обеспечения на устройство пользователя (требуется только веб-браузер);

Использование учетных записей пользователей для сохранения данных о процессе проектирования на сервере.

2.1.4  Структура и работа комплекса

	Разрабатываемый онлайн сервис «CADoptimizer» состоит из следующий модулей: пользовательский интерфейс, математическая модель, библиотека критериев,  случайный поиск, прямой и градиентный поиск. 

Пользовательский интерфейс реализует следующий функционал:

ввод/вывод математической модели;

выбор математической модели из библиотеки;

выбор из библиотеки и/или создание критериев для выходных параметров;

регистрация и аутентификация пользователей;

вывод результатов;

сохранение состояния работы программы для данного пользователя;

ввод дополнительных параметров для остальных модулей;

Математическая модель:

Создание внутренней подпрограммы на основе введенной пользователем информации;

Формирование вектора выходных характеристик для соответствующего вектора входных параметров;

Библиотека критериев:

выбор пользователем частных критериев оптимальности из библиотеки;

подключение пользовательских критериев к библиотеке;

расчет весовых коэффициентов критериев в зависимости от выбранного пользователем типа;

формирование целевой функции на основе выбранных критериев и установленных значений весовых коэффициентов;

расчет значения целевой функции для одиночного вектора или массива векторов выходных параметров.

Случайный поиск:

Формирование массива векторов входных параметров удовлетворяющих ограничениям пользователя;

Ранжирование сформированного массива по минимальному значению целевой функции;

Вывод заданного пользователем количества наилучших результатов поиска;

Передача выбранного пользователем вектора входных параметров модулю прямого поиска.

Прямой и градиентный поиск.

Поиск оптимальных входных параметров на основе выбранного пользователем метода;

Вывод наилучшего результата поиска.

	На рис. 2.1 показано как взаимодействуют модули разработанного комплекса. Разрабатываемый модуль в данном дипломном проекте раскрашен в темный цвет.

	Программный комплекс работает на удаленном сервере и доступен как web – сайт в интернете.




2.2  Техническое задание на дипломное проектирование

2.2.1 Разработать пользовательский интерфейс, реализующий следующие функции:

ввод/вывод математической модели;

выбор математической модели из библиотеки;

выбор из библиотеки и/или создание критериев для выходных параметров;

регистрация и аутентификация пользователей;

вывод результатов;

сохранение состояния работы программы для данного пользователя;

ввод дополнительных параметров для остальных модулей;



2.2.2 А также решить некоторые связанные с этим прикладные задачи:

Разработка структуры программного комплекса

Объединение программных модулей в одну систему

Проектирование базы данных






АВТОМАТИЗАЦИЯ ПРОЦЕССА ПРОЕКТИРОВАНИЯ НА ОСНОВЕ МЕТОДОВ ОПТИМИЗАЦИИ

3.1  Процессы проектирования	

	Процессы проектирования являются наиболее сложно поддающейся областью для автоматизации, потому что это трудоёмкий и многоэтапный процесс, в котором принимают участие много специалистов, целый институты и научно-производственные объединения. В качестве объекта проектирования могут выступать различные сложные технические системы (ракетный комплекс, самолёт, реактивный двигатель), народнохозяйственные и экономические системы (системы обустройства крупных нефтяных или газовых месторождений, использование бассейнов рек и т.п.).

	При проектировании объекта, зачастую многократно повторяются различные проектные процедуры. Это происходит потому, что проектирование это закономерно развивающийся процесс. Статистические наблюдения некоторых станкостроительных и общемашиностроительных  предприятий показывает, что сам процесс проектирования изделия занимает очень значительную часть времени, тогда как творческие  элементы в работе — только 15%.

	На каждом этапе жизненного цикла проектируемого изделия, его участники  стараются добиться поставленных целей с максимальной эффективностью. В условиях рыночной экономики, для достижения успеха при высокой конкуренции, необходимо обеспечивать выполнение технического задания при заданной степени надежности изделия и минимизации материальных и временных затрат. А это положительно сказывается на себестоимости продукции.  В понятие эффективности также входит снижение затрат на дальнейшую эксплуатацию изделий. Также немаловажно удобство освоения изделия. Например, для сложной техники, в таких отраслях как авиа и ракетостроения, удобство эксплуатации имеет очень большое значение. 

	В последние годы проблема эффективности стоит наиболее остро, причем такое явление характерно для всех индустриально развитых стран, создающие сложные образцы техники и реализующие проекты сложнейших народнохозяйственных комплексов. Автоматизация проектирования постепенно стала одной из одной из наиболее перспективных областей использования вычислительной техники.

Объектом автоматизации проектирования являются действия человека, которые он выполняет в процессе проектирования. А то, что проектируют, называют объектом проектирования.  Следовательно, объекты проектирования не являются объектами автоматизации проектирования.

	Основанием для автоматизированного проектирования являются:

уменьшение сроков проектирования и внедрения

сокращение количества ошибок при проектировании

обеспечение возможности изменения проектных решений

сокращение сроков тестирования

	Средствами вычислительной техники можно рационализировать процессы проектирования путем автоматизации рутинных этапов. Это освободит конструктора для творческой деятельности и повысит производительность процесса проектирования. Весь процесс можно поделить на этапы и операции, и затем представить их с помощью тех или иных математических методов, а также установить инструментальные средства для их автоматизации. После этого рассматриваются необходимые выделенные проектные операции и средства автоматизации, и находятся способы слияния их в единую систему, отвечающую поставленным целям.

Для автоматизации процесса проектирования нужно совершенно точно знать, что он собой представляет и каким образом выполняется разработчиками. Опыт показывает, что изучение процессов проектирования и их формализация даются специалистам очень непросто, и поэтому автоматизация проектирования всегда совершается по этапам, и охватывает при этом последовательно все новые проектные операции.

В целом для всех этапов проектирования изделий и технологии их изготовления можно выделить следующие основные виды типовых операций обработки информации:

поиск и выбор из всевозможных источников нужной информации;

анализ выбранной информации;

выполнение расчетов;

принятие проектных решений;

оформление проектных решений в виде, удобном для дальнейшего использования (на последующих стадиях проектирования, при изготовлении или эксплуатации изделия).

На рисунке 2 представлена схема процессов проектирования.

Весьма  важно формализовать объект проектирования. От того, насколько полное формальное описание объекта зависит выбор метода  решения задачи, а, следовательно, это позволяет определить, возможно ли применить средства вычислительной техники при проектировании. Если  задача не формализована, то проектировщик  вынужден пользоваться каким либо эвристическим методом решения задачи. Однако когда задача полностью формализована (имеется полная математическая модель объекта проектирования), её  можно решать с помощью вычислительной техники автоматически. Если же задача частично формализована (когда не все связи системной модели удалось выразить в виде аналитических и логических зависимостей), то разрабатывается так называемый диалоговый метод решения, который включает вариант математической модели объекта и сценарий взаимодействия конструктора и ЭВМ.













































Рисунок 2. Схема процессов проектирования.

Давайте теперь рассмотрим основные этапы проектирования с позиции технологии обработки информации. Обычно проектирование многосложных технических систем делят на несколько этапов или стадий разработки:

техническое задание на проектируемый объект;

научно-исследовательская работа;

эскизный проект;

технический проект;

рабочий проект;

технология изготовления и испытания спроектированного объекта (опытного образца или партии), внесения коррекции (при необходимости).

	Принятые ранее решения могут быть ошибочными или неоптимальными на любом этапе проектирования, и, следовательно, может возникнуть необходимость их пересмотра. Такие возвраты довольно типичны для проектирования, это служит причиной его итерационного характера. В некоторых случаях даже может быть выявлена потребность в корректировки технического задания. В подобных случаях процессы внутреннего и внешнего проектирования чередуются, что в особой степени характерно для научно-исследовательской работы.

Программа, которая будет разработана в ходе настоящего дипломного проекта, затрагивает проектирование на этапе научно-исследовательской работы. Научно-исследовательская работа (НИР) это своего рода предварительное проектирование. Этот этап один из самых ответственных. Для решения его задач необходимо использование ЭВМ. Это так называемые автоматизированные системы научных исследований (АСНИ).

Стадию НИР часто можно разделить на следующие стадии: предпроектные исследования, техническое задание и техническое предложение. На этих этапах шаг за шагом исследуются потребности в получении новых изделий с заданным целевым назначением. Также  исследуются конструктивные, информационные, физические и технологические правила построения  поделки и допустимость исполнения этих принципов, предсказываются возможные значения параметров и характеристик объекта проектирования. Также уточняются связи "вход-выход", осуществляется определение информативности параметров, проводится активный эксперимент, разрабатываются математические модели и алгоритмы управления технологическим процессом.

Результатом НИР является сформулированное техническое задание на разработку нового объекта.

На этапе НИР необходимо решение следующих задач:

Формулирование критериев качества и управления.

Управление научным экспериментом.

Проведение пассивного или (и) активного эксперимента с обработкой их результатов.

Разработка математических моделей и их идентификация по экспериментальным данным.

Отработка технологических процессов изготовления объектов РЭС с целью поиска норм на параметры, обеспечивающих оптимальные выходные показатели качества.

Формирование обобщенного критерия качества, включающего в себя все частные показатели качества. Обобщенный критерий принимается далее за целевую функцию при решении задачи оптимизации.

Решение задачи оптимизации. Производится варьирование входных и управляющих параметров технологического процесса в рамках установленных норм (допусков) с целью получения оптимального критерия качества.

Поиск принципиальной возможности построения системы.

Разработка новых технических средств, в том числе средств контроля и измерений.

Автоматизация указанных работ достигается за счет применения оптимизационных математических методов. При наличии разработанной модели задача оптимизации сводится к прогнозированию хода процесса при различных комбинациях воздействий и выбору оптимального варианта. [2]

3.2  Оптимизация

Идея оптимизации состоит в том, чтобы при проектировании систем стремиться не к любым допустимым варьируемым параметрам, а только к оптимальным. Эта идея глубоко вошла в современное проектирование.

К задачам параметрической оптимизации относятся:

Определение оптимальных значений параметров.

Назначение оптимальных допусков на параметры по математической модели и заданным ограничениям на показатели качества.

Параметрическая идентификация (уточнение параметров в модели блока объекта проектирования на основе данных испытания).

С целью математической формулировки задачи автоматизации проектирования с применением методов оптимизации и постановки задачи дипломной работы введем некоторые понятия и обозначения. 

Проектные параметры – это независимые переменные параметры, которые полностью и однозначно определяют решаемую задачу проектирования. 

x = (x1, ... , xn )T , 

где   – одна из характеристик объекта.

Проектные параметры являются неизвестными величинами, их значения будут вычислены в процессе оптимизации. Проектными параметрами могут служить любые производные или основные величины, необходимые для количественного описания системы. Числу проектных параметров дает характеристику уровень сложности решаемой задачи проектирования.

	Другие параметры могут быть случайными или постоянными величинами.  Внешними параметрами называют свойства внешней среды, которые влияют на объект проектирования. Внешние параметры, имеющие в общем случае, случайную природу, сводятся к вектору:

 

	Характеристиками называются свойства, характеризующие количественные значения показателей объекта проектирования:



Математической моделью оптимизируемого объекта называют отображение между двумя множествами параметров:



в частности, это функциональные соотношения:



При разработке расчетной математической модели обычно используют следующие основные принципы:

Не учитываются внутренние параметры, обладающие слабым влиянием на техническую характеристику;

Модель разрабатывается для сокращенного диапазона входных воздействий и дестабилизирующих факторов, исходя из реальных условий эксплуатации и степени их влияния на техническую характеристику.

Обычно оптимизируемая величина связана с экономичностью работы рассматриваемого объекта (аппарат, цех, завод). Оптимизируемый вариант работы объекта должен оцениваться какой-то количественной мерой — критерием оптимальности. Количественная оценка оптимизируемого качества объекта, называется критериями оптимальности. На базе выбранного критерия оптимальности составляется целевая функция. 

Целевая функция - это выражение, значение которого лицо, принимающее решение, стремится сделать максимальным или минимальным. Целевая функция позволяет количественно сравнить два альтернативных решения. С математической точки зрения целевая функция описывает некоторую (n+1)-мерную поверхность. Ее значение определяется проектными параметрами. Примерами целевой функции, часто встречающимися в инженерной практике, являются стоимость, вес, прочность, габариты, КПД.  

В некоторых задачах оптимизации требуется ввести несколько целевых функций. Случается когда одна из них может оказаться несовместимой с другой. Примером служит проектирование самолетов, когда одновременно требуется обеспечить максимальную прочность, минимальный вес и минимальную стоимость. В таких случаях конструктор должен ввести систему приоритетов и поставить в соответствие каждой целевой функции некоторый безразмерный множитель. 

При проектировании определённых объектов или систем возникает задача максимизации или минимизации определённых характеристик. Так, одни алгоритмы оптимизации приспособлены для поиска минимума, другие - для поиска максимума. Но независимо от типа решаемой задачи на экстремум, можно пользоваться одним и тем же алгоритмом, так как задачу минимизации можно легко превратить в задачу на поиск максимума, поменяв знак целевой функции на обратный. 

Локальный оптимум – это точка пространства решений, в которой целевая функция имеет наибольшее значение по сравнению с ее значениями во всех других точках ее ближайшей окрестности. 

Зачастую пространство проектирования имеет много локальных оптимумов и необходимо соблюдать осторожность, чтобы не принять первый из них за оптимальное решение задачи. 

Глобальный оптимум называется оптимальное решение всего множества допустимых решений. Оно лучше всех других решений, соответствующих локальным оптимумам, и именно его ищет ЛПР. Возможен случай нескольких равных глобальных оптимумов, расположенных в разных частях пространства проектирования. [3]

Для решения задачи оптимизации необходимо:

составить математическую модель объекта оптимизации

выбрать критерий оптимальности и составить целевую функцию

установить возможные ограничения, которые должны накладываться на переменные;

выбрать метод оптимизации, который позволит найти экстремальные значения искомых величин.

3.3  Классификация оптимизационных задач

Оптимизационные задачи можно систематизировать по виду математических моделей, включающие в себя исходные данные, искомые переменные и зависимости. 

Исходные данные бывают случайными и детерминированными. В довольно распространенных задачах распределения ресурсов, их точное значение, и других элементов, которые входят в модель, могут быть неизвестны заранее. В подобных случаях такие элементы модели являются случайными величинами.

Желаемые переменные могут быть дискретными или непрерывными. Непрерывными – это такие переменные, которые могут принимать любые значения в заданных граничных условиях. Дискретными же называют величины, принимающие только заданные значения.  Целочисленными называют такие дискретные переменные, которые в состоянии принимать только целые значения. 

Между переменными могут быть линейные или нелинейные зависимости. Однако, например, если с переменными выполняются другие действия, то зависимости будут нелинейными. Наряду с этим нужно помнить, что если в задаче есть хоть одна нелинейная зависимость, то вся задача будет нелинейной. 

При сочетании различных элементов модели образуются различные классы оптимизационных задач, требующие разных методов решения. [3]

3.4	Многокритериальная оптимизация.

Наиболее общей математической моделью принятия оптимального решения является задача многокритериальной оптимизации. Тогда оптимизацию производят по нескольким частным критериям, и такие задачи называются задачами векторной или многокритериальной оптимизации. Многокритериальная оптимизация – это попытка получить наилучшее значение для некоего количества характеристик целевого объекта, или другими словами найти некоторое компромиссное решение между требующими оптимизации частными критериями. 

Постановку задачи можно воспроизвести следующим образом:





Решение задач многокритериальной оптимизации сводится к поиску экстремума некоторой скалярной целевой функции F(Q), к которой тем или иным способом сводится векторная функция Ф(Q), на множестве параметров Q:

найти min F(Q),

Qmin ≤ Q ≤ Qmax при G(Q) ≥ 0,

где F(Q)  У[Ф(Q)] – скалярная целевая функция;

У – оператор преобразования;

G(Q) – вектор ограничений, возникающий при сведении векторной функции в скалярную.

	Для решения данной задачи существует ряд методов поисковой оптимизации, однако их практическое применение может быть ограничено высокой размерностью математической модели оптимизируемого объекта или неоднозначностью поиска оптимального решения, когда возникают противоречивые требования к характеристикам устройства или системы. [3]

3.5	Причины, приводящие к многокритериальным задачам:

К характеристикам проектируемого объекта предъявляется множество различных технических требований, и это является одной из главных причин, приводящих к многокритериальности. Эти причины можно представить в виде системы неравенств:



где  предельное значение i−го технического требования. 

	Тогда частные критерии оптимальности, скорее всего, будут отсутствовать в явном виде, поэтому приходится вводить их искусственно при помощи выражений: 



Здесь  весовой коэффициент, учитывает важность i-го ограничения



Следовательно, решение системы неравенств, превращается в решение задачи векторной оптимизации: 



Следующая причина многокритериальности – это необходимость обеспечения оптимальности проектируемого объекта в разных условиях его функционирования, другими словами это обеспечение экстремальных значений критерия оптимальности при неопределенности условий, в которых приходится работать объекту. Таким образом, неопределенность может иметь или качественный характер, связанный с указанием конкретных условий функционирования, или количественный характер, выражающийся при помощи параметра v, и приводящий к задаче оптимизации





	В последнем случае коэффициент полезного действия и качество работы могут быть охарактеризованы разными критериями оптимальности. 

В случае если неопределенность функционирования будет иметь количественный характер, задача оптимизации сведется к задаче векторной оптимизации при помощи дискретизации критерия оптимальности Q(,v) по параметру v и рассмотрению в качестве частных критериев оптимальности функции. 



Подобный путь к задаче оптимального проектирования дает возможность учитывать действие внешних факторов (температуры, ускорения, и т. п.) на критерий оптимальности и ограничения проектируемого объекта. 

Одним из основных вопросов, при постановке задачи оптимального проектирования, является выбор критерия оптимальности Q (). С одной стороны, критерий обязан иметь определённый физический смысл, а с другой - от него требуется, чтобы он как можно более полно характеризовал проектируемый предмет. Тем не менее, требования функциональной полноты трудно удовлетворить только лишь одним скалярным показателем, потому что он, как правило, описывает определённое свойство предмета. Поэтому необходимо рассматривать совокупность показателей (Q1…Qs), у каждого из которых есть наглядная физическая интерпретация, и это позволяет с различных точек зрения оценить качество оптимального решения. 

Из этого следует, что из-за необходимости обеспечения функциональной полноты показателей, которые конкретизируют оптимальные свойства проектируемого объекта или системы, при единовременной их физической наглядности приводит к многокритериальности, которая в свою очередь, вытекает из постановки задачи оптимального проектирования. К примеру, при проектировании транзисторного логического элемента бортовой ЭВМ автотракторного средства необходимо рассматривать одновременно несколько частных критериев оптимальности, отражающих различные свойства схемы, что приводит к следующей задаче векторной оптимизации: 







где Dx - допустимая область работоспособности схемы, Q1(- нагрузочная способность; Q2(, Q3( - статическая помехоустойчивость в закрытом состоянии к отпирающей по напряжению помехе и к запирающей по току, действующей в открытой схеме, соответственно, Q4(- рассеиваемая мощность, Q5(- среднее время задержки сигнала. Оптимальный вариант логической схемы должны иметь экстремальные значения по каждому из частных критериев (Q1,...Qs).

В случае, когда проектируемый объект или система состоит из нескольких взаимосвязанных узлов и блоков, общая оптимальность определяется эффективностью и качеством его отдельных частей, каждая из которых может быть охарактеризована, хотя бы одним частным критерием оптимальности Qi(. 

В этом случае функционирование объекта оптимизации можно считать наиболее удачным, если за счет выбора управляемых параметров  обеспечиваются экстремальные значения всех частных критериев оптимальности как основных подцелей одной общей цели проектирования. 

Другой ситуацией, приводящей к многокритериальности, является случай, когда функционально-логическая модель проектируемого устройства или системы отсутствует и требуется ее построить таким образом, чтобы внешние параметры наилучшим образом соответствовали экспериментальным данным. [3]

ПОЛЬЗОВАТЕЛЬСКИЙ ИНТЕРФЕЙС

4.1  Каким должен быть интерфейс

	Графический интерфейс пользователя является важнейшей частью любой компьютерной программы или системы. От интерфейса зависит скорость освоения системы пользователем и качество выполнения работы. Графический интерфейс должен свести к минимуму возможность допущения ошибок пользователем. Поэтому, к разработке интерфейса нужно подходить серьезно, выделять больше времени на его проектирование, ведь важность пользовательского интерфейса сложно переоценить.

	Однако, может показаться, что каждый знает каким должен быть интерфейс. Это происходит потому, что каждый предъявляет к нему свои требования. И эти требования обычно различаются у разных людей. Но есть и общие моменты, которых надо придерживаться. Другими словами интерфейс должен быть интуитивно понятным. А также он должен быть самодокументирован, очевиден, не должен быть навязчивым. Так, например, не стоит надоедать пользователю в стремлении помочь, выводя большое количество подсказок. С другой стороны должен обеспечиваться надлежащий контроль данных, которые вводит пользователь. Далее рассмотрим каждый пункт подробнее.



4.1.1  Интуитивно понятный интерфейс

По толковому словарю Ожегова, интуиция – это непосредственное, без обоснования доказательствами, постижение истины. Касательно интерфейса, если за истину взять достижения результата, то это определение можно переформулировать следующим образом: успешное выполнение поставленной задачи в системе без предварительной подготовки.

Интуитивно понятный интерфейс это когда пользователь начинает пользоваться системой, почти сразу после первого запуска программы. Пользователь вдруг понимает, на какие кнопки нажимать. Естественно, ни у каждого есть необходимые априорные знания. У каждого пользователя свой уникальный опыт работы с программами и их интерфейсами, и исходя из этого опыта, и берется вся интуиция. И в этом все дело. Если одному человеку интерфейс показался интуитивно понятным, то это ещё не значит, что большинство людей сочтут его таким же. Напротив, кому-то он может показаться совершенно неясным. Все зависит от степени подготовки пользователя с подобного рода программами. Поэтому следует использовать наиболее широко известные всем практики, при создании интерфейса.

Хотелось бы отметить, что обычно системы разрабатываются для какой-то определенной предметной области. В этих системах, для интуитивной понятности, интерфейс должен быть выражен в терминах её предметной области.

Несомненно, каждому пользователю программного обеспечения знакомы такие элементы управления как меню, формы ввода данных, диалоги, инструментальные панели и т.п. Уже, можно сказать, разработаны стандарты оформления пользовательского интерфейса. Естественно, их стоит придерживаться, это повысит понятность интерфейса.

Для очевидности интерфейса, желательно чтобы пользователю были доступны и видны все элементы управления, которые необходимы для выполнения задачи на текущем этапе. На отдельном этапе, пользователю, скорее всего, не  нужна вся мощь системы, поэтому лишние элементы можно скрыть. Элементов нужных для выполнения одной конкретной задачи не должно быть слишком много.

Также, следует помнить, что кнопки можно делать многофункциональными. Т.е. когда одна кнопка выполняет несколько задач, в зависимости от того на каком этапе находится пользователь. Иначе, было бы неправильно предоставлять пользователю разные элементы управления для одинаковых задач.



4.1.2  Самодокументированный интерфейс

	Самодокументированный интерфейс – это когда система предоставляет пользователю значительную помощь в освоении системы в виде развернутых пояснений к элементам управления. Эти пояснения могут, как просто выводиться непосредственно рядом с элементами управления	, так и быть реализованными в виде всплывающих подсказок. Это поможет пользователю допустить меньшее количество ошибок. В разработанной системе, в данном дипломном проекте, использовались оба подхода. Ведь, их комбинация дает наиболее положительный эффект.

	Немаловажную роль играют сообщения пользователю об ошибках или об успешном выполнении сценария, или предупреждения. Эти сообщения не должны быть  слишком короткие. Но и избыточность информации тоже не пойдет на пользу. Так, например, в разработанном сервисе, все проверки ввода данных указывают на то, где возникла ошибка, и какая возникла ошибка. Также хорошей практикой считается указывать верный формат и пример корректного ввода.



4.1.3  Ненавязчивый интерфейс

	Как уже говорилось, интерфейс не должен быть чрезмерно навязчив в своем стремлении помочь. Так, например, будет в крайней степени неудобно, если бы при выполнении задачи, система каждый раз запрашивала подтверждения совершения действия. Работать в такой системе невозможно. Поэтому должен быть предусмотрен подходящий способ выдачи подтверждений, не заставляющий пользователя совершать лишних действий.

4.1.4  Проверка данных

	При работе с системой пользователю очень поможет ненавязчивая проверка данных. Проверка введенных данных должна быть предусмотрена на каждом этапе.

	На первом этапе происходит работа с определенными элементами управления. Здесь должна быть реализована проверка на правильность заполнения форм. Например, проверка условия, когда нужно вводить только положительное целое число, или условия, когда значение поля должно быть уникальным, и не совпадать со значением этого же поля, но другого элемента.

	На следующем этапе должна происходить работа на уровне системы. Например, входные данные должны проверятся на наличие вредоносных конструкций для системы, для их последующей записи в базу данных.

	После этого должны быть сформированы сообщения об ошибках к нужным формам и выданы пользователю системы.



4.1.5  Минимизация ошибок пользователя

	Интерфейс должен свести к минимуму ошибки пользователя. Для этого нужно использовать то, о чём говорилось в предыдущих пунктах: это и многочисленные подсказки, и всевозможные ненавязчивые проверки, и отсутствие скрытых элементов управления. Всё это служит нашей цели минимизации ошибок. Но ещё неизвестно, какой из пунктов будет наиболее значимым в борьбе с пользовательскими ошибками. Ведь каждый конкретный человек, имеет уникальный опыт, подготовку, привычки и квалификацию. Поэтому, для эффективного интерфейса нужно использовать весь комплекс вышеперечисленных мер. 

4.2  Проектирование интерфейса

Проектирование интерфейса можно условно поделить на следующие шаги:

Составить портрет пользователя и список его целей. Цели можно разбить на задачи, которые пользователю предстоит решить. И составить список задач для каждой цели.

Написать пользовательские сценарии в соответствии со списками задач. Сценарии вида: «пользователь сделал – система ответила». 

Составить список страниц интерфейса в соответствии со сценариями.

Составить структуру навигации. Т.е. последовательность исполнения сценариев. Необходимо поставить акцент на важные сценарии.

Описать все страницы интерфейса.



ВЫВОДЫ ПО ГЛАВЕ

	В данной главе была поставлена задача по разработке интерфейса для онлайн-сервиса “CADoptimizer”, были перечислены цели его создания, основные преимущества перед аналогичными решениям и его структура. А также было составлено техническое задание на дипломный проект и приведены теоретические сведения, связанные с процессами проектирования, автоматизации проектирования и оптимизации объекта проектирования, необходимые для выполнения данной дипломной работы. Также была приведена теория о том, как надо создавать хорошие пользовательские интерфейсы.




Б. КОНСТРУКТИВНО – ТЕХНОЛОГИЧЕСКАЯ ЧАСТЬ ПРОЕКТА

 ТЕХНИЧЕСКИЕ СРЕДСТВА

	В процессе работы над дипломным проектом использовалось много различного программного обеспечения, разного рода web – технологии и языки программирования. В этой части диплом кратко рассмотрены используемые технические средства. 

1.1	Используемые языки программирования и технологии

1.1.1 HTML

	HTML (HyperText Markup Language) – это язык разметки гипертекста. Он предоставляет браузеру необходимые инструкции, позволяющие отображать тексты и другие элементы web – страниц на мониторе. Язык разметки не является языком программирования. Различные браузеры и даже различные версии браузеров могут отображать HTML код по – разному.

	Изначально, язык HTML разрабатывался для обмена научной и технической документацией, подходящий для использования людьми, которые не являются специалистами в области вёрстки, красиво оформить документ. Язык появился на свет приблизительно в 1986 – 1991 годах в Женеве в Европейском Центре Ядерных исследования, и был разработан Тимом Бернерсом – Ли. HTML является приложением SGML (англ. Standard Generalized Markup Language — стандартный обобщённый язык разметки). SGML был разработан в 1969 году, и широко использовался в издательской сфере и для создания машинно-читаемых документов. Но он был очень сложным, что затрудняло его распространение для повседневного использования. HTML же успешно справился со сложностью путём определения небольшого набора структурных и семантических элементов, называемых дескрипторами или тегами.

	При помощи HTML легко создаются сравнительно простые и при этом красиво оформленные документы. Кроме упрощения структуры документа, HTML также поддерживает гипертекст.

	Язык HTML был создан для форматирования и структурирования документов без привязки к средствам отображения. В идеале, разметка HTML должна воспроизводиться на разнообразных устройствах с различной технической оснащенностью, без стилистических и структурных искажений, будь то монитор современного компьютера, монохромный экран, небольшой дисплей мобильного телефона или даже программа голосового воспроизведения текстов. Однако, использование современного HTML далеко ушло от первоначальной задумки. Со временем основная идея языка – платформонезависимость, была заменена на потребности в мультимедийном и графическом оформлении. Сегодня HTML преимущественно используется для верстки web – сайтов. 

1.1.2	CSS

	CSS (Cascading Style Sheets — каскадные таблицы стилей) — формальный язык описания внешнего вида документа, состоящий из набора параметров форматирования, которые применяются к элементам документа написанного с использованием языка разметки. 

	CSS используется как средство оформления внешнего вида web – страниц, написанных языком разметки HTML или XHTML, но также может применяться к любым XML документам.

	С помощью CSS можно задавать цвета, шрифты, расположение блоков и других элементов страницы. Основная цель CSS – это разделение описания HTML кода (который описывает структуру документа) от описания внешнего вида этого документа. При таком разделении увеличивается доступность документа, появляется большая гибкость и возможность быстрого изменения внешнего его внешнего вида, посредством изменения правил оформления. А также это уменьшает сложность и повторяемость кода HTML. Помимо этого, используя CSS можно представлять один и тот же документ совершенно по-разному, просто используя другой файл стилей. Ведь все параметры стилей хранятся в определенном месте и легко задаются для любого тега документа. CSS предлагает несравнимо больше возможностей, чем обычный HTML.

	Итого, CSS – это мощная система, расширяющая возможности дизайна и верстки web – страниц.

1.1.3	Javascript

	«JavaScript – это интерпретируемый язык программирования с объектноориентированными возможностями. С точки зрения синтаксиса базовый язык JavaScript напоминает C, C++ и Java такими программными конструкциями, как инструкция if, цикл while и оператор &&. Однако это подобие ограничивается синтаксической схожестью. JavaScript – это нетипизированный язык, т. е. в нем не требуется определять типы переменных. Объекты в JavaScript отображают имена свойств на произвольные значения. Этим они больше напоминают ассоциативные массивы Perl, чем структуры C или объекты C++ или Java. Механизм объектно – ориентированного наследования JavaScript скорее похож на механизм прототипов в таких малоизвестных языках, как Self, и сильно отличается от механизма наследования в C++ и Java. Как и Perl, JavaScript – это интерпретируемый язык, и некоторые его инструменты, например регулярные выражения и средства работы с массивами, реализованы по образу и подобию языка Perl.

	Ядро языка JavaScript поддерживает работу с такими простыми типами данных, как числа, строки и булевы значения. Помимо этого он обладает встроенной поддержкой массивов, дат и объектов регулярных выражений.

	Обычно JavaScript применяется в веббраузерах, а расширение его возможностей за счет введения объектов позволяет организовать взаимодействие с пользователем, управлять веббраузером и изменять содержимое документа, отображаемое в пределах окна веббраузера. Эта встроенная версия JavaScript запускает сценарии, внедренные в HTMLкод вебстраниц. Как правило, эта версия называется клиентским языком JavaScript, чтобы подчеркнуть, что сценарий исполняется на клиентском компьютере, а не на вебсервере. 

	В основе языка JavaScript и поддерживаемых им типов данных лежат международные стандарты, благодаря чему обеспечивается прекрасная совместимость между реализациями. Некоторые части клиентского JavaScript формально стандартизированы, другие части стали стандартом дефакто, но есть части, которые являются специфическими расширениями конкретной версии браузера. Совместимость реализаций JavaScript в разных браузерах зачастую приносит немало беспокойств программистам, использующим клиентский язык JavaScript.» [4]

	Этот язык использовался для создания динамического интерфейса пользователя разрабатываемого в данном дипломном проекте программного комплекса.

1.1.4	PHP

РНР — это серверный язык программирования сценариев, разработанный специально для Web. В HTML-страницу можно внедрить любой РНР код, который будет выполняться при каждом посещении страницы. РНР код интерпретируется Web-сервером и генерирует HTML или иной вывод, выводимый посетителю этой страницы.

Разработка РНР была начата в 1994 г. и поначалу выполнялась одним человеком, Расмусом Лердорфом (Rasmus Lerdorf). Этот язык был принят рядом талантливых людей и претерпел несколько основных редакций, и после стал распространяться и широко использоваться разработчиками,  став зрелым продуктом, с которым мы и имеем дело сегодня. По состоянию на 2013 год, число доменов во всем мире, использующих PHP составляет более двухсот миллионов, и эта цифра продолжает расти. 

РНР — это проект с открытым исходным кодом (Open Source). Т.е. у пользователя имеется доступ к исходному коду. Его можно использовать, изменять и свободно распространять другим пользователям или организациям.

Первоначально РНР являлось сокращением от Personal Home Page (Персональная начальная страница), но затем это название было изменено в соответствии со специальным соглашением по наименованию и теперь означает РНР Hypertext Preprocessor (Препроцессор гипертекста РНР).

В число главных конкурентов PHP входят Perl, Microsoft ASP.NET, Ruby (on Rails и др.), JavaServer Pages (JSP) и ColdFusion.

PHP обладает рядом преимуществ по сравнению с этими продуктами, среди которых наиболее значительными являются:

производительность;

масштабируемость;

наличие интерфейсов к множеству систем управления базами данных;

встроенные библиотеки для выполнения многих общих задача, связанных с Web;

низкая стоимость;

простота изучения и использования; строгая поддержка объектно-ориентированного программирования;

переносимость;

гибкость подхода к разработке;

доступность исходного кода;

доступность поддержки со стороны разработчиков и документации.

	PHP работает исключительно быстро. Он позволяет обслуживать миллионы обращений в день, используя всего – лишь один недорогой сервер. Более высокую производительность PHP в сравнении с конкурирующими продуктами, подтверждают результаты тестирования, опубликованные компанией Zend Technologies.

	Также в PHP есть встроенная возможность подключения ко нескольким системам управления баз данных. В дополенние к MySQL, среди прочих, можно свободно подключаться к базам данных PostgreSQL, Oracle, DB2, dbm и многим другим. В PHP также реализован встроенный SQL-интерфейс для работы с двумерными файлами.

	В дополнение к собственным библиотекам PHP поддерживает уровень абстракции доступа к базам данных, называемый PHP Database Objects (PDO), который обеспечивает единообразный доступ и безопасное кодирование.

	Так как PHP был разработан как язык для Web, он имеет множество встроенных функций для выполнения большого разнообразия полезных задач, связанных с ним. Так, например, с его помощью можно на ходу генерировать изображения, подключаться различным сетевым службам, разбирать XML документы, отправлять сообщения на электронною почту, работать с cookie – наборами и генерировать PDF-файлы – причем все это с помощью всего нескольких строк кода.

	PHP можно использовать под управлением множества различных операционных систем. Хорошо написанный код, как правило, будет работать без каких-либо изменений в различных средах, в которых установлен пакет PHP.

	Обычно, во многих языках программирования сравнительно простая задача реализуется довольно сложно, PHP же позволяет реализовывать простые задачи действительно просто. И в сравнительной степени просто строить крупные приложения с использованием каркаса, основанного на шаблонах проектирования, например, таких как MVC (Model-View-Controller – модель-представление-контроллер). [5]

	Так как разрабатывалось именно web приложение, этот  язык был выбран, потому что обладает вышеперечисленными достоинствами.

1.1.5 MySQL

	MySQL – это очень надежная и быстрая система управления реляционными базами данных (СУРБД). База данных позволяет эффективно хранить, искать, выбирать и сортировать информацию. Сервер MySQL управляет доступом к данным, позволяя тем самым работать с ними нескольким пользователям одновременно, а также обеспечивается быстрый доступ к данным и гарантируется предоставление доступа только пользователям, имеющих на это соответствующие права. Таким образом, MySQL является многопоточным и многопользовательским сервером. Он использует SQL (Structured Query Language – язык структурированных запросов), стандартный язык запросов к базам данных. MySQL появился в 1996 году, но его разработка была начата задолго до этого, ещё в 1979 г. В наше время MySQL представляет собой самую популярную СУРБД с открытым исходным кодом.

	К основным конкурентам MySQL относятся системы PostgreSQL, Oracle, Server и Microsoft SQL.

	MySQL обладает следующими преимуществами:

высокая производительность;

низкая стоимость;

простое конфигурирование и изучение;

переносимость;

доступность исходного кода;

доступность поддержки.

	MySQL прост в использовании. Большинство современных баз данных используется язык SQL. Специалист, ранее работавший с другими СУРБД, при переходе на эту систему не должен столкнуться с какими либо затруднениями. [5]

	Изначально MySQL разрабатывался именно для управления большими базами данных для того чтобы обеспечивать более высокую производительность в сравнении с аналогами существующими на тот момент. Сейчас же этот сервер уже давно эксплуатируется в промышленных условиях с очень высокими требованиями. MySQL постоянно совершенствуется, и сегодня служит гарантией широкому спектру полезных функций.

	MySQL идеально подходит для доступа к базам данных через интернет, именно благодаря своей скорости и безопасности.

	MySQL это клиент-серверную система, то есть состоит из двух частей: клиентской и серверной. Так, например клиентские php – скрипты, посылают серверу MySQL SQL – запрос через специальные сетевые средства, далее сервер обрабатывает их и запоминает результат. После чего MySQL сервер посылает ответ в виде результата обратно клиенту (т.е php – скрипту).

	MySQL также обеспечивает поддержку различных машин баз данных, и ещё множество клиентских программ и библиотек. Также у MySQL есть различные средства администрирования и разнообразные программные интерфейсы.

	MySQL имеет трехуровневую структуру: базы данных – таблицы – записи. Таблицы и базы данных в MySQL на самом деле представляются файлами с расширением frm, MYD, MYI. Но в логическом смысле – таблица это совокупность записей. А записи, в свою очередь, являются совокупностью полей разного типа. Имя базы данных MySQL является уникальным в пределах системы, таблицы – в пределах этой базы данных, а поля – в пределах таблицы. Один сервер MySQL умеет поддерживать несколько баз данных одновременно, при этом доступ к ним разграничивается логином и паролем пользователя базы данных. Только зная эти логин и пароль можно работать с конкретной базой данных.

	В общем, MySQL является мощнейшим и удобнейшим средством для создания онлай web – приложений. И был выбран для использования в этом дипломном проекте за свою простоту использования и надежность.

1.1.6	Apache

Apache – это самый распространенный HTTP сервер. Распространяется он свободно. Apache является многоплатформенным программным обеспечением и поддерживает множество операционных систем, таких как: Microsoft Windows, Linux, Mac, BSD, OS, NetWar и другие.

Основными преимуществами Apache является надёжность и гибкость конфигурации. Apache умеет использовать СУБД для аутентификации пользователей, модифицировать сообщения об ошибках и многое другое.  Также Apache позволяет подключать различные внешние модули, которые выполняют различные функции, и которых существует достаточно много. Эти модули могут быть включены в состав web – сервера при компиляции, или быть загружены динамически, через специальные директивы конфигурационных файлов. В модулях, например реализуются такие вещи как:

добавление функций

исправление ошибок или видоизменение основных функций;

поддержка разных языков программирования;

улучшение безопасности.

Apache позволяет разграничивать доступ к данным и имеет множество механизмов обеспечения безопасности. Основными из них являются:

алгоритм авторизации пользователей для доступа к директориям на основе HTTP-аутентификации;

ограничение доступа к конкретным файлам и папкам;

запрет доступа к конкретным директориям или все серверу, в зависимости от IP – адресов посетителей;

отказ в доступе к определенным типам файлов для всех или некоторых пользователей (например, используется для отказа в доступе к разного рода конфигурационным файлам);

	Разработанное в настоящем дипломном проекте web – приложение работает на сервере Apache.

1.2	Используемое программное обеспечение

1.2.1	Notepad++

	Notepad++ – это бесплатный текстовый редактор файлов, который поддерживает синтаксис большого количества языков программирования. Программа обладает большим набором опций и отличается тем, что работает очень быстро, так как потребляет минимальное количество ресурсов процессора. 

	Несмотря на свою скорость работы, данный редактор ничуть не уступает своим тяжелым собратьям. В нём есть и подсветка синтаксиса текста с возможностью сворачивания блоков, в зависимости от языка программирования, который можно изменить в любой момент.

	Среди интересных функций можно выделить возможность просмотра и редактирования нескольких документов одновременно, а также отображать и редактировать один и тот же документ в разных местах, при этом изменение документа в одном месте будет автоматически перемещено во второе окно.

	Данный редактор использовался для быстрого внесения изменений в отдельные файлы проекта.

1.2.2	NetBeans IDE

	NetBeans – это бесплатный многофункциональный редактор исходного кода. NetBeans является многофункциональной кросс-платформенной средой разработки, поддерживающая несколько языков программирования, в том числе и PHP. Это не просто текстовый редактор, данная среда делает подсказки при кодировании в зависимости от подключенных файлов и классов, а также подсказки параметров. В NetBeans есть всплывающие подсказки по документации со стандартными функциямя, возможность скачивать и закачивать файлы на удаленный сервер по FTP и SFTP, интеллектуальное автозавершение кода. Ещё он предоставляет шаблоны кода и позволяет его быстро переорганизовывать, умеет исправлять ошибки  и многое другое.

	Данная среда использовалась мной при разработке дипломного проекта.

1.2.3	Denwer

Для работы любого интернет приложения необходим сервер. На сервере работать не очень удобно. И для разработки серверных приложений можно использовать эмуляцию сервера. При создании нашего онлайн-сервиса был выбран специальный готовый устанавливающийся пакет «Denwer». Денвер – это набор дистрибутивов (Apache, PHP, MySQL, Perl и др.) и программная оболочка для развертывания локального сервера на Windows-машине, работающего без доступа в интернет. Главной особенностью Денвера является удобство работы сразу над несколькими независимыми проектами и даже возможность размещения сервера на Flash – накопителе.

Базовый пакет Denwer включает:

Apache, SSL, SSI, mod_rewrite, mod_php;

PHP5 с поддержкой GD, MySQL, sqLite;

MySQL5 с поддержкой транзакций;

phpMyAdmin — система управления MySQL через Web-интерфейс;

эмулятор sendmail и SMTP-сервера.

	Данное ПО использовалось для удобной разработки приложения и его тестирования на локальном компьютере.

1.2.4  Онлайн сервис Balsamiq Mockups.

	Этот онлайн сервис позволяет легко и быстро создавать прототипы интерфейсов. В его инструменты входит множество графических компонентов и иконок, позволяющие быстро визуализировать виденье решения той или иной задумки.

1.2.5  Adobe Photoshop.

	Многофункциональный графический редактор. Использовался для создания графических элементов интерфейса, таких как иконки, текстуры, кнопки и т.п. А также использовался для создания схем и иллюстрация для текущего дипломного проекта.


РАЗРАБОТКА ПОЛЬЗОВАТЕЛЬСКОГО ИНТЕРФЕЙСА ОНЛАЙН СЕРВИСА

	Одной из задач, стоящих передо мной в данном дипломном проекте, была разработка web – интерфейса для онлайн сервиса. Для этого использовался HTML и CSS. Для придания интерфейсу динамичности, использовался язык JavaScript в комбинации со свободно распространяющейся библиотекой jQuery, которая позволяет удобно и быстро оживлять web-страницы.

	Как было сказано ранее, при проектировании интерфейса нужно хорошо представлять цель пользователя, и задачи стоящие перед ним для достижения этой цели.

	Итак, был разработан интерфейс, который реализует следующий функционал:

регистрация на сервисе;

вход под своим профилем на сервис;

управление библиотекой математических моделей;

управление библиотекой критериев;

выбор критериев для выходных характеристик;

настраивать параметры поиска и изменять стратегию поиска;

	Далее будут подробно рассмотрены эти пункты.

2.1  Регистрация пользователя

	Для того чтобы пользователь смог воспользоваться инструментами оптимизации, ему необходимо пройти регистрацию, а затем входить под своим логином, который является e-mail адресом, и паролем. Для этого был разработан удобный и нераздражающий интерфейс для регистрации на сайте. В правом верхнем углу web-сайта есть скрывающаяся форма для аутентификации и кнопка для регистрации, она показана на рисунке 4.



Рисунок 3. Форма входа на сайт.

	Как можно догадаться из рисунка 3, на сервисе реализована возможность восстановления забытого пароля по email, указанного при регистрации. 

	Для того чтобы зарегистрироваться, нужно заполнить специальную форму, которая указана на рисунке 4. Как вы можете заметить, на сервере происходит проверка входных данных. Для удобства пользователя сообщения об ошибках наглядно выводятся в нужных местах.

	Ещё на рисунке 4 видно, что используется CAPTCHA. CAPTCHA — (англ. Completely Automatic Public Turing Test to Tell Computers and Humans Apart) — это автоматический тест Тьюринга для того чтобы различить людей от компьютерных программ. Другими словами, это такая задача, которую не может решить компьютер, но при этом легко решаемая человеком.

	Применять CAPTCHA необходимо для того, чтобы предотвратить множество автоматических регистраций и отправление сообщений программами. Т. е. CAPTCHA защищает web приложения от спама, и захвата аккаунтов. Обычно CAPTCHA представляет собой хитрым способом зашумленное случайное число или слово, которую пользователю необходимо распознать и ввести прочитанный результат. Для реализации CAPTCHA использовалось бесплатное готовое решение «KCAPTHCA», написанное на PHP, использующее библиотеку GD.



Рисунок 4. Форма регистрации пользователя.

2.2  Общий интерфейс онлайн сервиса.

	После успешной регистрации, пользователю не нужно будет входить на сайт, он сразу будет автоматически авторизован. На указанный E-mail придет письмо, необходимое для подтверждения регистрации. В письме будет ссылка, при переходе на которую E-mail будет подтвержден. В противном случае, аккаунт пользователя будет автоматически удален через 3 дня. В профиле пользователя будет сообщение, с обратным отчетом этого события.

	Итак, после входа под своим аккаунтом, пользователю будет доступен полный функционал онлайн сервиса. На рисунке 5 представлен общий интерфейс онлайн сервиса.



Рисунок 5. Общий интерфейс пользователя.

Давайте подробнее рассмотрим пронумерованные элементы интерфейса на рисунке 5.

1 – верхний блок, содержащий выпадающее меню, и форму входа или кнопку выхода из аккаунта. Этот блок есть на всех страницах сайта.

2 – левая колонка. В этом блоке хранятся дополнительные элементы интерфейса, которые должны быть доступны на всех страницах сервиса.

3 – главный контейнер. В этой части интерфейса все и происходит, это рабочая область в которой выводится содержание разных страниц сервиса с разным функционалом, будь то ввод математической модели или регистрация на сайте.

4 – выпадающее меню.

5 – информация о текущей учетной записи и ссылка на переход на профиль пользователя.

6 – кнопка для выхода из текущей учетной записи.

7 – дополнительное общее левое меню.

8 – место для дополнительного левого меню, здесь может располагаться меню, необходимое для дополнительных элементов интерфейса, в зависимости от страницы, на которой мы находимся.

9 – информация о текущей выбранной математической модели.

10 – кнопка для перехода на страницу настройки параметров поиска. Эта кнопка появляется только в том случае, если выбрана математическая модель и не менее одного критерия для выходных параметров.



2.3  Страница профиля пользователя.

	Эта страница носит чисто формальный характер. Как видно на рисунке 6, на странице профиля представлена информация об аккаунте пользователя, а также возможность редактировать личные данные и изменять пароль. В процессе дальнейшей разработки сервиса эта страница может быть изменена.



Рисунок 6. Страница профиля пользователя.





2.4  Создание математической модели

На рисунке 7 представлен интерфейс ввода математической модели.



Рисунок 7. Создание математической модели.

	Как видно из рисунка 7, интерфейс позволяет добавлять и удалять динамически поля для ввода входных и выходных параметров, нажатием на соответствующие кнопки плюс/минус. Также можно сразу ввести ограничения для входных и выходных параметров, уже при создании математической модели. Справа есть информационный блоки, которые помогают пользователю правильно ввести данные. Название математической модели и её описание можно указать любое, это нужно лишь для удобства пользователя. После отправки данных, программа проверит данные, и укажет на ошибки пользователя в нужных местах, это показано на рисунке 8.



Рисунок 8. Обработка ошибок при создании математической модели.

	При успешном же вводе математической модели, она сохранится в базу данных, в виде массива данных, закодированного специальным образом для удобного хранения.

2.5  Управление библиотекой математических моделей.

	Интерфейс онлайн сервиса позволяет хранить ранее созданные математические модели, редактировать и удалять их. Для выбора математической модели, необходимо просто нажать соответствующую кнопку в личной библиотеке математических моделей. Интерфейс вывода математических моделей представлен на рисунке 9. Созданные математические модели доступны только тому одному пользователю, который их создал. Но в дальнейшем возможна реализация создания публичных математических моделей. Также в базе есть примеры математических моделей, которые доступны всем пользователям.



Рисунок 9. Выбор математической модели.

	

	Выбранная модель отображается в статусе в левой части сайта, и подсвечивается зеленым цветом в библиотеке моделей. 

2.6  Интерфейс выбора критериев.

	Приступить к выбору критериев для выходных параметров математической модели, очевидно, можно только после выбора математической модели из библиотеки моделей. Давайте рассмотрим рисунок 10, на котором представлен выбор критериев, и на котором видно, что данные были отправлены, и пользователю были выведены сообщения об ошибках в нужных местах.



Рисунок 10. Настройка критериев для выходных параметров.

Как видно из рисунка 10, одному выходному параметру можно задавать как несколько критериев, так и ни одного. Давайте подробнее разберем рисунок 10:

1 – имя выходного параметра (берется автоматически из математической модели)

2 – кнопка, которую нужно нажать, если для этого выходного параметра не нужно задавать какие либо критерии. Это кнопка превратится в кнопку 3 после нажатия.

3 – кнопка для того чтобы задать критерии для этого выходного параметра.

4 – так выглядит блок с выходным параметром, если для него не нужно задавать критерии.

5 – кнопка для добавления дополнительных критериев для выходного параметра.

6 – кнопка для удаления дополнительных критериев для выходного параметра.

	Также реализован интерфейс по пополнению пользовательской библиотеки критериев, путем написание подпрограммы. 

2.7  Настройка параметров случайного поиска.

	На этой странице производится необходимая настройка перед запуском случайного поиска. Настройка производится для всех входных и выходных параметров, также есть проверка на всевозможные ошибки при вводе, и вывод этих ошибок в нужных местах.

	Макет интерфейса для настройки параметров поиска представлен на рисунке 11.











Рисунок 11. Настройка параметров случайного поиска.



2.8  Вывод результатов случайного поиска.

	Вывод результатов случайного поиска в программном комплексе представлен в виде таблицы, с возможностью выбора данных строки таблицы для дальнейшего поиска. Таблица изображена на рисунке 12.



Рисунок 12. Таблица результатов случайного поиска.

	Также была необходимость сохранения этой таблицы, для возможности в дальнейшем вернуться на эту страницу для выбора другого вектора параметров. Данные представленные на рисунке 12 являются демонстрационными.

2.9  Параметры прямого поиска.

	После выбора вектора характеристик из предыдущего пункта, была задача реализовать интерфейс для настройки прямого поиска.

	На этой странице пользователь должен выбрать поиск и иметь возможность настроить его параметры. А также вернуться на эту страницу, если результат поиска не будет удовлетворительным. В связи с этим есть необходимость в сохранении промежуточных данных.

	Прототип интерфейса представлен на рисунке 13.







Рисунок 13. Прототип интерфейса для выбора и настройки прямого поиска.

2.10 Результаты прямого поиска.

	На этой странице выводится результат прямого поиска, а также все параметры предшествующего поиска. На этой странице, если результаты не удовлетворяют пользователя, есть возможность вернуться на страницы настроек случайного или прямого поисков, для изменения стратегии поиска. А также можно вернуться к выбору критериев, если необходимо изменить критерии поиска для выходных характеристик. Или даже отредактировать математическую модель, но тогда все параметры поиска будут сброшены.




ТЕХНИЧЕСКАЯ РЕАЛИЗАЦИЯ ОНЛАЙН СЕРВИСА

	Для работы современного сайта используется целый комплекс различных технологий. Об этих технологиях было сказано в разделе «выбор технических средств» этой части дипломного проекта. В этом же разделе речь пойдет о технической реализации некоторых ключевых моментов, файловой системе проекта и структуре базы данных.

3.1  Файловая система сервиса

На рисунке 14 представлена примерная файловая система онлайн сервиса.



Рисунок 14. Файловая система онлайн сервиса.

	Давайте рассмотрим рисунок 14, и разберемся, за что отвечают некоторый файлы и папки.

	В папке «css» хранятся файлы стилей .css, которые отвечают за внешний вид страниц. В папке «js» хранятся javascript программы, которые отвечают за динамику на страницах.

	Файл .htaccess это конфигурационный файл HTTP-сервера Apache, позволяющий корректно настроить работу сайта или сервера в целом. В нашем сервисе в настройках этого файла было настроено специальное перенаправление с любого URL – сайта на главную страницу index.php.

	А уже в файле index.php подключаются все необходимые скрипты для работы приложения, и для определения на какой странице мы сейчас находимся.

	В папке php хранятся все файлы необходимые для работы онлайн сервиса на сервере. Внутри этой папки множество других папок. Рассмотрим некоторые из них.

	В папке «core» хранятся файлы, ключевые файлы, которые позволяют сервису работать в рамках общего интерфейса. В ней хранятся файлы необходимые для инициализации всех настроек приложения, подключение библиотек, аутентификация пользователей, главная страница, главное меню и глобальные функции.

	В папке «libs» хранятся необходимые для работы библиотеки.

	И наконец, в папке «scripts» хранятся папки со скриптами, реализующие выполнение сценариев доступные на одноименных url – адресах. Например, папка «mymodels» отвечает за работу сценариев для создания/редактирования/удаления и вывода математических моделей пользователя. И эта страница доступна в интернете по адресу: http://адрес-сайта/mymodels/.

	Для удобства программирования используется шаблон «Model-View». Этот шаблон используется для разделения модели и её представления, что необходимо, так как позволяет изменять их отдельно друг от друга. Так в одном файле (являющейся моделью) будет логика работы с данными, а в другом (представление) работа с пользовательским интерфейсом.

3.2  Использование библиотеки PHPSandbox.

	В нашем онлайн сервисе существует возможность написания подпрограмм для задания математической модели. Для этого пользователям предлагается написать логику на языке PHP. Дело в том, что выполнять на сервере код пользователя, мягко говоря, не безопасно. Злоумышленники могут удалить базу данных, или разослать спам на 1000 email адресов, используя какую-либо уязвимость. Поэтому особенно важно было реализовать безопасное выполнение любого кода, и защита от потенциально опасных конструкций в коде пользователя. Для этого была использована библиотека PHPSandbox, которая, к слову, требует новой современной версии языка PHP 5.3.2+. Эта библиотека основана на использовании другой библиотеки PHPParser. Эта библиотека в свою очередь разбирает php код в абстрактном представленном дереве, однозначно определяющее синтаксис входного кода. Эти две библиотеки являются OpenSource проектами и свободно представлены в общем доступе.

3.3  Проектирование базы данных.

	Для современного онлайн сервиса необходима база данных. На нашем сервисе база данных в первую очередь необходима для системы аутентификации пользователей и их пользовательской библиотеки математических моделей. На рисунке 15 представлена структура базы данных. В процессе разработки она может быть дополнена и модифицирована.



Рисунок 15. Структура базы данных.

Из рисунка видно, какие типы полей есть у представленных таблиц. Таблица «users» хранит информацию о пользователях. Из email-адреса, пароли в зашифрованном виде, код для подтверждения email-адреса, и забытого пароля. Эта таблица условно связана с другими таблицами.

	Так, таблица «math_models» хранит математические модели пользователей. Таблица «conditions» текущее состояние вычисления, это необходимо на случай, если пользователь захочет выйти из своего аккаунта и вернуться к нам позже. И таблица «results» хранит результаты уже когда-то проведенных пользователем поисков. Своего рода история вычислений.

ВЫВОДЫ ПО ГЛАВЕ

	В данной главе были приведены используемые технические средства при разработке программы для данного дипломного проекта. Также был описан разработанный пользовательский интерфейс, и некоторые аспекты технической реализации проекта.




В. Охрана труда

АНАЛИЗ ОПАСНЫХ И ВРЕДНЫХ ПРОИЗВОДСТВЕННЫХ ФАКТОРОВ

1.1 Основные понятия

Трудовой кодекс Российской Федерации (глава 33, статья 209) устанавливает следующие основные определения и понятия, связанные с охраной труда:

	«Охрана труда - система сохранения жизни и здоровья работников в процессе трудовой деятельности, включающая в себя правовые, социально-экономические, организационно-технические, санитарно-гигиенические, лечебно-профилактические, реабилитационные и иные мероприятия.

	Условия труда - совокупность факторов производственной среды и трудового процесса, оказывающих влияние на работоспособность и здоровье работника.

	Вредный производственный фактор - производственный фактор, воздействие которого на работника может привести к его заболеванию.

	Опасный производственный фактор - производственный фактор, воздействие которого на работника может привести к его травме.

	Безопасные условия труда - условия труда, при которых воздействие на работающих вредных и (или) опасных производственных факторов исключено либо уровни их воздействия не превышают установленных нормативов.

	Рабочее место - место, где работник должен находиться или куда ему необходимо прибыть в связи с его работой и которое прямо или косвенно находится под контролем работодателя.

	Средства индивидуальной и коллективной защиты работников - технические средства, используемые для предотвращения или уменьшения воздействия на работников вредных и (или) опасных производственных факторов, а также для защиты от загрязнения.

	Производственная деятельность - совокупность действий работников с применением средств труда, необходимых для превращения ресурсов в готовую продукцию, включающих в себя производство и переработку различных видов сырья, строительство, оказание различных видов услуг.

	Требования охраны труда - государственные нормативные требования охраны труда, в том числе стандарты безопасности труда, а также требования охраны труда, установленные правилами и инструкциями по охране труда.» [9]

1.2 Вредные и опасные факторы при работе на ЭВМ

В настоящее время возникла острая необходимость улучшить условия труда пользователей ЭВМ, и с каждым годом, по мере увеличения числа пользователей и сфер трудовой деятельности, где применяются ЭВМ, актуальность улучшения условий труда только возрастает.

С развитием современных технологий качество и безопасность комплектующих частей ЭВМ постоянно растет. Однако проблема безопасности, например, работы за дисплеями остается наиболее важной даже в высокоразвитых странах мира. Решения задач по снижению вредного и опасного воздействия дисплея на человека выноситься на общенациональный государственный уровень.  Так в Германии, работа за монитором возглавляет список особо опасных и вредных профессий.

В свою очередь, создание безопасных и комфортных условия труда для работающих на ЭВМ, способствует достижению главной цели –  повышению производительности труда.

Наиболее необходимой и важной задачей для работающих с персональными компьютерами является создание условий для их труда. 

При определении и создании условий труда пользователей компьютерной техникой необходимо учитывать:

особый подход при организации места для работы;

условия производственной среды, например, шум, освещение, микроклимат, электромагнитные и электростатические поля, визуальные эргономические параметрами дисплея и т. д.;

взаимодействие человека и персональных ЭВМ, а именно информационную характеристику такого взаимодействия.

Как отмечалось выше, для работы с персональным компьютером, в частности за монитором, необходимо создавать такие условия, при которых работа будет комфортной, отвечать необходимым условиям труда, безопасной для человека.  

Известно, что при работе за монитором возникает сильное зрительное напряжение, и как следствие глаза человека сильно устают, а при длительной и напряженной работе могут серьезно пострадать.  

Именно поэтом, в подавляющем большинстве нормативных документах, которые регламентируют условия труда работников с использованием  персональных электронно-вычислительных машин, присутствует этот вредный фактор.

Важно отметить, что то воздействие, которое оказывает монитор на человеческий глаз, проявляется не в присутствии электромагнитных или каких бы то ни было других излучении. Оно возникает только от того, что  постоянно необходимо напрягать глаза, считывая информацию с экрана. Если сравнить чтение обычной книги и чтение текста с экрана, то разница будет существенной, зрительное напряжение и сам принцип чтения сильно отличаются друг от друга.

Если мы говорим об обычном чтении текста на листе бумаге, лежащем на горизонтальном столе работника, то при таком чтении свет попадает прямо на бумагу, при этом голова человека немного наклонена. Работающий по персональном компьютере оператор считывает текст, держа голову почти абсолютно прямо перед собой, без наклона, положение глаз также прямое или немного вверх.

Текст на дисплеи, как известно продукт люминесцирующего вещества экрана, он находится не на самом экране, как если бы это был обычный лист бумаги, а формируется по другую сторону экрана. Работающий за компьютером читает не отражаемый текст, он смотрит непосредственно на источник света. Постоянное воздействие света на глаза человека и орган его зрения в целом, является причиной стрессовой работы органа зрения у пользователя, несвойственной ему от природы. Наиболее опасным такое воздействие бывает при длительном режиме работы. 

Вот почему, профилактика негативных воздействий на орган зрения является важной составляющей в организации режима работы и отдыха трудящихся. Соблюдение установленного нормативными документами режима труда и отдыха, будет способствовать здоровью работников, что в свою очередь повлечет повышению производительности труда.

В соответствии с СанПиН2.2.2/2.4.1340-03, определено три группы работ с ЭВМ (группы А, Б, В), помимо этого установлено три категории определяющих понятия сложности и напряженности работы. 

В первую группу работ, группа А, входит работа по считыванию информации с дисплея. 

Вторая группа, группа Б, включает в себя работы, связанные с вводом информации.  

К третья группа, группа В, относиться интерактивная работа с различным программным обеспечением. Такая работа наиболее часто встречается в труде офисных работников.

Для третьей группы установлены следующие регламентированные перерыва:

Для первой категории сложности – при работе с компьютером не более двух часов за смену – устанавливаются два перерыва по пятнадцать минут через два часа после начала смены и через два часа после обеденного перерыва:

Для второй категории сложности – при работе с ЭВМ от двух до четырех часов за смену – определены два перерыва по пятнадцать минут через два часа после начала смены, через полтора или два часа после обеденного перерыва. Возможно заменить данный распорядок на другой – перерывы по десять минут после каждого часа работы;

Для третьей категории сложности – при работе за монитором от четырех до шести часов за смену – регламентированы два перерыва по двадцать минут через полтора, два часа после начала смены и через полтора, два часа после обеденного перерыва. Или перерывы по пятнадцать минут после каждого часа работы.   

Особо следует отметить, что не допускается продолжительность работы пользователя персональным компьютером непрерывно в течение шести часов за смены, при восьми часовой рабочей смене. Непрерывная работа за дисплеем компьютера свыше двух часов также не допустима.

При работе в ночное время, продолжительность перерывов, регламентированных для всех категорий сложности, необходимо увеличить на один час. 

Работа преподавателей, ведущих обучение в компьютерных классах, продолжительность их работы должна составлять не более четырех часов в день. Во время перерывов, которые должны соответствовать установленным нормам, рекомендуется выполнять специальные упражнения для глаз.

Очень важно помнить, что непрерывная работа более четырех часов резко увеличивает шансы получить расстройство органов зрения. Всемирная Организация здравоохранения (ВОЗ) определила понятие «компьютерный зрительный синдром» (КЗС). Основные симптомы КЗС это жжение в глазах, покраснение век, и развитие опасного заболевание для глаз – конъюнктивита. При конъюнктивите появляется чувство инородного тела или песка под веками, возникает боль в области глазниц и даже лба, зрение затуманивается, замедляется перефокусировка с дальних предметах на ближние.

Дефицит времени, огромный объем и высокая плотность информации повышенная ответственность за корректность информации, специфичность диалогового режима общения компьютера и человека способствуют возникновению нервно-эмоционального напряжения при работе с ЭВМ. Ключевым фактором возникновения подобного нервно-эмоционального напряжения можно смело назвать продолжительность работы на дисплеи, особенно в диалоговом режиме. Последствия нарушения режима работы с ЭВМ – нарушение сна, снижение концентрации внимания и как следствие, работоспособности, ухудшение общего состояния здоровья организма человека, хронические головные боли, повышение возбудимости нервной системы, депрессия.

Повышение нервно-психических нагрузок, особенно в сочетании с другими вредными факторами оказывает отрицательное влияние на работу всего организма человека. У человека возникает недостаток в витаминах и  минеральных веществах (особенно железа, магния, селена), так как организм теряет способность усваивать их из пищи, как он делает это в обычном режиме. Как правило организм человека ослабевает сопротивляемость к воздействию вредных факторов окружающей и производственной среды, происходит нарушение обмена веществ, организм стареет и изнашивается быстрее.

Для тех, кто постоянно работает на ЭВМ целесообразно для повышения производительности труда и сохранению здоровья принимать витамино - минеральные комплексы.

Повышенные динамические и статические нагрузки пользователей ЭВМ являются причинами жалоб на боли в шейном отделе позвоночника и спине, а также в руках (кистях рук). У активных пользователей персональными компьютерами, чаще других распространены недомогания связанные с использованием при работе клавиатуры. Выполняя операции ввода данных, у работающего с клавиатурой количество мелких стереотипных движений кистей и пальцев рук может достигать шестьдесят тысяч и даже более этого. По шкале гигиенической классификации труда такая трудовая деятельность относится к категории вредной и опасной.

Непрерывное нажатие на клавиши способствует сокращению мышц, при этом сухожилия неустанно скользят вдоль костей и соприкасаются с тканями, что может привести к развитию болезненных воспалительных процессов (тенденитов). Тендениты еще называют «травмы повторяющихся нагрузок».

Другие не менее болезненные симптомы, появляющиеся при неправильной организации труда с работой на ЭВМ, появляются в виде доли в шее и спине. Подобное недомогание появляется не сразу, а имеет накопительный характер, оно получило наименование «синдром длительных статических нагрузок» или СДСН.

Причиной возникновения синдрома длительных статических нагрузок является длительное нахождения человека в положении «сидя». Такое положение способствует перенапряжению мышц ног и спины, при этом появляются ноющие боли и неприятные ощущения в нижней части спины. 

Главная причина появления боли в спине и ногах это неправильная высота рабочего стола и сидения, отсутствие спинки для опоры спины и подлокотников, неправильное установка монитора, размещение клавиатуры и документов, а также отсутствие подставки для ног.

Для уменьшения и профилактики неприятных ощущений и боли полезны и даже необходимы перерывы в работе, а также эргономические усовершенствования оборудования рабочего места.

Электромагнитные и электростатические поля, акустический шум, повышение или снижение ионного состава воздуха и параметров микроклимата в помещении, все выщеперечисленное влияет на ухудшение здоровья пользователя ПК.

Важными факторами, влияющими на состояние организма, являются эргономические параметры расположения дисплея, освещенность рабочего места, габариты мебели, параметры помещения, в тором оборудовано рабочее место пользователя ЭВМ.

С 30 июня 2003 г. введены новые Санитарно-эпидемиологические правила СанПиН 2.2.2/2.4. 1340-03 “Гигиенические требования к персональным электронно-вычислительным машинам и организации работы”. 

Требования Санитарных правил распространяются на вычислительные электронные цифровые машины персональные и портативные; периферические устройства вычислительных комплексов (принтеры, сканеры, клавиатуру, модемы внешние); устройства отображения информации (видеодисплейные терминалы — ВДТ) всех типов, условия и организацию работы с ПЭВМ и направлены на предотвращение неблагоприятного влияния на здоровье человека вредных факторов производственной среды и трудового процесса при работе с ПЭВМ. 

1.3 Физически вредные и опасные факторы

Физические вредные и опасные факторы – это повышенный уровень рентгеновского, электромагнитного, инфракрасного и ультрафиолетового излучения; повышенное содержание положительных аэронов и пониженное содержание отрицательных аэронов; превышение статистического электричества и запыленность воздуха в рабочей зоне;  неравномерное распределение яркости в поле зрения, например повышенная яркость светового изображения, чрезмерная блескость и ослепленность; превышение норм значений напряжения в электрической цепи, которое может привести к замыканию через тело человека.

1.4  Психофизические вредные и опасные факторы

К психофизиологическим вредным и опасным факторам можно отнести – чрезмерное напряжение зрения и внимания; длительные статические интеллектуальные и эмоциональные нагрузки; монотонный труд; большой объем информации, обрабатываемый в единицу времени; неправильная организация рабочего места.

	Самые распространенные симптомы, появляющиеся в конце рабочего дня у пользователей ПЭВМ, операторов это – головная боль и  переутомление глаз, типичные боли в мышцах рук, шеи и спины, пониженная концентрации внимания.

Наиболее типичным профессиональным заболевание, источником которого становится длительная интенсивная работа за компьютером - травма повторяющихся нагрузок (ТПН), представляет собой недомогания, переходящие в заболевания нервов, мышц и сухожилий руки.

Другие профессиональные заболевания, связанным с ТПН:

тендовагинит — воспаление сухожилий кисти, запястья, плеча;

тендосиновит — воспаление синовиальной оболочки сухожильного основания кисти и запястья;

синдром запястного канала (СЗК) – вызывается ущемлением срединного нерва в запястном канале. Накапливающаяся травма вызывает образование продуктов распада в области запястного канала, в результате чего вначале возникает отек, а затем СЗК.

Появляются жалобы на жгучую боль и покалывание в запястье, ладони, а также пальцах, кроме мизинца. Наблюдается болезненность и онемение, ослабление мышц, обеспечивающих движение большого пальца.

Эти заболевания обычно наступают в результате непрерывной работы на неправильно организованном рабочем месте.





 ОБЕСПЕЧЕНИЕ ЭЛЕКТРОБЕЗОПАСНОСТИ В ЖИЛЫХ ПОМЕЩЕНИЯХ

Обеспечение электробезопасности в электроустановках, используемых в производственном и бытовом назначении, постоянного и переменного тока, частота которого в приделах 50 и 400 Гц, достигается контролем значений напряжения и силы тока в электрической цепи, замыкание которой возможно через тело человека. Соответствующие измерения обеспечены НТД, различными приборами, необходимыми методиками и уникальными средствами поверки.

Обеспечение электробезопасности при эксплуатации электроустановок, использующих постоянный и переменный ток, достигается путем контролирования значений напряжения и силы тока в электрической цепи, возможное замыкание которой может произойти через тело человека.

Обеспечение электробезопасности, прежде всего, включает в себя решение технических, организационных, хозяйственных и медицинских вопросов в комплексе.

Обеспечению электробезопасности УВРМ с электроприводом  уделяется повышенное внимание, так как УВРМ именно такие машины, которые подвержены воздействию динамических нагрузок в совокупи, таких как удары и вибрация, высокие температуры. Поэтому возможность повреждения изоляции очень велика. Наиболее опасным в данном случае является возможность поражения оператора УВРМ электрическим током. 

Кроме того, электробезопасность достигается путем проведением таких мероприятий, как - двойная изоляция, снижение напряжения питания, применение защитно-отключающих устройств. Из них самый простой и эффективный способ, получивший самое широкое применение - это двойная изоляция.  Двойная изоляция представляет собой дополнительную, помимо рабочей, изоляцию, предназначенную специально для защиты оператора от поражения электрическим током в случае повреждения рабочей изоляции. 

Более того, для обеспечения электробезопасности и предупреждения поражения током при прикосновении к металлическим конструктивным частям установки и вторичным виткам нагревательных контуров, когда они вследствие какой-либо неисправности могут оказаться под опасным напряжением, их необходимо заземлять.

Для достижения электробезопасности необходимо неукоснительно  выполнять требования ГОСТ 12.2.007.13-88 (1989), строго соблюдать Правила устройства электроустановок, Правила технической эксплуатации электроустановок потребителей и Правила техники безопасности при эксплуатации электроустановок потребителей, утвержденные Госэнергонадзором.

Существуют следующие технические способы и средства для обеспечения электробезопасности, которые применяются отдельно или сочетаются друг с другом: защитное заземление, зануление, защитное отключение, выравнивание потенциалов, малое напряжение, изоляция токоведущих частей; электрическое разделение сетей; оградительные устройства; блокировка, предупредительная сигнализация, знаки безопасности; предупредительные плакаты; электрозащитные средства.

Средствами обеспечения электробезопасности являются: защитное заземление; зануление; защитное отключение; малое напряжение; электрическое разделение сетей; выравнивание потенциалов; компенсация токов замыкания на землю; изоляция токоведущих частей; индивидуальные средства защиты; оградительные устройства; предупреждающая сигнализация; блокировка; знаки безопасности.

 ГОСТ 12.1.019 - 96 подразделяет технические способы и средства обеспечения электробезопасности на две группы: обеспечивающие защиту от случайного прикосновения к токоведущим частям и защищающие от поражения током при прикосновении к металлическим нетоковедущим частям, которые могут оказаться под напряжением в результате повреждения изоляции или по иным причинам.

Защитное заземление - это предназначенное для обеспечения электробезопасности устройство, в котором не находящиеся под напряжением металлические части оборудования заземлены с помощью заземляющих проводников и заземлителей. Такое устройство может рассматриваться как защитное заземление только в том случае, когда оно выполнено с соблюдением соответствующих требований и норм.

	Важно знать и помнить, что для обеспечения электробезопасности иногда недостаточно использовать одну меру защиты. Самой важной основной защитой человека от поражения электрическим током является, прежде всего, надлежащие использование и соблюдение соответствующего уровня эксплуатации электроустановок.





РАСЧЕТ ЗАЩИТНОГО ЗАНУЛЕНИЯ

В соответствии с “Правилами технической эксплуатации электроустановок потребителей” (утверждены Министерством энергетики 13 января . N6), сети до 1000 В с изолированной нейтралью должны быть защищены пробивным предохранителем. Предохранитель должен быть установлен в нейтрали или в фазе. При этом должен быть предусмотрен контроль за его целостностью. 

Помещения, где размещены ПЭВМ, должны быть оборудованы защитным заземлением (занулением). Так как безопасное напряжение U=42 В, а фазовое напряжение Uф = 220 В, то необходимо предусмотреть зануление. Произведем расчет зануления для ПЭВМ:



Рисунок 17. Схема защитногозануления.

НЗП – нулевой защитный провод (соединяет зануляемые части с заземленной нейтральной точкой ПЭВМ).

НР – нулевой рабочий проводник (служит для питания электроприемника, подключен к заземленной нейтрале источника питания).

R0 – сопротивление нейтрали, Ом.

, 

где IКЗ – сила тока короткого замыкания, А;

UФ – фазное напряжение, В (~ 220 В);

RT – сопротивление фазного провода, Ом (~ 0,413 Ом – по паспорту).

,

,

 где - удельное сопротивление материала проводника, Ом*мм2 /м;

l – длина проводника, м;

s – площадь поперечного сечения проводника, мм2.

Для расчетов возьмем медные проводники длиной l1=600 м, l2=300 м, l3=800 м и площадью поперечного сечения s1=1.5 мм2, s2=1 мм2, s3=1мм2.

Удельное сопротивление меди:  Ом * мм2/м



 (Ом).

 (А).

Теперь по значению IКЗ можно определить скакимIНОМ необходимо в цепь питания ПЭВМ включить автомат:

,

где k – коэффициент качества защитного устройства, k = 3 (k = 3 для защитного автомата типа электромагнитного расщепителя).

 (А).

Для обеспечения защиты от поражения электрическим током в цепь питания ПЭВМ необходимо включить автомат с  А.









ВЫВОДЫ ПО ГЛАВЕ

В главе перечислены опасные и вредные факторы, которые могут возникнуть при выполнении  дипломной работы, причины их возникновения и меры по предотвращению или снижению их негативного воздействия на работника. Для защиты от поражения электрическим током был произведен расчет защитного зануления (в цепь питания ПЭВМ необходимо включить автомат с  А).




Г. Экологическая часть

ВЛИЯНИЕ ШУМА НА ПРОИЗВОДИТЕЛЬНОСТЬ ТРУДА

Шум называют всякий звук, который действует на человека неблагоприятно. Если рассматривать звук с физической точки зрения, то он представляет собой обычное механические колебания упругой среды.

	Орган человека, отвечающий за слух, может воспринимать  слышимый звук в виде колебания упругой среды, который имеет частоту примерно от 20 до 20000 Гц. Более важным интервалом, воспринимаемым слуховым восприятием является интервал от 45 до 10000 Гц. 

Важно отметить, что восприятие звука человеческим ухом напрямую зависит от его частоты, интенсивности, а также от звукового давления,  частотного диапазона шума и от равномерности воздействия в течение рабочего времени.

Если воздействие шума неблагоприятное для выполняющего работу сотрудника, то результатом является снижение производительности труда,  увеличением браковочных изделий в работе. Неблагоприятное воздействие на человека шума создает предпосылки для возникновения несчастных случаев на производстве. 

В связи с этим, и именно поэтому, такое важное значение приобретают оздоровительные и экономические мероприятия, направленные на борьбу с неблагоприятным шумом.

 ГОСТ 12.1.003-83 (1999) “ССБТ. Шум. Общие требования безопасности”, предусматривает допустимые нормы уровня шума,  представленные в таблице 1.

Таблица 1. Допустимые уровни звукового давления и звука на рабочих местах.

В настоящее время, не достаточно полно изучено влияние шума на человека. Во внешней среде существует достаточно большое количество факторов, влияющих в той или иной мере на человека. Выделить в какой мере влияет именно шум на человека весьма проблематично, тем более, что отсутствуют четкие критерии оценки. Человек реагирует на шум очень индивидуально, например одни люди очень чувствительны к громким и высоким звукам, другие напротив не выказывают никакого нетерпения. Звук может вызвать у некоторых людей недовольство, или быть причиной нарушения их самочувствия, сна, профессиональной деятельности. 

Люди по разному воспринимают звуки в будучи в разном возрасте, состоянии здоровья, настроения. Характер трудовой деятельности человека, также откладывает свой отпечаток на различия в восприятии людьми шума.

Решающее значение имеет как уровень звука, так и временной фактор, степень раздражающего воздействия напрямую зависит от  того, насколько шум превышает привычный окружающий фон, и какую информацию он в себе несет.

Доказано, что производственный шум влияет на человека наихудшим образом, он может стать причиной развития профессионального заболевания. Так, если неблагоприятный звук воздействует на человека длительное время, такое воздействие возможно может привести к частичной, или даже значительной потере слуха — профессиональной тугоухости и оказывать глубокое воздействие на организм человека всецело. При шуме частотой 130 дБ человек испытывает неприятные болевые ощущения. Шум же частотой в 150 дБ для человека, вообще непереносим, частота звука 190 дБ способна вырвать заклепки из металлических конструкций.

Важным открытием было способность шума накапливаться в организме человека, тем самым нанося ему вредное воздействие, в первую очередь на центральную нервную систему и сердечно-сосудистую систему. Такое свойство шума называется кумулятивным.

Шум сопровождает возникновение многих заболеваний и функциональных расстройств. По результатам медико-биологических исследований, каждый децибел шума, сверх допустимой нормы становится причиной понижения производительности труда на производстве ровно на один процент, тем самым увеличивая риск потери слуха на полтора процента и на полпроцента увеличивает риск сердечно-сосудистых расстройств. Частичная или полная потеря слуха — распространенное профессиональное заболевание во многих промышленно развитых странах. 

Кроме того, акустическое неблагоприятное воздействие колебаний пагубно воздействует не только на потерю слуха. Избыточный шум, накапливаясь в организме, снижается иммунный барьер у человека, что приводит к частым различным заболеваниям, от простуды до гинекологических.

По данным исследований, на предприятиях, которые можно охарактеризовать как шумные, на 20 процентов выше уровень заболеваемости работников. Кроме того, шум можно смело назвать  причиной по которой снижается работоспособность, ослабевает память и внимания, притупляется зрения, пропадает чувствительность и реакция на предупредительные сигналы, повышается внутричерепное и кровяное давление, сердечная мышца хуже сокращается, ритм дыхания и сон нарушаются, работа эндокринной системы дает сбой.

Установлено, что все указанные выше симптомы и болезни могут возникнуть при уровне шума, превышающем 90 дБ. Такой уровень шума «слишком громкий» для подавляющего большинства людей. Показатель шума ниже этой отметки не несет в себе неблагоприятных эффектов.  Эти данные были подтверждены опытами, проводимыми Бродбентом. 

Уровни звукового давления на рабочих местах в нормируемом частотном диапазоне не должны превышать значений, указанных в ГОСТ 12.1.003-83 (1999) (общий уровень шума для оценки постоянного шума и интегрально-эквивалентная оценка для непостоянного шума).

Нормируемой характеристикой постоянного шума на рабочих местах являются уровни звукового давления L, дБ в октавных полосах со среднегеометрическими частотами 63, 125, 250, 1000, 2000, 4000 и 8000 Гц.



МИКРОКЛИМАТ В РАБОЧЕЙ ЗОНЕ.

Состояние микроклимата в помещении формируется в зависимости от окружающей среды, температуры воздуха и окружающих конструкций, влажности и подвижности воздуха. 

Зона помещения представляет собой пространство, ограниченное параллельными плоскостями, образованными полом, потолком и стенами.

Оптимальные параметры микроклимата такого пространства определяются показателями, при которых длительное и систематическое воздействие внешних факторов не нарушает нормального теплового состояния организма человека и вызывает ощущение комфорта для 80 процентов людей в помещении.

К допустимым параметрам микроклимата относится такое сочетание значений показателей микроклимата, при котором длительное и систематическое внешнее воздействии на человека вызывает дискомфорт, общее или локальное ухудшение самочувствия, пониженную работоспособность, при этом, не повреждая и не ухудшая состояния здоровья.

Именно оптимальные и допустимые нормы макроклимата следует обеспечивать в жилых помещениях и общественных и производственных зданиях. 

Параметры оптимального и допустимого микроклимата, устанавливаются в нормативных документах, они различаются в зависимости от назначения помещения и времени года. Основными параметрами являются: температура воздуха; скорость движения воздуха; относительная влажность воздуха; результирующая температура помещения; локальная асимметрия результирующей температуры.

В таблице 2 приведены нормы для оптимальных и допустимых показателей микроклимата по ГОСТу 30494-96  в обслуживаемой зоне помещений.

Таблица 2. Оптимальные и допустимые нормы температуры, относительной влажности и скорости движения воздуха в обслуживаемой зоне помещений жилых зданий и общежитий



Показатели макроклимата на рабочем месте пользователей ЭВМ должны обеспечиваться оптимальными параметрами в соответствии с СанПиН 2.2.4.548-96.

Таблица 3. Оптимальные нормы для рабочего места оператора:



Важной составляющей организации рабочих мест пользователей ПЭВМ является их аттестация по условиям труда на основании Положения о порядке проведения аттестации рабочих мест по условиям труда, утвержденное Постановлением Минтруда России от 14 марта 1997 г. № 12.



Санитарно-эпидемиологический надзор и контроль за условиями труда при работе на ПЭВМ осуществляются органами и учреждениями Государственной (ведомственной) санитарно-эпидемиологической службы в соответствии с СанПиН 2.2.2/2.4.1340-03.



ВЫВОДЫ ПО ГЛАВЕ.

В данной главе было рассмотрено влияние шума на производительность труда. Показаны допустимые уровни звукового давления на рабочих местах, и влияние шума на здоровье организма.

	Также были рассмотрены параметры микроклимата, приведена таблица оптимальных и допустимых норм микроклимата в обслуживаемой зоне жилых и производственных помещений, и таблица оптимальных норм для рабочего места оператора.






Д. Решение задачи на ЭВМ

ПРОЦЕСС РЕШЕНИЯ ЗАДАЧИ

	Для разрабатываемого онлайн сервиса «CADoptimizer» был разработан web – интерфейс и объединены отдельные модули, других участников проекта, в единую программу. 

	Демонстрация пользовательского интерфейса представлена в конструктивно-технологической части данной дипломной работы. В этой же части будет представлен алгоритм того, как пользователь решает задачу многокритериальной и многопараметрической оптимизации с помощью разработанного программного обеспечения.

	Предполагается, что пользователь нашего сервиса является специалистом в области проектирования и имеет представление о методах оптимизации и базовые знания в программировании. Это нужно для ввода корректных параметров поиска, изменение стратегии поиска, адекватного выбора критериев, и верный ввод математической модели, который должен быть представлен в виде подпрограммы. Перед потенциальным пользователем стоит цель: подобрать оптимальные параметры для проектируемого объекта/процесса. 

	Для её достижения, пользователь должен решить следующие задачи:

ввести входные и выходные параметры для математической модели;

ввести математическую модель в виде подпрограммы;

выбрать математическую модель из библиотеки;

выбрать критерии для выходных параметров;

настроить параметры поиска;

запустить поиск и найти оптимальные параметры;

вернуться и изменить стратегию поиска, если это необходимо.

	Все это является сценариями, которые были программно реализованы.

	Схема общего сценария работы программы, показана на рисунке 16.



    Рисунок 16. Общий сценарий работы программы.

ЗАКЛЮЧЕНИЕ.

	В данном дипломном проекте был разработан пользовательский интерфейс для онлайн сервис «CADoptimizer», который позволяет проектировщику проводить многокритериальной и многопараметрической оптимизацию характеристик объекта или процесса, представленного в виде математической модели в режиме онлайн. 

	Также была проведена работа по объединению модулей других участников проекта в единый программный комплекс, и проведена работа по написанию руководства пользователя для онлайн сервиса.

	В ходе выполнения дипломного проекта приходилось работать с базами данных, web-ориентированными языками программирования, активно использовать open source библиотеки, необходимые для удобной разработки современных web-приложений, и работать с сервером. Был получен большой опыт разработки онлайн web приложений.

	




СПИСОК ЛИТЕРАТУРЫ

Ульянов Н.Г. – Макромоделирование и параметрическая оптимизация линейных частотно-избирательных схем трактов обработки видеосигналов. Диссертация. – М.: 1985;

Кожевников А.М. – Лекции по дисциплине «Разработка САПР»

Жигулин Г.П., Серебров А.И., Яковлев А.Д.  –  Прогнозирование устойчивости: СПбГУ ИТМО, 2004;

Флэнаган Д. – JavaScript. Подробное руководство: Символ-плюс, 2008;.

Люк Веллинг, Лора Томсон – Разработка веб – приложений с помощью PHP и MySQL, 4-е издание: Вильямс, 2012;

Максим Кузнецов, Игорь Симдянов – Объектно-ориентированное программирование на PHP – СПБ: БХВ-Петербург, 2012;

Э. Гамма, Р. Хелм, Р. Джонсон, Д. Влиссидес – Приемы объектно-ориентированного проектирования. Паттерны проектирования. – СПБ: Питер, 2013;

Макконнел С. – Совершенный код. Мастер-класс: «Русская редакция», 2012;

Трудовой кодекс Российской Федерации 30 декабря 2001 года N 197-ФЗ;

 Гигиенические требования к персональным электронно-вычислительным машинам и организации работы. Санитарно-эпидемиологические правила и нормативы – СанПиН 2.2.2/2.4.1340-03;

 Средства отображения информации – ГОГСТ Р 50948-96;

 ССБТ. Опасные и вредные производственные факторы. Классификация. – ГОСТ 12.0.003-74 (99);

 ССБТ. Опасные и вредные производственные факторы. Термины и определения. – ГОСТ 12.0.002-80*;

 ССБТ. Лампы электрические. Требования безопасности. – ГОСТ 12.2.007.13-88 (1989);

 ССБТ. Электробезопасность. Общие требования и номенклатура видов защиты. – ГОСТ 12.1.019-96;

 ССБТ. Шум. Общие требования безопасности. – ГОСТ 12.1.003-83 (1999);

 Здания жилые и общественные. Параметры микроклимата в помещениях. – ГОСТ 30494-96;

 Санитарные правила и нормы. Гигиенические требования к микроклимату производственных помещений – СанПиН 2.2.4.548-96;

 Гигиенические требования к аэроионному составу воздуха производственных и общественных помещений. – СанПиН 2.2.4.1294-03;