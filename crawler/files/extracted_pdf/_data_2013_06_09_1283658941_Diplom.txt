Министерство экономического развития и торговли РФ

Государственный университет – Высшая школа экономики

Факультет Прикладной Математики и Кибернетики

Кафедра Прикладной Математики

ВЫПУСКНАЯ КВАЛИФИКАЦИОННАЯ РАБОТА

 

На тему : Разработка административного модуля компьютерной обучающей системы

Студент группы № М-94
Бикунов Иван Александрович

Научный руководитель :
Данилов Владимир Григорьевич

Ассистент :
Петров Пётр Петрович

Москва , 2013

1

Оглавление :

1. Введение                                                                                                                               Стр.  3
1.1 Краткое описание системы.                                                                                          Стр.  3
1.2. База данных для данной обучающей системы. Схема базы данных.                     Стр.  5
1.3. Веб – интерфейс для администратора.                                                                     Стр.  6
1.4. Технология Ajax.                                                                                                              Стр.  7
2. Разработка административного модуля компьютерной обучающей                      Стр.  9
системы
2.1. Авторизация администраторов                                                                                Стр.  9 
2.2. Главный администратор. Возможности главного администратора.                Стр. 11 
2.2.1. Добавление администраторов в выбранный университет                                 Стр. 12
(администратор университета).
2.2.1.1. Добавление в выбранный университет уже зарегистрированного                 Стр. 13
в системе администратора, который ещё не привязан ни к одному 
из университетов
2.2.1.2. Cоздание  нового администратора, который будет привязан                        Стр. 14
к выбранному университету.
2.2.2. Редактирование списка университетов                                                                 Стр. 15
2.2.2.1. Добавление нового университета                                                                         Стр. 15
2.2.2.2. Удаление университета из системы                                                                    Стр. 16
2.2.2.3. Редактирование информации о выбранном университете                              Стр. 17
2.2.3. Редактирование списка преподавателей в каждом университете                    Стр. 18
2.2.3.1. Привязка профессора к определённому университету                                       Стр. 18
2.2.3.1.1. Привязка существующего профессора к выбранному                                     Стр. 19
университету
2.2.3.1.2. Привязка нового профессора к выбранному университету                            Стр. 21
2.2.3.2. Удаление привязки профессора к конкретному университету                        Стр. 22
2.2.3.3. Редактирование информации о выбранном профессоре                                    Стр. 23
2.2.4. Редактирование списка групп                                                                                   Стр. 24
2.2.4.1. Добавление новой группы в систему                                                                     Стр. 25
2.4.1.2. Удаление группы из системы                                                                                 Стр. 25
2.4.1.3. Редактирование информации о группе                                                                 Стр. 26
2.2.5. Редактирование списка студентов в каждой группе                                           Стр. 28
2.2.5.1. Привязка студента к определённой группе                                                         Стр. 29
2.2.5.1.1. Привязка существующего в системе студента                                              Стр. 30
(зарегистрированного) к выбранной группе
2.2.5.1.2. Привязка нового студента (не зарегистрированного в системе)                 Стр. 31
к выбранной группе
2.2.5.2. Удаление привязки студента к конкретной группе                                           Стр. 32
2.2.5.3. Редактирование информации о выбранном студенте                                      Стр. 33 
3. Автоматическая генерация билетов для студентов в определённой группе         Стр. 35 
 4. Приложение  (листинг программного кода)                                                               Стр. 42

2

1. Введение 
1.1.  Краткое описание системы.  
Данная обучающая система (Online Learning System 1.1) генерирует задачи с помощью 
формализованных описаний. В него входит условие задачи, решение и ответ. Для того, чтобы 
описать задачу в системе, используется язык SimpleTask. Для описания математических 
формул и выражений применяется некоторый специальный, удобный для ввода 
математических выражений, синтаксис. На данный момент в системе используется синтаксис 
программы Mathematica 5.2. 
Механизм генерирования задач в системе устроен следующим образом: сначала пользователь 
выбирает раздел и уровнь сложности задачи, потом происходит выбор одной из задач ядром 
системы из списка доступных задач (описанных в формализованном виде на языке 
SimpleTask) и обработка описания. При обработке описания, происходит разбор команд 
языка и описания данной системой, происходит отправка системой математического 
выражения для вычисления в программу Mathematica 5.2 (через библиотеку соединения с 
программой) и получение результатов вычислений. Когда получены результаты всех 
вычислений, ядро системы выполняет следующие действия : собирает ответ по описанию 
задачи и выдает ответ в формате MathML. 
Задача, которая ставится перед этой системой заключается в том, чтобы путём многократного 
решения однотипных задач у студента вырабатывался навык решения данного типа задач. 
Студент сначала выбирает тип задачи из списка задач, представленных на Рис. 1

В данном случае пользователь может выбрать одну из 6 задач, представленных на Рис. 1
Далее, нажав на ссылку с соотвествующей задачей, пользователь переходит на следующую 
страницу (Рис. 2) :

Рис. 1

3

Рис. 2

На этой странице (Рис. 2) пользователь должен ввести ответ на представленную задачу в 
соответствующую форму и, если он уверен в своём ответе, нажать на кнопку check answer.
Также у пользователя имеется возможность сменить задачу на однотипную, нажав на ссылку 
generate new task of the same type на Рис. 2), или вернутся к списку задач (Рис. 1), нажав на 
ссылку back to task list. 
Если введённый пользователем ответ правильный, то пользователь переходит на страницу, на 
которой выводится сообщение о том, что ответ правильный и ссылка ещё один такой же 
пример (Рис. 3)

Если же введенный пользователем ответ неправильный, то пользователь переходит на 
страницу, на которой выводится сообщение о том, что ответ неправильный и возможность 
посмотреть решение этого примера (Рис. 4)

Рис. 3

4

Рис. 4

Таким образом, пользователь после нескольких неудачных попыток решения данного типа 
задач и посмотрев на решение этих задач в следующий раз уже сможет решить данную 
задачу самомтоятельно. В этом состоит цель данной обучающей системы.

1.2. База данных для данной обучающей системы. Схема базы данных.

Данная система предназначена для трёх основных типов пользователей : профессоров, 
студентов, администраторов. Когда в системе регирируется новый пользователь, то 
необходимо где – то хранить информацию о данном пользователе. Для этого существует база 
данных, в  которой хранятся данные о пользователях, зарегистрированных в системе.

Также необходимо знать следующие сведения:

– привязан ли данный пользователь к какому – нибудь университету, причём если 
привязан, то к какому именно (если речь идёт о профессоре или администраторе)

– привязан ли данный пользователь к какой – нибудь группе, причём если привязан, то к 

какой именно (если речь идёт о студенте)

– какие задачи есть только у данного пользователя (частные задачи пользователя, если 

речь идёт о профессоре)

Все представленные выше сведения должны хранится в базе данных этой системы.

Схема данной базы представлена на следующем рисунке :

5

1.3. Веб – интерфейс для администратора.

Для того, чтобы пользователю было удобно работать с данной системой надо разрабатывать 
веб – интерфейс. Веб – интерфейс является своеобразным посредником между пользователем 
и системой. В этом дипломе разрабатывался веб – интерфейс для администратора.

Рис. 5

Администратор нужен для контроля за системой, а именно :

– следить за тем, чтобы в системе не было двух и более пользователей с одинаковыми 

данными (это касается профессоров, студентов и администраторов)

– удалять пользователей, которые давно не пользуются данной системой, и 

пользователей, которые при регистрации ввели некорректные данные (например, 

6

вместо имени пользователя введена цифра 1)

– прикреплять профессора к конкретному университету, чтобы он мог свои задачи 

рассылать студентам своих групп.

– прикреплять студента к конкретной группе, чтобы он мог видеть задачи, которые ему 

разослал его учитель.
  

Как мы видим роль администратора очень важна для данной системы, потому что именно 
администраторы осуществляют контроль над системой. Поэтому очень важно, чтобы у 
администратора был удобный инструмент для осуществления его функции. И такой 
инструмент есть – это веб – интерфейс для администратора, о котором пойдёт речь в пункте 
2. данного диплома.

1.4. Технология Ajax.
 
При разработке веб – интерфейса для администратора использовались такие языки 
программирования, как JavaScript, PHP, XML. Также использовалась технология Ajax, речь о 
которой пойдёт далее в этом пункте.

Технология Ajax используется для фонового (асинхронного) обмена данными браузера с 
сервером. Проще говоря, при обновлении данных страница перезагружается не полностью, 
что ускоряет загрузку данной страницы.

Рассмотрим действие данной технологии на примере (редактирование информации о 
выбранном профессоре пункт 2.2.3.3.).

Рассмотрим фрагмент программы, которая это реализует :

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}
function editProf()
{

var req = new XMLHttpRequest();
var id;
var name;
var familyname;
var univ_id;

       id = document.getElementById("new_id").value;

name = document.getElementById("new_name").value;
familyname = document.getElementById("new_familyname").value;
univ_id = document.getElementById("new_univ_id").value;
req.open( 'GET', 

'http://edu2.nscience.ru/admin/tasks/superadm/prof_tasks/edit_prof_in_un_2.php?
id='+id+'&name='+name+'&familyname='+familyname+'&univ_id='+univ_id, true );

req.onreadystatechange = function( aEvt )
{

if (req.readyState == 4)
{

if(req.status == 200)
{

if( req.responseText == 0 )
{

$('#edit_information').show();

7

}
else
{

}

window.location = "/admin/tasks/";

alert("Error loading page\n"+req.statusText+" - 

"+req.status+" - "+req.readyStatus);

}

};

}
else
{

}

req.send(null);

}

</script>

Изображение, которое формирует код в файле admin/tasks/superadm/prof_tasks/
edit_prof_in_un_1.php  (не фрагмент, представленный выше), представлено на Рис. 28

Функция Edit Prof() в данном коде, осуществляет следующие действия :

– проверяет выполнен ли код, реализованный в файле

admin/tasks/superadm/prof_tasks/edit_prof_in_un_2.php и получен ли результат 
( req.readyState == 4 ) и проверяет, статус 'OK' или другой ( req.status == 200). (только в 
этом случае данные из формы передаются в файл  admin/tasks/superadm/prof_tasks/ 
edit_prof_in_un_2.php и происходит переход на страницу  /admin/tasks/, при этом 
редактируется информация в системе о данном профессоре; в противном случае 
выводится сообщение об ошибке при загрузке страницы)

– осуществляет асинхронную передачу данных из формы в файл 

admin/tasks/superadm/prof_tasks/edit_prof_in_un_2.php и выполняет содержимое 
данного файла

8

2. Разработка административного модуля компьютерной обучающей системы

2.1. Авторизация администраторов

Авторизация администратора происходит следующим образом:

На странице с выбором категории (Рис. 6) требуется нажать на ссылку Administrator

Нажав на ссылку Administrator мы переходим на страницу с авторизацией администратора 
(Рис. 7). 

Рис. 6

 
При нажатии на кнопку login происходит проверка введённых данных, а именно, 

9

Рис. 7

проверяется, существует ли запись в базе данных с введёнными e-mail и паролем. 
Если такая запись есть, то осуществляется переход на страницу администратора (Рис. 8).

Если же такая запись в базе данных отсутствует, то под формой выводится сообщение о том, 
что пользователь с таким е-mail и паролем не зарегистрирован в системе и выводится форма, 
в которой пользователь вводит своё имя и фамилию (Рис. 9). 

Рис. 8

 
Введенные пользователем данные  заносятся в базу данных системы и осуществляется 

Рис. 9

10

переход на страницу администратора ( Рис. 8). При следующем запуске данные о 
пользователе уже будут в системе и пользователю требуется только ввести свой e-mail и 
пароль. 

2.2. Главный администратор. Возможности главного администратора.
 
Главный администратор – это администратор, который обладает большими возможностями 
по сравненнию с обычным администратором и администратором университета ( о котором 
пойдёт речь после описания возможностей главного администратора). 

Интерфейс главного администратора представлен на следующем рисунке :

Возможности главного администратора заключаются в следующем  :

Рис. 10

– добавлять администраторов  для выбранного университета (администратор 

университета, на Рис. 10 это ссылка University admin).

а) добавление в выбранный университет уже зарегистрированного в системе 
администратора, который ещё не привязан ни к одному из университетов
б) создание  нового администратора, который будет привязан к выбранному 
университету.

– редактирование списка университетов (на Рис. 10 это ссылка Information about 

universities) , а именно :

а) добавление нового университета ;
б) удаление университета из системы ;
в) редактирование информации о выбранном университете.

– редактирование списка преподавателей в каждом университете (на Рис. 10 это ссылка 

Professors in universities), а именно :

11

а) добавление нового преподавателя в выбранный университет

1) добавление уже существующего в системе профессора, который ещё не 
привязан ни к одному из университетов
2) создание нового профессора, который будет привязан к выбранному 
университету

б) удаление преподавателя из выбранного университета, к которому этот 
преподаватель привязан (при этом информация об этом преподавателе не 
удаляется из системы).
в) редактирование информации о конкретном профессоре

– редактирование списка групп (на Рис. 10 это ссылка Information about groups)

а) добавление новой группы
б) удаление  выбранной группы
в) редактирование информации о выбранной группе

– редактирование списка студентов в каждой группе (на Рис. 10 это ссылка Pupils in 

groups)

а) добавление нового студента в выбранную группу, а именно :

1) добавление уже существующего в системе студента, который ещё не 
привязан ни к одной из групп
2) создание нового студента, который будет привязан к выбранной группе

б) удаление студента из группы, к которой этот студент привязан (при этом 
информация об этом преподавателе не удаляется из системы)
в) редактирование информации о конкретном студенте

Отличительной особенностью главного администратора в отличие от администратора 
университета является возможность редактировать список преподавателей, список групп и 
список студентов в каждой группе для всех университетов, которые зарегистрированы в 
системе.

2.2.1. Добавление администраторов в выбранный университет (администратор 
университета).

Нажав на ссылку University admin на Рис. 10 мы переходим на следующую страницу :

На этой странице также задаётся университет, в который будет добавлен администратор. В 

Рис. 11

12

нашем случае администратор будет добавлен либо в университет miem, либо в университет 
moscow.

При добавлении администратора в выбранный университет у главного администратора есть 
две возможности :

1) добавить в выбранный университет уже зарегистрированного в системе 

администратора, который ещё не привязан ни к одному из университетов (ссылка 
add_existed_administrator на Рис. 11)

2) создать  нового администратора, который будет привязан к выбранному университету 

(ссылка add_new_administrator на Рис. 11)

Рассмотрим обе эти возможности поподробнее:

2.2.1.1. Добавление в выбранный университет уже зарегистрированного в системе 
администратора, который ещё не привязан ни к одному из университетов

Нажав на ссылку  add_existed_administrator на Рис. 11 мы переходим на страницу , на которой 
показан весь список администраторов, уже зарегистрированных в системе, но не 
привязанных к конкретному университету (Рис. 12).

Рис. 12

В данном случае мы видим, что в системе есть два администратора Ilya Turuntaev и vasya 
soin, которые не привязаны ни к одному университету.

Главному администратору предстоит сделать выбор : какого из этих двух администраторов 
сделать администратором данного университета. Выбор можно сделать, нажав на ссылку 
add_this_administrator напротив того администратора, который будет администратором 
университета, выбранного в пункте 2.2.1. 

В данном случае выбранный администратор станет администратором университета miem. 
 
Нажав на ссылку add_this_administrator главный администратор переходит на страницу (Рис. 
13) , на которой содержится отчёт о проделанной операции (добавлен адмистратор в 
выбранный в пункте 2.2.1. университет) и ссылка на страницу со списком возможностей 

13

главного администратора (Рис. 10). 

Рис. 13

В данном случае администратор vasya soin станет администратором университета miem.

2.2.1.2. Cоздание  нового администратора, который будет привязан к выбранному 
университету.

Нажав на ссылку  add_new_administrator на Рис. 11 мы переходим на страницу 
с авторизацией администратора (Рис. 14), причём в отличие от аналогичной страницы в 
пункте 2.1. (Рис. 7) администратор будет привязан к университету, выбранному в пункте 
2.2.1.  

Если в данной форме (Рис. 14) ввести е-mail и пароль, которые уже вводились ранее в 
систему, т.е уже есть, зарегистрированный в системе, администратор с введёнными  е-mail и 
паролем, то тогда при нажатии на кнопку login осуществляется переход на страницу этого 
администратора (Рис. 8).

Рис. 14

14

2.2.2. Редактирование списка университетов

Нажав на ссылку Information about universities на Рис. 10 мы переходим на следующую 
страницу :

Рис. 15

На этой странице главный администратор может реализовать следующие возможности :
а) добавление нового университета (ссылка Add_new_university на Рис. 15);
б) удаление университета из системы (ссылка delete_this_university на Рис. 15);
в) редактирование информации о выбранном университете (ссылка edit_this_university на Рис. 
15);.

Также в случае, если главному администратору требуется удалить университет из системы 
или редактировать информацию об университете, главному администратору требуется 
нажать на соотвествующую ссылку напротив выбранного университета.

В данном случае главный администратор имеет возможность выбрать один из двух 
университетов (miem или mgtu), информация о котором либо будет удалена, либо будет 
отредактирована.  

Также у главного администратора есть возможность выйти на страницу с выбором категории 
(Рис. 6) , нажав на ссылку logout на Рис. 15

Рассмотрим эти возможности поподробнее :

2.2.2.1. Добавление нового университета

При нажатии на ссылку Add_new_university на Рис. 15 мы переходим на следующую 
страницу :

15

Рис. 16

На этой странице (Рис. 16) главному администратору предлагается ввести название для 
нового университета, причём под формой выводится предупреждение о том, чтобы вводимое 
название университета не совпадало с названиями университетов, уже имеющихся в системе.

В данном случае вводимое название университета может быть любым, кроме miem и mgtu.

Нажав на кнопку add_this_university главный администратор переходит на страницу (Рис. 
17) , на которой содержится отчёт о проделанной операции (успешно добавлен университет в 
систему) и ссылка на страницу с редактированием списка университетов, на которой уже 
будет указан, добавленный главным администратором, университет (Рис. 15). 

 
2.2.2.2. Удаление университета из системы

Рис. 17

При нажатии на ссылку delete_this_university на Рис. 15, напротив университета, который 
требуется удалить из системы главным администратором, мы переходим на следующую 
страницу, на которой содержится отчёт о проделанной операции (успешно удалён 

16

университет из системы) и ссылка на страницу с редактированием списка университетов, на 
которой уже не будет указан, удалённый главным администратором, университет (Рис. 18). 

2.2.2.3. Редактирование информации о выбранном университете

При нажатии на ссылку edit_this_university на Рис. 15, напротив университета, информацию о 
котором требуется редактировать главному администратору, мы переходим на следующую 
страницу, на которой выведена информация о редактируемом университете и форма, в 
которую главному администратору требуется ввести новое название выбранного 
университета (Рис. 19). 

Рис. 18

Рис. 19

При нажатии на кнопку edit_name на этой странице (Рис. 19) редактируется информация о 
выбранном университете (т.е в системе будет уже изменённое название, старое при этом 
удаляется из системы) и осуществляется переход  на страницу с редактированием списка 
университетов, на которой уже будет указано уже изменённое название выбранного 

17

университета.

2.2.3. Редактирование списка преподавателей в каждом университете

Нажав на ссылку Professors in universities на Рис. 10 мы переходим на следующую страницу :

Рис. 20

На этой странице главный администратор может реализовать следующие возможности :
а) привязка существующего профессора к определённому университету, если профессор ещё 
не привязан к конкретному университету или создание нового профессора 
(не авторизованного в системе) , который уже будет прикреплён к определённому 
университету  (ссылка Add_professor_in_university на Рис. 20);
б) удаление привязки профессора к конкретному университету, т.е профессор становится не 
прикреплённым ни к одному университету (ссылка delete_this_professor на Рис. 20);
в) редактирование информации о выбранном профессоре (ссылка edit_this_professor на Рис. 
20);.

Также в случае, если главному администратору требуется удалить привязку профессора к 
университету или редактировать информацию о выбранном профессоре, главному 
администратору требуется нажать на соотвествующую ссылку напротив выбранного 
профессора. 

В данном случае главный администратор имеет возможность  удалить привязку профессора к 
университету или редактировать информацию только у профессора с именем a и фамилией a.
При удалении привязки информация об этом профессоре сохранится, только этот профессор 
не будет прикреплён ни к какому университету (univ_id будет 0 и данный профессор не будет 
показан на Рис. 20). 

Также у главного администратора есть возможность выйти на страницу с выбором категории 
(Рис. 6), нажав на ссылку logout на Рис. 20

Рассмотрим эти возможности :

2.2.3.1. Привязка профессора к определённому университету

18

При нажатии на ссылку Add_professor_in_university на Рис. 20 мы переходим на следующую 
страницу :

На этой странице также задаётся университет, к которому будет прикреплён профессор. В 
нашем случае профессор будет прикреплён либо к университету miem, либо к университету 
mgtu.

Выбор университета осуществляется путём нажатия главным администратором на 
соотвествующую ссылку напротив выбранного университета.

Рис. 21

При добавлении профессора в выбранный университет у главного администратора есть две 
возможности :

1) привязка существующего профессора к определённому университету, если профессор 

ещё не привязан к конкретному университету (ссылка add_existed_professor на Рис. 
21)

2) создание нового профессора (который ещё не авторизован в системе) , который уже 
будет прикреплён к определённому университету(ссылка add_new_professor на Рис. 
21) 

Рассмотрим эти возможности поподробнее :

2.2.3.1.1. Привязка существующего профессора к выбранному университету

При нажатии на ссылку add_existed_professor  на Рис. 21 мы переходим на следующую 
страницу :

19

Рис. 22

На этой странице у главного администратора есть возможность выбрать профессора, который 
будет прикреплён к выбранному университету, перейдя по соответствующей ссылке напротив 
выбранного профессора.

В данном случае главный администратор может прикрепить к выбранному университету 
либо профессора Ivan Bikunov, либо Дмитрий Крылов.

Заметим, что выбор университета был сделан ранее, а именно в пункте 2.2.3.1. и на Рис. 22 
выводятся только те профессоры, которые на данный момент не прикреплены ни к одному из 
университетов (univ_id =  0 на Рис. 22).

Нажав на ссылку choose_this_professor  на Рис. 22 главный администратор переходит на 
страницу (Рис. 23) , на которой содержится отчёт о проделанной операции (профессор 
прикреплён в выбранный в пункте 2.2.3.1. университет) и ссылка back_to_admin_menu на 
страницу со списком возможностей главного администратора (Рис. 10). 

Рис. 23

20

В данном случае профессор Ivan Bikunov будет прикреплён к университету miem. 

2.2.3.1.2. Привязка нового профессора к выбранному университету

При нажатии на ссылку add_new_professor  на Рис. 21 мы переходим на страницу с 
авторизацией профессора (Рис. 24):

На этой странице главному администратору требуется ввести e-mail нового профессора, 
который ещё не зарегистрирован в системе.

Если введённый e-mail на Рис. 24 совпадает с одним из e-mail, которые уже есть в базе 
данных профессоров, то при нажатии на кнопку login осуществляется переход на страницу с 
интерфейсом профессора (Рис. 25). В этом случае привязка профессора к университету не 
производится.

Рис. 24

Если же введённый e-mail не совпадает ни с одним из e-mail, которые уже есть в базе данных 

Рис. 25

21

профессоров, то главному администратору предлагается ввести имя и фамилию для нового 
профессора (Рис. 26).

Рис. 26

На данной странице (Рис. 26) мы видим, что профессора с e-mail alef нет в нашей системе, то 
есть профессор действительно является не зарегистрированным в системе.

При нажатии на кнопку Register осуществляется переход на страницу с интерфейсом 
профессора (Рис. 25).

В данном случае преподаватель c e-mail alef  и введённым именем и фамилией будет 
зарегистрирован в системе и прикреплён к университету miem.

2.2.3.2. Удаление привязки профессора к конкретному университету

При нажатии на ссылку delete_this_professor на Рис. 20, напротив профессора, который , по 
мнению главного администратора, не должен быть прикреплён ни к одному университету , 
мы переходим на следующую страницу, на которой содержится отчёт о проделанной 
операции (привязка выбранного профессора к университету успешно удалена) и ссылка на 
страницу с интерфейсом главного администратора (Рис. 27).

22

Рис. 27

В данном случае будет удалена привязка профессора Ivan Bikunov к университету miem.

2.2.3.3. Редактирование информации о выбранном профессоре

При нажатии на ссылку edit_this_professor на Рис. 20, напротив профессора, информацию о 
котором требуется редактировать главному администратору, мы переходим на следующую 
страницу, на которой выведена информация о редактируемом университете и форма, в 
которую главному администратору требуется ввести новое название выбранного 
университета (Рис. 28). 

Рис. 28

23

При нажатии на кнопку edit_prof на этой странице (Рис. 28) редактируется информация о 
выбранном профессоре (т.е в системе будет уже изменённая информация об этом профессоре, 
старая информация при этом удаляется из системы) и осуществляется переход  на  страницу 
со списком возможностей главного администратора (Рис. 10).

Заметим, что у главного администратора есть возможность при редактировании информации 
о профессоре изменить его привязку к университету (поле univ_id на Рис. 28), но при этом 
также выводится предупреждение, чтобы введённый главным администратором univ_id 
совпадал  с одним из univ_id, которые есть в системе (информация о них находится под 
формой редактирования информации о профессоре на Рис. 28). 

2.2.4. Редактирование списка групп

Нажав на ссылку Information about groups на Рис. 10 мы переходим на следующую страницу :

Рис. 29

На этой странице главный администратор может реализовать следующие возможности :
а) добавление новой группы в систему, причём эта группа будет прикреплена к университету, 
который будет выбран в этом пункте (ссылка add_group на Рис. 29);
б) удаление группы из системы (ссылка delete_group на Рис. 29);
в) редактирование информации о группе, которая уже зарегистрирована в системе (ссылка 
edit_group на Рис. 29);.

Для того чтобы добавить группу в определённый университет, удалить группу из 
определённый университета или редактировать информацию о группе, которая прикреплена 
к определённому университету главному администратору требуется нажать на 
соотвествующую ссылку напротив выбранного университета (Рис. 29).

В данном случае главный администратор имеет возможность выбрать один из двух 
университетов (miem или mgtu), в который либо будет добавлена группа, либо будет удалена 
группа, либо будет измена информация о группе.

Также у главного администратора есть возможность выйти на страницу с выбором категории 
(Рис. 6) , нажав на ссылку logout на Рис. 29.

24

Рассмотрим эти возможности поподробнее :

2.2.4.1. Добавление новой группы в систему

Нажав на ссылку add group на Рис. 29 мы переходим на следующую страницу :

Рис. 30

На этой странице (Рис. 30) главному администратору предлагается ввести название для 
нового группы, которая будет прикреплена к университету, выбранному в пункте 2.2.4.

В данном случае группа, название которой будет введено главным администратором, будет 
прикреплена к университету miem.

Также выводится предупреждение, чтобы введённое название группы не совпадало с 
названиями групп, уже привязанных к данному университету (названия групп в разных 
университетах могут совпадать).

В данном случае название для новой группы может быть любым, кроме math2.

Нажав на кнопку add_group (Рис. 30) главный администратор переходит на страницу с 
редактированием списка групп (Рис. 29) , причём в системе уже зарегистрирована и 
прикреплена к выбранному университету группа, название которой было введено в этом 
пункте. 

2.4.1.2. Удаление группы из системы

Нажав на ссылку delete group на Рис. 29 мы переходим на следующую страницу :

25

Рис. 31

На данной странице (Рис. 31) главному администратору предоставляется возможность 
удалить одну из групп, прикреплённых к университету, который был выбран в пункте 2.2.4.

В данном случае главный администратор может удалить из университета miem либо группу 
math2, либо группу m94.

При нажатии на ссылку delete_group на Рис. 31, напротив группы, которую требуется удалить 
из системы, мы переходим на следующую страницу (Рис. 32), на которой содержится отчёт о 
проделанной операции (успешно удалёна выбранная группа из системы) и ссылка на 
страницу страницу со списком возможностей главного администратора (Рис. 10).

2.4.1.3. Редактирование информации о группе

Нажав на ссылку edit group на Рис. 29 мы переходим на следующую страницу :

Рис. 32

26

Рис. 33

На данной странице (Рис. 33) главному администратору предоставляется возможность 
редактировать одну из групп, прикреплённых к университету, который был выбран в пункте 
2.2.4.

В данном случае главный администратор может редактировать либо группу math2, либо 
группу m94, которые прикреплены к университету miem.

При нажатии на ссылку edit_group на Рис. 33, напротив группы, информацию о которой 
необходимо отредактировать, мы переходим на следующую страницу (Рис. 34).

На данной странице (Рис. 34) главный администратор имеет возможность просмотреть 
информацию о редактируемом университете и заполнить форму, в которую главному 

Рис. 34

27

администратору требуется ввести новое название выбранной группы. 

При нажатии на кнопку edit_group на этой странице (Рис. 34) редактируется информация о 
выбранной группе (т.е в системе будет уже изменённая информация об этой группе, старая 
информация при этом удаляется из системы) и осуществляется переход  на  страницу со 
списком возможностей главного администратора (Рис. 10).

Заметим, что у главного администратора есть возможность при редактировании информации 
о группе изменить её привязку к университету (поле univ_id на Рис. 34), но при этом также 
выводится предупреждение, чтобы введённый главным администратором univ_id совпадал  с 
одним из univ_id, которые есть в системе (информация о них находится под формой 
редактирования информации о группе на Рис. 34). 

2.2.5. Редактирование списка студентов в каждой группе

Нажав на ссылку Pupils in groups на Рис. 10 мы переходим на следующую страницу :

Рис. 35

На этой странице главный администратор может реализовать следующие возможности :
а) привязка существующего студента к определённой группе, если студент ещё не привязан к 
конкретной группе или создание нового студента (не авторизованного в системе) , который 
уже будет прикреплён к определённой группе  (ссылка Add_student_in_group на Рис. 35);
б) удаление привязки студента к конкретной группе, т.е студент становится не 
прикреплённым ни к одной группе (ссылка delete_this_student на Рис. 35);
в) редактирование информации о выбранном студенте (ссылка edit_this_student на Рис. 35);.

Также в случае, если главному администратору требуется удалить привязку студента к группе 
или редактировать информацию о выбранном студенте, главному администратору требуется 

28

нажать на соотвествующую ссылку напротив выбранного студента. 

В данном случае главный администратор имеет возможность  удалить привязку студентов к 
группе или редактировать информацию только у студентов представленных на Рис. 35. При 
удалении привязки информация об этом студенте сохранится в системе, только этот студент 
не будет прикреплён ни к какой группе (group_id будет 0 и данный студент не будет показан 
на Рис. 35). 

Также у главного администратора есть возможность выйти на страницу с выбором категории 
(Рис. 6), нажав на ссылку logout на Рис. 35

Рассмотрим эти возможности :

2.2.5.1. Привязка студента к определённой группе

При нажатии на ссылку  Add_student_in_group на Рис. 35 мы переходим на следующую 
страницу :

На этой странице также задаётся группа, к которой будет прикреплён студент. В нашем 
случае студент будет прикреплён либо к группе math, либо к группе math2, либо к группе 
m94.

Выбор группы осуществляется путём нажатия главным администратором на 
соотвествующую ссылку напротив выбранной группы.

Рис. 36

При добавлении студента в выбранную группу у главного администратора есть две 
возможности :

1) привязка существующего профессора к определённому университету, если профессор 

ещё не привязан к конкретному университету (ссылка add_existed_student на Рис. 36)
2) создание нового профессора (который ещё не авторизован в системе) , который уже 

будет прикреплён к определённому университету (ссылка add_new_student на Рис. 36) 

Рассмотрим эти возможности поподробнее :

29

2.2.5.1.1. Привязка существующего в системе студента (зарегистрированного) к 
выбранной группе

При нажатии на ссылку  add_existed_student на Рис. 36 мы переходим на следующую 
страницу :

Рис. 37

На этой странице у главного администратора есть возможность выбрать студента, который 
будет прикреплён к выбранной группе, перейдя по соответствующей ссылке напротив 
выбранного студента.

В данном случае главный администратор может прикрепить к выбранной группе одного из 
студентов, представленных на Рис. 37

Заметим, что выбор группы был сделан ранее, а именно в пункте 2.2.5.1. и на Рис. 37 
выводятся только те студенты, которые на данный момент не прикреплены ни к одной из 
групп (group_id =  0 на Рис. 37).

Нажав на ссылку choose_this_student  на Рис. 37 главный администратор переходит на 
страницу (Рис. 38) , на которой содержится отчёт о проделанной операции (студент 
прикреплён в выбранную в пункте 2.2.5.1. группу) и ссылка back_to_admin_menu на страницу 
со списком возможностей главного администратора (Рис. 10). 

30

В данном случае студент сергей сергеев будет прикреплён к группе math.

2.2.5.1.2. Привязка нового студента (не зарегистрированного в системе) к выбранной 
группе

При нажатии на ссылку add_new_student на Рис. 36 мы переходим на страницу с 
авторизацией студента (Рис. 39) :

Рис. 38

Рис. 39

На этой странице главному администратору требуется ввести e-mail нового студента, 
который ещё не зарегистрирован в системе.

Если введённый e-mail на Рис. 39 совпадает с одним из e-mail, которые уже есть в базе 
данных студентов, то при нажатии на кнопку login осуществляется переход на страницу с 
интерфейсом студента (Рис. 40). В этом случае привязка студента к группе не производится.

31

Если же введённый e-mail не совпадает ни с одним из e-mail, которые уже есть в базе данных 
студентов, то главному администратору предлагается ввести имя и фамилию для нового 
студента (Рис. 41).

Рис. 40

Рис. 41

На данной странице (Рис. 41) мы видим, что студента с e-mail aleх нет в нашей системе, то 
есть студент действительно является не зарегистрированным в системе.

При нажатии на кнопку Register осуществляется переход на страницу с интерфейсом 
студента (Рис. 40).

В данном случае студент c e-mail aleх  и введённым именем и фамилией будет 
зарегистрирован в системе и прикреплён к группе math.

2.2.5.2. Удаление привязки студента к конкретной группе

При нажатии на ссылку delete_this_student на Рис. 35, напротив студента, который , по 

32

мнению главного администратора, не должен быть прикреплён ни к одной группе , мы 
переходим на следующую страницу, на которой содержится отчёт о проделанной операции 
(привязка выбранного студента к группе успешно удалена) и ссылка на страницу с 
интерфейсом главного администратора (Рис. 42).

В данном случае будет удалена привязка студента сергей сергеев к группе math.

2.2.5.3. Редактирование информации о выбранном студенте

При нажатии на ссылку edit_this_student на Рис. 35, напротив студента, информацию о 
котором требуется редактировать главному администратору, мы переходим на следующую 
страницу :

Рис. 42

Рис. 43

33

При нажатии на кнопку edit_pupil на этой странице (Рис. 43) редактируется информация о 
выбранном студенте (т.е в системе будет уже изменённая информация об этом студенте, 
старая информация при этом удаляется из системы) и осуществляется переход  на  страницу 
со списком возможностей главного администратора (Рис. 10).

Заметим, что у главного администратора есть возможность при редактировании информации 
о студенте изменить его привязку к группе (поле group_id на Рис. 43), но при этом также 
выводится предупреждение, чтобы введённый главным администратором group_id совпадал  
с одним из group_id, которые есть в системе (информация о них находится под формой 
редактирования информации о студенте на Рис. 43). 

34

3. Автоматическая генерация билетов для студентов в определённой группе.

В данном пункте будет рассказано, как на данный момент в обучающей системе реализована 
возможность автоматической генерации билетов для студентов своих групп преподавателем. 
При этом требуется, чтобы он был прикреплён к одному из университетов, которые 
находятся на данный момент в базе данных обучающей системы. Заметим, что профессор, 
только что зарегистрировавшийся в системе, не прикреплён ни к одному из университетов, 
зарегистрированных в системе. Прикрепить преподавателя к определённому университету 
может только главный администратор или администратор этого университета.                            
Для того, чтобы войти в раздел автоматической генерации билета, преподавателю 
необходимо авторизоваться в системе и на странице с интерфейсом преподавателя выбрать 
пункт Tests management (вторая ссылка сверху под Professor's workspace на Рис. 44).

Нажав на ссылку  Tests management  на Рис. 44 осуществляется переход на страницу, на 
которой преподаватель может выбрать количество тестов, которое он хочет создать, но выбор 
теста, который будет создан в первую очередь, будет осуществлён путём нажатия на одну из 
ссылок вида Test x, где x – положительное целое число (Рис. 45).  

Рис. 44

35

После выбора преподавателем теста, который будет создан в первую очередь, он переходит 
на страницу на которой он может выбрать типы задач, которые будут входить в тест. Этих 
задач может быть сколько угодно, но по умолчанию их количество равно 4.

Рис. 45

Рис. 46

Далее, после того как преподаватель выбрал сколько задач будет в тесте, он должен нажать на 
кнопку generate_bilet. После нажатия на кнопку преподаватель должен выбрать какие типы 
задач использовать в тесте :

– только задачи, общие для всех преподавателей, зарегистрированных в системе
– только свои задачи
– свои и общие задачи

36

На данный момент в системе реализована возможность использовать только те задачи, 
которые являются общими для всех преподавателей, зарегистрированных в системе (ссылка 
using only public tasks на Рис. 47).
Далее, нажав на эту ссылку, преподаватель переходит на страницу с выбором группы (при 
этом показываются только группы того университета, к которому прикреплён преподаватель), 
для которой будет автоматически сгенерирован выбранный ранее преподавателем тест.

Рис. 47

Рис. 48
Далее перейдя по ссылке generate examenation papers for this group на Рис. 48 преподаватель 
переходит на страницу, на которой показаны все, имеющееся на данный момент в системе 
задачи, которые являются общими для всех преподавателей, зарегистрированных в ситеме, и 
количество человек в выбранной группе (равно количеству создаваемых билетов) 

37

При нажатии на ссылку Show Examenation papers for this group на Рис. 49 происходит 
генерация билетов, количество и содержание которых было определено ранее.
Для примера будет показана генерация билета для группы math2 университета miem, в 
который на данный момент находится один ученик (это сделано для того, чтобы был 
полностью показан интерфейс)

Рис. 49

Рис. 50

38

На этой странице (Рис. 50) преподаватель может выбрать одну из возможностей :

– вернуться на страницу преподователя (Рис. 44), осуществляется путём нажатия на 

ссылку back to professor menu на Рис. 50.

– перейти на страницу, на которой будет показана версия билета, которая пойдёт на 

печать (печать билета на данный момент не осуществлена, но её можно включить в 
план развития системы), осуществляется путём нажатия на ссылку version for print на 
Рис. 50. Эта возможность показана на Рис. 51.

Рис. 51

– редактирование билета, если в билете оказалось несколько одинаковых задач, 

осуществляется путём нажатия на ссылку change task in examenation paper на Рис. 50 .

Рассмотрим возможность редактирования билета, если в билете оказалось несколько 
одинаковых задач поподробнее :
Если преподаватель нажал на ссылку change task in examenation paper на Рис. 50  то он 
переходит на страницу с выбором задачи, которую требуется изменить :

39

Заметим, что при этом создаётся файл old_test.xml, в котором хранится информация о билете. 
Это очень удобно, потому что можно програмно изменять этот файл и потом брать уже 
изменённую инфомацию из этого файла.
В данном случае, содержимое файла old_test.xml имеет вид : 

Рис. 52

40

Рис. 53

Выбор задачи, которую хочет изменить преподаватель, осуществляется при помощи нажатия 
на ссылку change this task for the task of the same task на Рис. 52 у соотвествующей задачи. 
При нажатии на эту ссылку осуществляется переход на  следующую страницу :

На этой странице (Рис. 54) преподаватель может выбрать одну из возможностей :

– вернуться на страницу преподователя (Рис. 44), осуществляется путём нажатия на 

ссылку back to tasks list на Рис. 54.

– перейти на страницу с изменённым билетом, осуществляется путём нажатия на 

ссылку back to Examenation Paper на Рис. 54 (Рис. 55).

Рис. 54

– изменить задачу ещё раз на однотипную, осуществляется путём нажатия на ссылку 

generate new task of the same type на Рис. 54.

Рис. 55

41

4. Приложение (листинг программного кода)

В данном разделе будет представлен листинг программ, которые были созданы для того, 
чтобы выполнить задачу диплома, а именно разработка административного модуля 
компьютерной обучающей системы.
Листинг к пункту 2.1
файл admin/1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

 

 

var univ_id;

univ_id = <?php echo $_GET["univ_id"] ;?>

    if (univ_id != 0)
    {
    
    

    }        
 </script>

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";

window.location = "/prof/";

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php

//var_dump( $_COOKIE );

//var_dump($_COOKIE["login"]  );

if( $_COOKIE["login"] != false and $_COOKIE["password"] != false )
{

try
{
    $dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

    $result = $dbh->query( "SELECT * from admin_item where login like '".$_COOKIE["login"]."' 

and password like '".$_COOKIE["password"]."' ");

    $admin = $result->fetch();

    $dbh = null;
}
catch( PDOException $e )
{
    print "Error!: " . $e->getMessage() . "<br/>";
    die();
}

echo "Dear ".$admin["name"]." ".$admin["familyname"]." (<a href='#' 

onclick='unauthProfessor();'>logout</a>)"."<br/>";

echo "<br/>";
echo "There is the list of tasks :"."<br/>";
echo "<a href="."/admin/tasks/?name=".$admin['name']."&familyname=".

$admin['familyname'].">List of tasks</a>";

42

}
else
{

}

?>

$univ_id=$_GET["univ_id"];
header( "Location: http://edu2.nscience.ru/admin/auth.php?univ_id=".$univ_id, false );

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/auth.php

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

var login;
    var password;
    

function checkLogin()
{

var req = new XMLHttpRequest();
var login;
var password;

login = document.getElementById( "auth_login" ).value;
password = document.getElementById( "auth_password" ).value;
//document.getElementById( "auth_button" ).disabled = false;

//alert( req.readyState );
req.open( 'GET', 'http://edu2.nscience.ru/ajax/admin_auth.php?

login='+login+'&password='+password, true );

req.onreadystatechange = function( aEvt )
{

if (req.readyState == 4)
{

if(req.status == 200)
{

if( req.responseText == 0 )
{

//alert( "not found" );
$('#register_form').show();
//document.getElementById( "auth_button" ).disabled = 

true;

true;

//document.getElementById( "auth_login" ).disabled = 

}
else
{

$('#auth_form').hide();
$('#register_form').hide();
//$('#positive_auth_form').show(slow);

document.cookie="login="+login+"; path=/";
document.cookie="password="+password+"; path=/";

window.location = "/admin/1.php";

}
//alert( req.responseText );

                                                document.cookie="mode=admin; path=/";

}
else
{

}

- "+req.readyStatus);

}

};

alert("Error loading page\n"+req.statusText+" - "+req.status+" 

43

req.send(null);

}

function registerAdmin()
{

var req = new XMLHttpRequest();
var password;
var login;
var name;
var familyname;

password = document.getElementById( "auth_password" ).value;
login = document.getElementById( "auth_login" ).value;
name = document.getElementById( "register_name" ).value;
familyname = document.getElementById( "register_familyname" ).value;
univ_id = <?php echo $_GET["univ_id"] ;?>
//document.getElementById( "auth_button" ).disabled = false;

                //alert( login );

//alert( req.readyState );
req.open( 'GET', 'http://edu2.nscience.ru/ajax/admin_register.php?

login='+login+'&password='+password+'&name='+name+'&familyname='+familyname+'&univ_id='+univ_id, 
true );

req.onreadystatechange = function( aEvt )
{

if (req.readyState == 4)
{

if(req.status == 200)
{

if( req.responseText == 1 )
{

$('#auth_form').hide();
$('#register_form').hide();
$('#positive_auth_form').show();

                                                document.cookie="mode=admin; path=/";

window.location = "/admin/1.php";

document.cookie="login="+login+"; path=/";
document.cookie="password="+password+"; path=/";

true;

//document.getElementById( "auth_button" ).disabled = 

}
else
{

$('#register_error').show();

alert("Error loading page\n"+req.statusText+" - "+req.status+" 

                                                alert( req.responseText );
//$('#register_form').hide();

}
//alert( req.responseText );

}
else
{

}

- "+req.readyStatus);

}

};

req.send(null);

}

</script>

<!-- style="display: block;" -->

<div id="register_error" style="display: none; padding-top: 20px;">
An error occurpied during registration process. Please, send all available information regarding 
this issue to software developers.
</div>

44

<div id="auth_form" style="display: block; padding-top: 20px;">
Please, enter your e-mail address and your password:
         <div class="big-form">

         <form id="form1" name="form1" method="post" action="">
         <table>
         <tr>
            <td>
            e-mail
            </td>
            <td>
            <label>
               <input name="textfield" type="text" class="big-field" id="auth_login" size="35" 
id="auth_login" />
            </label>
            </td>
          </tr>
            <tr>
            <td>
            password
            </td>
            <td>
            <label>
               <input name="textfield" type="password" class="big-field" id="auth_password" 
size="35" id="auth_password" />
            </label>
            </td>
            <td>
            <label>
                <input type="button" onclick="checkLogin();" value="login" id="auth_button" 
class="big-button" />
            </label>
            </td>

         </form>
         </div>

</table>

<script language="JavaScript">

document.getElementById( 'auth_login' ).focus();
document.getElementById( 'auth_password' ).focus();

</script>

<!--
<br><input type="text" id="auth_login"> <input type="button" onclick="checkLogin();" value="войти" 
id="auth_button">
-->
            </div>

 

<  div      id  =  "register_form"
 =  "right_block"
 >  
There is no registered account in our system that would correspond with entered e-mail.
<br>Please, fill the form below and our system will register you.

 :   none   ;   padding-top

 :   20px   ;"    class

 

    style

 ="  display

 

 

 

 

<table  border="0" cellpadding="0" cellspacing="0">
   <tr>
      <td class="form_left-sign">Name</td>
      <td class="right_block">
         <form id="form2" name="form2" method="post" action="">
            <p>
               <label>

                  <input name="register_name" type="text" id="register_name" size="35" />
               </label>
            </p>
         </form>
      </td>
   </tr>
   <tr>
      <td class="form_left-sign">Familyname</td>

      <td class="right_block">
         <form id="form2" name="form2" method="post" action="">
            <p>

45

               <label>
                  <input name="register_familyname" type="text" id="register_familyname" size="35" 
/>
               </label>
            </p>
         </form>
      </td>

   </tr>
   <tr>
      <td>&nbsp;</td>
      <td class="right_block">
         <form id="form3" name="form3" method="post" action="">
            <label>
               <input type="button" name="register_button" onclick="registerAdmin();" 
id="register_button" value="Register" />
            </label>
         </form>

      </td>
   </tr>
</table>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл ajax/admin_auth.php

<?

try
{
    $dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$professor = $result->fetch();
//$return = 
$return = 1;

    $result = $dbh->query( "SELECT * from admin_item where login like '".$_GET["login"]."' and 
password like '".$_GET["password"]."' " );
    
    if( $result->rowCount() > 0 )   
    {
    
    
    
    }
    else
    {
    
    }
        
    $dbh = null;
}
catch( PDOException $e )
{
    print "Error!: " . $e->getMessage() . "<br/>";
    die();
}

$return = 0;

echo $return;

?>

файл ajax/admin_register.php
<?

try
{
    $dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );
    

46

    $result = $dbh->exec( "insert into admin_item values ( 0, '".$_GET["name"]."', '".
$_GET["familyname"]."', '".$_GET["login"]."','".$_GET["password"]."', 0,'".$_GET["univ_id"]."', 0 )" 
);
    
    if( $result > 0 )   
    {
    
    }
    else
    {
        $info = $dbh->errorInfo();
    
    }

$return = $info[2];

$return = 1;

    $dbh = null;
}
catch( PDOException $e )
{
    print "Error!: " . $e->getMessage() . "<br/>";
    die();
}

echo $return;

?>

В данных листингах мною было сделано прикрепление администратора к определенному 
университету (univ_id = <?php echo $_GET["univ_id"] ;?>). По умолчанию, то есть если 
администратор регистрируется в системе, администратор не прикреплён ни к одному из 
университетов. Также была добавлена возможность при авторизации администратора 
проверять наличие не только аналогичных e – mail в системе, но и аналогичных паролей.    
Листинг к пункту 2.2
файл admin/tasks/index.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
echo "<br/>"; 
?>

<!--  Tasks :<br/> -->
<!--  <br><a href="/admin/tasks/listofprofessors/">Information about professors(with function 
delete)</a> -->

<?php
try
{

$dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

$result1 = $dbh -> query ( "SELECT * from admin_item where login like '".$_COOKIE["login"]."' 

and password like '".$_COOKIE["password"]."' ");

$result1 -> setFetchMode(PDO::FETCH_ASSOC);
//$row = $result1 -> fetch();

47

while ( $row = $result1 -> fetch() )
{

if (1 == $row['superadmin'])
{

echo "Tasks for head administrator : <br>";
echo "<br><a href="."/admin/tasks/listofprofessors/".">Information about 

professors(with function delete)</a>";

$_GET["name"]."&familyname=".$_GET["familyname"].">Information about administrators (with function 
delete) </a>";

echo "<br><a href="."/admin/tasks/superadm/admin_tasks.php?name=".

echo "<br><a 

href="."/admin/tasks/superadm/pupil_tasks/delete_pupil_from_db_1.php?name=".
$_GET["name"]."&familyname=".$_GET["familyname"].">Information about pupils (with function delete) 
</a>";

$_GET["name"]."&familyname=".$_GET["familyname"].">Information about universities (with functions 
add,delete and edit) </a>";

echo "<br><a href="."/admin/tasks/superadm/university_tasks.php?name=".

echo "<br><a href="."/admin/tasks/superadm/prof_tasks.php?name=".

$_GET["name"]."&familyname=".$_GET["familyname"]."> Professors in universities (with functions 
add,delete and edit) </a>";

echo "<br><a href="."/admin/tasks/superadm/group_tasks.php?name=".

$_GET["name"]."&familyname=".$_GET["familyname"]."> Information about groups (with functions 
add,delete and edit) </a>";

$_GET["name"]."&familyname=".$_GET["familyname"]."> University admin (with function add) </a>";

echo "<br><a href="."/admin/tasks/superadm/university_admin.php?name=".

echo "<br><a href="."/admin/tasks/superadm/pupil_tasks.php?name=".

$_GET["name"]."&familyname=".$_GET["familyname"]."> Pupils in groups (with functions add,delete and 
edit) </a>";

}
elseif ($row['univ_id'] != 0)
{

$univ_id=$row['univ_id'];
echo "Tasks for university administrator : <br>";
echo "<br><a href="."/admin/tasks/listofprofessors/info.php?univ_id=".

$univ_id.">Information about professors(with function delete)</a>";

echo "<br><a href="."/admin/tasks/unadmin/prof_tasks.php?name=".

$_GET["name"]."&familyname=".$_GET["familyname"]."&univ_id=".$univ_id."> Professors in universities 
</a>";

echo "<br><a href="."/admin/tasks/unadmin/group_tasks.php?name=".

$_GET["name"]."&familyname=".$_GET["familyname"]."&univ_id=".$univ_id."> Information about groups 
</a>";

$_GET["name"]."&familyname=".$_GET["familyname"]."&univ_id=".$univ_id."> Pupils in groups </a>";

echo "<br><a href="."/admin/tasks/unadmin/pupil_tasks.php?name=".

}

}

$dbh=null;

}
catch( PDOException $e )
{

}
?>

print "Error!: " . $e->getMessage() . "<br/>";
die();

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

Листинг к пункту 2.2.1. и его подпунктам
файл admin/tasks/superadm/university_admin.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

    <script language="JavaScript">

function unauthProfessor()

48

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

{

}

</script>

Tasks :

<?php 
 
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
echo "<br/>";
echo "<br><br>Please, choose one of these universities, in which will be added administrator ";
echo "<br><br>";
echo ("<table border = '1'>");
echo ("<tr><td>id</td><td>name</td>");
echo ("<td>add_existed_administrator</td><td>add_new_administrator</td>");

try
{

$dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

$result1 = $dbh -> query ( "SELECT * from university order by id" );
$result1 -> setFetchMode(PDO::FETCH_ASSOC);
//$row = $result1 -> fetch();

while ( $row = $result1 -> fetch() )
{

echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);
echo ("</td>"."<td>"."<a 

href="."/admin/tasks/superadm/university_admin/add_admin_1.php?id=".
$row['id'].">add_existed_administrator</a>");

echo

("</td>"."<td>"."<a href="."/admin/1.php?univ_id=".

$row['id'].">add_new_administartor</a>");

echo ("</td>"."</tr>");

}

$dbh=null;

}
catch( PDOException $e )
{

}
echo("</table>");
?>

print "Error!: " . $e->getMessage() . "<br/>";
die();

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/university_admin/add_admin_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

49

<?php
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
echo "<br/>"; 
?>

<?php

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

    

  $result1 = $dbh -> query ( "SELECT * from admin_item where univ_id = 0 and superadmin = 0" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();
  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
  $id=$_GET["id"];
  echo "<br>One of these admins will be administrator of selected university. Select him.";
  echo "<br> University was selected on the previous page";
  echo "<br><br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>");
  echo ("familyname</td><td>login</td><td>password</td>");
  echo ("<td>select_administrator</td></tr>");
    while ( $row = $result1 -> fetch() )
    {  
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']."</td>"."<td>");
      echo ($row['familyname']."</td>"."<td>".$row['login']."</td>");
      echo ("<td>".$row['password']."</td>"); 
      echo ("<td>"."<a href="."/admin/tasks/superadm/university_admin/add_admin_2.php?id=".
$id."&admin_id=".$row['id'].">add_this_administrator</a>");

  echo ("</td>"."</tr>");

    } 
    echo("</table>");
    $_COOKIE['mode'] = "admin";

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>
файл admin/tasks/superadm/university_admin/add_admin_2.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php

try
{

);

$un_id = $_GET["id"];
$admin_id = $_GET["admin_id"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "UPDATE admin_item set univ_id = '$un_id' where id = '$admin_id'"  

}
catch( PDOException $e )
{

}
?>

print "Error!: " . $e->getMessage() . "<br/>";
die();

50

You sucsessfully added administrator to selected university.

<br><a href="/admin/tasks/">back to admin menu</a>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

Листинг к пункту 2.2.2. и его подпунктам
файл admin/tasks/superadm/university_tasks.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
echo "<br/>"; 
?>

<?php
echo "If you want add university in the system, please, click this link : "; 
echo "<br><a href="."/admin/tasks/superadm/university_tasks/add_university_1.php?name=".
$_GET["name"]."&familyname=".$_GET["familyname"].">Add new university </a>";
?>

<?php 
  echo "<br><br>Please, choose university, which you want edit or delete : <br>";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");
  echo ("<td>delete</td><td>edit</td>");
файл admin/tasks/superadm/university_tasks.php
try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from university order by id" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']); 
      echo ("</td>"."<td>"."<a 
href="."/admin/tasks/superadm/university_tasks/delete_university.php?id=".
$row['id'].">delete_this_university</a>");
      echo
href="."/admin/tasks/superadm/university_tasks/edit_university_new_1.php?id=".
$row['id'].">edit_this_university</a>");  

("</td>"."<td>"."<a 

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )

51

    

{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/university_tasks/add_university_1.php
<?phpЛистинг к пункту 2.2.2. и его подпунктам
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php 
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 

onclick='unauthProfessor();'>logout</a>)"."<br/>";

echo "<br/>";
?>

<  div      id  =  "enter_information"

    style
Please, enter name of the new university:
         <div class="big-form">

 

 

 ="  display

 

 :   block 

 ;   padding-top

 :   20px   ;"  >  

 

         <form id="form1" name="form1" method="post" 
action="/admin/tasks/superadm/university_tasks/add_university_2.php">
         <table>
         <tr>
            <td>
            name
            </td>
            <td>
            <label>
               <input type="text" class="big-field" name="name_university" size="35" />
            </label>
            </td>
            <td>
            <label>
               <!--  <input type="submit" name="Add" 
onclick='location.href="/admin/tasks/superadm/university_tasks/add_university.php"'  
value="add_value" class="big-button" /> -->
              <input type="submit" name="Add" value="add_this_university" class="big-button" />
            </label>
            </td>
            </tr>

         </form>
         </div>

</table>

<?php
  echo "<u>Be attention, enter name, which is not in the list below : </u><br>";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");

try
{

52

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from university order by id" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);   

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/university_tasks/add_university_2.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php
if ($_POST['Add'] == "add_this_university")
{

$un_name = $_POST["name_university"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "INSERT INTO university values ( 0, '".$un_name."' )" );

}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

} 
try
{

}
?>

You successfully added new university to the system.
<br><a href="/admin/tasks/superadm/university_tasks.php">previous_page</a>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/university_tasks/delete_university.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php 
$id = $_GET["id"];
try
{

53

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "DELETE from university where id = '$id'" );

}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

}
?>
 University, selected in the previous page, is succesfully deleted from system.
<br><a href="/admin/tasks/superadm/university_tasks.php">previous_page</a>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/university_tasks/edit_university_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

}
function editUniver()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

var req = new XMLHttpRequest();
var id;
var name;

    id = document.getElementById("new_id").value;

name = document.getElementById("new_name").value;
req.open( 'GET', 

'http://edu2.nscience.ru/admin/tasks/superadm/university_tasks/edit_university_new_2.php?
id='+id+'&name='+name, true );

//alert( req.readyState );
//alert( req.responseText);
req.onreadystatechange = function( aEvt )
{

if (req.readyState == 4)
{

if(req.status == 200)
{

if( req.responseText == 0 )
{

//alert( "not found" );
$('#edit_information').show();

"/admin/tasks/superadm/university_tasks.php";
}
//alert( req.responseText );

window.location = 

}
else
{

}
else
{

"+req.status+" - "+req.readyStatus);

}

};

}

req.send(null);

}

</script>

//alert("Error loading page\n"+req.statusText+" - 

54

<?php

  echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
  echo "<br>You edit information about this university";
  echo "<br><br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from university where id like '".$_GET["id"]."' " );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);   

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

 

<  div      id  =  "edit_information"
Please, enter new name of selected university:
         <div class="big-form">

 ="  display

    style

 

 

 :   block 

 ;   padding-top

 :   20px   ;"  >  

 

         <form id="form2" name="form2" method="post" action="" onsubmit="ProcessRequest(this);return 
false;">
         <table>

         <  label
 >  
         <input type="hidden" id="new_id" class="big-field" name="id" value="<?php echo 

 

$_GET["id"] ?>" size="35" />

         </label>

         <tr>
            <td>
            name
            </td>
            <td>
            <label>
               <input id="new_name" type="text" class="big-field" name="new_name" size="35" />
            </label>
            </td>
            <td>
            <label>
               <!--  <input type="submit" name="Add" 
onclick='location.href="/admin/tasks/superadm/university_tasks/add_university.php"'  
value="add_value" class="big-button" /> -->
              <input type="button" id="edit_button" onclick="editUniver();" name="Edit" 
value="edit_name" class="big-button" />
            </label>
            </td>
            </tr>

         </form>
         </div>

</table>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

55

файл admin/tasks/superadm/university_tasks/edit_university_new_2.php
<?php
try
{

$un_id = $_GET["id"];
$un_name = $_GET["name"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "UPDATE university set name = '$un_name' where id = '$un_id' ");

}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

}

var_dump($result1);
?>

Листинг к пункту 2.2.3. и его подпунктам
файл admin/tasks/superadm/prof_tasks.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

}

</script>

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

<?php
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
echo "<br/>"; 
?>

<?php
echo "If you want add professor (existed or new) in the system, please, click this link :"; 
echo "<br><a href="."/admin/tasks/superadm/prof_tasks/add_prof_to_un.php?name=".
$_GET["name"]."&familyname=".$_GET["familyname"].">Add professor in university </a>";
?>

<?php

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from professor_item where univ_id != 0" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();
  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();

    

56

}
  echo "<br><br>Please, choose one of these professors, which will be deleted or edited";
  echo "<br><br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>");
  echo ("familyname</td><td>login</td><td>un_id</td>");
  echo ("<td>delete</td><td>edit</td></tr>");
    while ( $row = $result1 -> fetch() )
    {  
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']."</td>"."<td>");
      echo ($row['familyname']."</td>"."<td>".$row['login']."</td>");
      echo ("<td>".$row['univ_id']."</td>"); 
      echo ("<td>"."<a href="."/admin/tasks/superadm/prof_tasks/delete_prof_from_un.php?id=".
$row['id'].">delete_this_professor</a>");
      echo ("<td>"."<a href="."/admin/tasks/superadm/prof_tasks/edit_prof_in_un_1.php?id=".
$row['id'].">edit_this_professor</a>");

  echo ("</td>"."</tr>");

    } 
    echo("</table>");
    $_COOKIE['mode'] = "admin";

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/prof_tasks/add_prof_to_un.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

    <script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php 
 
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
echo "<br/>";
echo "Please, choose one of these universities in which will be added professor.<br>";
echo "Also choose which professor you want to add : existed or create new.";
echo "<br><br>";
echo ("<table border = '1'>");
echo ("<tr><td>id</td><td>name</td>");
echo ("<td>existed_professor</td><td>new_professor</td>");

try
{

$dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

$result1 = $dbh -> query ( "SELECT * from university order by id" );
$result1 -> setFetchMode(PDO::FETCH_ASSOC);
//$row = $result1 -> fetch();

while ( $row = $result1 -> fetch() )
{

echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);
echo ("</td>"."<td>"."<a 

href="."/admin/tasks/superadm/prof_tasks/add_prof_to_un_1.php?id=".
$row['id'].">add_existed_professor</a>");

echo

("</td>"."<td>"."<a href="."/prof/index.php?un_id=".

$row['id'].">add_new_professor</a>");

echo ("</td>"."</tr>");

57

}

$dbh=null;

}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

}
echo("</table>");
?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>
файл admin/tasks/superadm/prof_tasks/add_prof_to_un_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
echo "<br/>"; 
?>

<?php

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

    

  $result1 = $dbh -> query ( "SELECT id,name,familyname,login,univ_id from professor_item where 
univ_id = 0" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();
  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
  $id=$_GET["id"];
  echo "Choose one professor which will be added to selected university";
  echo "<br><br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>");
  echo ("familyname</td><td>login</td><td>un_id</td>");
  echo ("<td>select</td></tr>");
    while ( $row = $result1 -> fetch() )
    {  
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']."</td>"."<td>");
      echo ($row['familyname']."</td>"."<td>".$row['login']."</td>");
      echo ("<td>".$row['univ_id']."</td>"); 
      echo ("<td>"."<a href="."/admin/tasks/superadm/prof_tasks/add_prof_to_un_2.php?id=".
$id."&prof_id=".$row['id'].">choose_this_professor</a>");

  echo ("</td>"."</tr>");

58

    } 
    echo("</table>");
    $_COOKIE['mode'] = "admin";

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/prof_tasks/add_prof_to_un_2.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php

try
{

$un_id = $_GET["id"];
$prof_id = $_GET["prof_id"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "UPDATE professor_item set univ_id = '$un_id' where id = 

'$prof_id'"  );

}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

}
?>
 
You successfully added professor to the selected university.<br>
University and professor were selected in the previous pages.
<br><a href="/admin/tasks/">back to admin menu</a>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/prof_tasks/delete_prof_from_un.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php

try
{

$prof_id = $_GET["id"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "UPDATE professor_item set univ_id = 0 where id = '$prof_id'"  );

}
catch( PDOException $e )
{

}
?>

print "Error!: " . $e->getMessage() . "<br/>";
die();

You successfully deleted professor from university, but not from system.
<br><a href="/admin/tasks/">back to admin menu</a>

<?php

59

include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/prof_tasks/edit_prof_in_un_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

}
function editProf()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

var req = new XMLHttpRequest();
var id;
var name;
var familyname;
var univ_id;
//alert(document.getElementById("new_univ_id").value);

    id = document.getElementById("new_id").value;

name = document.getElementById("new_name").value;
familyname = document.getElementById("new_familyname").value;
univ_id = document.getElementById("new_univ_id").value;
req.open( 'GET', 

'http://edu2.nscience.ru/admin/tasks/superadm/prof_tasks/edit_prof_in_un_2.php?
id='+id+'&name='+name+'&familyname='+familyname+'&univ_id='+univ_id, true );

req.onreadystatechange = function( aEvt )
{

if (req.readyState == 4)
{

if(req.status == 200)
{

if( req.responseText == 0 )
{

//alert( "not found" );
$('#edit_information').show();

}
else
{

window.location = "/admin/tasks/";

}
//alert( req.responseText );

//alert("Error loading page\n"+req.statusText+" - 

"+req.status+" - "+req.readyStatus);

}

};

}
else
{

}

req.send(null);

}

</script>

<?php

  echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
  echo "<br>You edit information about this professor :";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>familyname</td><td>login</td><td>univ_id</td>");

try
{

60

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from professor_item where id like '".$_GET["id"]."' " );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);
      echo ("</td>"."<td>".$row['familyname']."</td>"."<td>".$row['login']."</td>"."<td>".
$row['univ_id']);   

  echo ("</td>"."</tr>");
  $num=$row['univ_id'];

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<br> Be attention, if you want to edit univ_id for this professor,
be sure that univ_id, which you want to add, is existed.<br>
By default, univ_id is old univ_id for this professor.<br>
Existed univ_id is below edit_form.<br>

 

<  div      id  =  "edit_prof"
 ;   padding-top
Please, enter new information about selected professor:
         <div class="big-form">

 ="  display

 :   block 

    style

 

 

 

 :   20px   ;"  >  

         <form id="form2" name="form2" method="post" action="" onsubmit="ProcessRequest(this);return 
false;">
         <table>

         <  label
 >  
         <input type="hidden" id="new_id" class="big-field" name="id" value="<?php echo 

 

$_GET["id"] ?>" size="35" />

         </label>

         <tr>
            <td>
            name
            </td>
            <td>
            <label>
               <input id="new_name" type="text" class="big-field" name="new_name" size="35" />
            </label>
            </td>
         </tr>
         <tr>
            <td>
            familyname
            </td>
            <td>
            <label>
               <input id="new_familyname" type="text" class="big-field" name="new_name" size="35" />
            </label>
            </td>
         </tr>
         <tr>
            <td>
            univ_id
            </td>
            <td>
            <label>
               <input id="new_univ_id" type="text" class="big-field" value="<?php echo $num ?>" 
name="new_name" size="35" />
            </label>
            </td>
            <td>

61

            <label>
               <!--  <input type="submit" name="Add" 
onclick='location.href="/admin/tasks/superadm/university_tasks/add_university.php"'  
value="add_value" class="big-button" /> -->
              <input type="button" id="edit_button" onclick="editProf();" name="Edit" 
value="edit_prof" class="big-button" />
            </label>
            </td>
         </tr>

</table>

         </form>
         </div>
         
<?php

  echo "There are universities, which is already exists in the system :";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from university order by id" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);  

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/prof_tasks/edit_prof_in_un_2.php
<?php
try
{

$id = $_GET["id"];
$name = $_GET["name"];
$familyname=$_GET["familyname"];
$univ_id=$_GET["univ_id"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "UPDATE professor_item set name = '$name',familyname = 

'$familyname',univ_id = '$univ_id' where id = '$id' ");
}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

}

62

var_dump($result1);

?>

Листинг к пункту 2.2.4. и его подпунктам
файл admin/tasks/superadm/group_tasks.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php

  echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
  //echo "<br/>";
  echo "<br>Choose university, in which you want add,delete or edit group : ";
  echo "<br><br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");
  echo ("<td>add</td><td>delete</td><td>edit</td>");

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from university order by id" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']); 
      echo ("</td>"."<td>"."<a href="."/admin/tasks/superadm/group_tasks/add_group_1.php?id=".
$row['id'].">add_group</a>");
      echo
id=".$row['id'].">delete_group</a>");
      echo
$row['id'].">edit_group</a>");

("</td>"."<td>"."<a href="."/admin/tasks/superadm/group_tasks/delete_group_1.php?

("</td>"."<td>"."<a href="."/admin/tasks/superadm/group_tasks/edit_group_1.php?id=".

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

63

файл admin/tasks/superadm/group_tasks/add_group_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

}
function addGroup()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

var req = new XMLHttpRequest();
var id;
var name;
//alert(document.getElementById("new_name").value);

    id = document.getElementById("new_id").value;

name = document.getElementById("new_name").value;
req.open( 'GET', 

'http://edu2.nscience.ru/admin/tasks/superadm/group_tasks/add_group_2.php?un_id='+id+'&name='+name, 
true );

req.onreadystatechange = function( aEvt )
{

if (req.readyState == 4)
{

if(req.status == 200)
{

if( req.responseText == 0 )
{

//alert( "not found" );
$('#edit_information').show();

}
else
{

window.location = 

}
//alert( req.responseText );

//alert("Error loading page\n"+req.statusText+" - 

"/admin/tasks/superadm/group_tasks.php";

"+req.status+" - "+req.readyStatus);

}

};

}
else
{

}

req.send(null);

}

</script>

<?php

  echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
  echo "<br>You add group in this university :";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from university where id like '".$_GET["id"]."' " );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);

    while ( $row = $result1 -> fetch() )
    { 

64

      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);   

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

 

<  div      id  =  "add_group"
Please, enter name of group, which will be in selected university:
         <div class="big-form">

 ;   padding-top

 :   20px   ;"  >  

    style

 ="  display

 :   block 

 

 

 

         <form id="form2" name="form2" method="post" action="" onsubmit="ProcessRequest(this);return 
false;">
         <table>

         <  label
 >  
         <input type="hidden" id="new_id" class="big-field" name="id" value="<?php echo 

 

$_GET["id"] ?>" size="35" />

         </label>

         <tr>
            <td>
            name
            </td>
            <td>
            <label>
               <input id="new_name" type="text" class="big-field" name="new_name" size="35" />
            </label>
            </td>
            <td>
            <label>
               <!--  <input type="submit" name="Add" 
onclick='location.href="/admin/tasks/superadm/university_tasks/add_university.php"'  
value="add_value" class="big-button" /> -->
              <input type="button" id="add_button" onclick="addGroup();" name="Edit" 
value="add_group" class="big-button" />
            </label>
            </td>
            </tr>

</table>

         </form>
         </div>
         
Be attention, name of the group, which you select will not be one of these :

<?php
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from pupil_group where univ_id like '".$_GET["id"]."' " );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);   

  echo ("</td>"."</tr>");

    } 

  

65

    

  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/group_tasks/add_group_2.php
<?php
try
{

$un_id = $_GET["un_id"];
$name_group = $_GET["name"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "INSERT into pupil_group values ( 0 ,'".$name_group."','".

$un_id."' )" );
}
catch( PDOException $e )
{

}
 var_dump($result1);
?>

print "Error!: " . $e->getMessage() . "<br/>";
die();

файл admin/tasks/superadm/group_tasks/delete_group_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php

  echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
  //echo "<br/>";
  echo "<br>You delete group from this university :";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");

try
{

  $un_id=$_GET["id"];

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

66

  $result1 = $dbh -> query ( "SELECT * from university where id = '$un_id' " );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();

    while ( $row = $result1 -> fetch() )
    { 
      $univ_id=$row['univ_id'];
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']); 

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<?php

  echo "<br>Choose group which you want to delete :";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");
  echo ("<td>univ_id</td><td>delete</td>");

try
{

  $un_id=$_GET["id"];

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from pupil_group where univ_id = '$un_id' order by id" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();

    while ( $row = $result1 -> fetch() )
    { 
      $univ_id=$row['univ_id'];
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']."</td>"."<td>".$row['univ_id']);  
      echo
id=".$row['id'].">delete_group</a>");  

("</td>"."<td>"."<a href="."/admin/tasks/superadm/group_tasks/delete_group_2.php?

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/group_tasks/delete_group_2.php
<?php

67

include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php 
$id = $_GET["id"];
try
{

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "DELETE from pupil_group where id = '$id'" );

}
catch( PDOException $e )
{

}
?>

print "Error!: " . $e->getMessage() . "<br/>";
die();

You successfully deleted group, selected in previous page, from system
<br><a href="/admin/tasks/">back to admin menu</a>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/group_tasks/edit_group_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php

  echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
  //echo "<br/>";
  echo "<br>Please, select one of these groups, which you want to edit :";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");
  echo ("<td>edit</td>");

try
{

  $un_id=$_GET["id"];

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from pupil_group where univ_id = '$un_id' order by id " );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']); 
      echo
group_id=".$row['id'].">edit_group</a>");

("</td>"."<td>"."<a href="."/admin/tasks/superadm/group_tasks/edit_group_2.php?

  echo ("</td>"."</tr>");

    } 

68

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/group_tasks/edit_group_2.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

}
function editGroup()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

var req = new XMLHttpRequest();
var id;
var name;
var familyname;
var univ_id;
//alert(document.getElementById("new_univ_id").value);

    id = document.getElementById("new_id").value;

name = document.getElementById("new_name").value;
univ_id = document.getElementById("new_univ_id").value;
req.open( 'GET', 

'http://edu2.nscience.ru/admin/tasks/superadm/group_tasks/edit_group_3.php?
id='+id+'&name='+name+'&univ_id='+univ_id, true );

req.onreadystatechange = function( aEvt )
{

if (req.readyState == 4)
{

if(req.status == 200)
{

файл admin/tasks/superadm/group_tasks/edit_group_2.php

}

if( req.responseText == 0 )
{

//alert( "not found" );
$('#edit_information').show();

else
{

window.location = "/admin/tasks/";

}
//alert( req.responseText );

"+req.status+" - "+req.readyStatus);

}

};

}
else
{

}

req.send(null);

}

</script>

//alert("Error loading page\n"+req.statusText+" - 

69

<?php

  echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
  //echo "<br/>";
  echo "<br>You edit information about this group : ";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>univ_id</td>");

try
{

  $group_id=$_GET["group_id"];

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from pupil_group where id = '$group_id' " );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);
      echo ("</td>"."<td>".$row['univ_id']);   

  echo ("</td>"."</tr>");
  $num=$row['univ_id'];

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<br>Be attention, if you want to edit univ_id for this group, be sure that univ_id, which you want 
to add, is existed.<br>
By default, univ_id is old univ_id for this group. <br>
Existed univ_id is below edit_form.<br>

<div id="edit_group" style="display: block; padding-top: 20px;">
Please, enter new information about selected group:
         <div class="big-form">

         <form id="form2" name="form2" method="post" action="" onsubmit="ProcessRequest(this);return 
false;">
         <table>

         <label>
         <input type="hidden" id="new_id" class="big-field" name="id" value="<?php echo 

$_GET["group_id"] ?>" size="35" />

         </label>

         <tr>
            <td>
            name
            </td>
            <td>
            <label>
               <input id="new_name" type="text" class="big-field" name="new_name" size="35" />
            </label>
            </td>
         </tr>
         <tr>
            <td>
            univ_id
            </td>
            <td>
            <label>

70

               <input id="new_univ_id" value="<?php echo $num?>" type="text" class="big-field" 
name="new_name" size="35" />
            </label>
            </td>
            <td>
            <label>
               <!--  <input type="submit" name="Add" 
onclick='location.href="/admin/tasks/superadm/university_tasks/add_university.php"'  
value="add_value" class="big-button" /> -->
              <input type="button" id="edit_button" onclick="editGroup();" name="Edit" 
value="edit_group" class="big-button" />
            </label>
            </td>
         </tr>

</table>

         </form>
         </div>
         
<?php

  echo "There are universities, which are already exists in the system :";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td>");

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from university order by id" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);  

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>         

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/group_tasks/edit_group_3.php
<?php
try
{

$id = $_GET["id"];
$name = $_GET["name"];
$univ_id=$_GET["univ_id"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "UPDATE pupil_group set name = '$name',univ_id = '$univ_id' where 

id = '$id' ");
}
catch( PDOException $e )

71

{

}

print "Error!: " . $e->getMessage() . "<br/>";
die();

var_dump($result1);

?>

Листинг к пункту 2.2.5. и его подпунктам
файл admin/tasks/superadm/pupil_tasks.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
echo "<br/>"; 
?>

If you want to add student (existed or new) in the sytem, please, click this link :

<?php 
echo "<br><a href="."/admin/tasks/superadm/pupil_tasks/main.php> Add student in group </a>";
?>

<?php

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

    

  $result1 = $dbh -> query ( "SELECT * from pupil where group_id != 0" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();
  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
  echo "<br><br>Please, choose one of these students, which be deleted or edited :";
  echo "<br><br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>");
  echo ("familyname</td><td>login</td><td>group_id</td>");
  echo ("<td>delete</td><td>edit</td></tr>");
    while ( $row = $result1 -> fetch() )
    {  
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']."</td>"."<td>");
      echo ($row['familyname']."</td>"."<td>".$row['email']."</td>");
      echo ("<td>".$row['group_id']."</td>"); 
      echo ("<td>"."<a href="."/admin/tasks/superadm/pupil_tasks/delete_pupil.php?id=".
$row['id'].">delete_this_student</a>");
      echo ("<td>"."<a href="."/admin/tasks/superadm/pupil_tasks/edit_pupil_1.php?id=".

72

$row['id'].">edit_this_student</a>");

  echo ("</td>"."</tr>");

    } 
    echo("</table>");
    $_COOKIE['mode'] = "admin";

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/pupil_tasks/main.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

    <script language="JavaScript">

function unauthProfessor()
{

}

</script>

Tasks :

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

<?php 
 
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
//echo "<br/>";
echo "<br>Please, choose one of these groups, in which will be added student";
echo "<br>Also choose which student you want to add : existed or create new <br><br>";
echo ("<table border = '1'>");
echo ("<tr><td>id</td><td>name</td><td>univ_id</td>");
echo ("<td>existed_student</td><td>new_student</td>");

try
{

$dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

$result1 = $dbh -> query ( "SELECT * from pupil_group order by id" );
$result1 -> setFetchMode(PDO::FETCH_ASSOC);
//$row = $result1 -> fetch();

while ( $row = $result1 -> fetch() )
{

echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']."</td>"."<td>".

$row['univ_id']);

echo ("</td>"."<td>"."<a href="."/admin/tasks/superadm/pupil_tasks/add_pupil_1.php?

group_id=".$row['id'].">add_existed_student</a>");

echo

("</td>"."<td>"."<a href="."/pupil/index.php?group_id=".

$row['id'].">add_new_student</a>");

echo ("</td>"."</tr>");

}

$dbh=null;

}
catch( PDOException $e )
{

}
echo("</table>");
?>

print "Error!: " . $e->getMessage() . "<br/>";
die();

73

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/pupil_tasks/add_pupil_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}

</script>

<?php
echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
//echo "<br/>"; 
?>

<?php

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

    

  $result1 = $dbh -> query ( "SELECT * from pupil where group_id = 0" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();
  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
  $group_id=$_GET["group_id"];
  echo "";
  echo "<br>Choose one student, which will be added to selected group, from the list below :";
  echo "<br><br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>");
  echo ("familyname</td><td>login</td><td>group_id</td>");
  echo ("<td>select_pupil</td></tr>");
    while ( $row = $result1 -> fetch() )
    {  
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']."</td>"."<td>");
      echo ($row['familyname']."</td>"."<td>".$row['email']."</td>");
      echo ("<td>".$row['group_id']."</td>"); 
      echo ("<td>"."<a href="."/admin/tasks/superadm/pupil_tasks/add_pupil_2.php?group_id=".
$group_id."&pupil_id=".$row['id'].">choose_this_student</a>");

  echo ("</td>"."</tr>");

    } 
    echo("</table>");
    $_COOKIE['mode'] = "admin";

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/pupil_tasks/add_pupil_2.php

74

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php

try
{

$group_id = $_GET["group_id"];
$pupil_id = $_GET["pupil_id"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "UPDATE pupil set group_id = '$group_id' where id = 

'$pupil_id'"  );

}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

}
?>
You successfully added student to the selected group. <br>
Student and group were selected in the previous pages. 
<br><a href="/admin/tasks/">back to admin menu</a>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>
файл admin/tasks/superadm/pupil_tasks/delete_pupil.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php

try
{

$pupil_id = $_GET["id"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "UPDATE pupil set group_id = 0 where id = '$pupil_id'"  );

}
catch( PDOException $e )
{

}
?>

print "Error!: " . $e->getMessage() . "<br/>";
die();

You successfully deleted student from group, but not from system.
<br><a href="/admin/tasks/">back to admin menu</a>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/pupil_tasks/edit_pupil_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">

function unauthProfessor()
{

document.cookie="login=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";

75

document.cookie="password=; path=/; expires=Thu, 01-Jan-70 00:00:01 GMT";
window.location = "/";

}
function editPupil()
{

var req = new XMLHttpRequest();
var id;
var name;
var familyname;
var group_id;
//alert(document.getElementById("new_univ_id").value);

    id = document.getElementById("new_id").value;

name = document.getElementById("new_name").value;
familyname = document.getElementById("new_familyname").value;
group_id = document.getElementById("new_group_id").value;
req.open( 'GET', 

'http://edu2.nscience.ru/admin/tasks/superadm/pupil_tasks/edit_pupil_2.php?
id='+id+'&name='+name+'&familyname='+familyname+'&group_id='+group_id, true );

req.onreadystatechange = function( aEvt )
файл admin/tasks/superadm/pupil_tasks/edit_pupil_1.php{

if (req.readyState == 4)
{

if(req.status == 200)
{

if( req.responseText == 0 )
{

//alert( "not found" );
$('#edit_information').show();

}
else
{

window.location = "/admin/tasks/";

}
//alert( req.responseText );

//alert("Error loading page\n"+req.statusText+" - 

"+req.status+" - "+req.readyStatus);

}

};

}
else
{

}

req.send(null);

}

</script>

<?php

  echo "Dear ".$_GET["name"]." ".$_GET["familyname"]." (<a href='#' 
onclick='unauthProfessor();'>logout</a>)"."<br/>";
  //echo "<br/>";
  echo "<br>You edit information about this pupil";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>familyname</td><td>login</td><td>group_id</td>");

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from pupil where id like '".$_GET["id"]."' " );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);
      echo ("</td>"."<td>".$row['familyname']."</td>"."<td>".$row['email']."</td>"."<td>".
$row['group_id']);   

  echo ("</td>"."</tr>");
  $num=$row['id'];

    } 

76

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<br> Be attention, if you want to edit group_id for this student,
be sure that group_id, which you want to add, is existed.<br>
By default, group_id is old group_id for this student.<br>
Existed univ_id is below edit_form.<br>

 

<  div      id  =  "edit_pupil"
 
Please, enter another information about pupil:
         <div class="big-form">

 ="  display

    style

 

 

 :   block 

 ;   padding-top

 :   20px   ;"  >  

         <form id="form2" name="form2" method="post" action="" onsubmit="ProcessRequest(this);return 
false;">
         <table>

         <  label
 >  
         <input type="hidden" id="new_id" class="big-field" name="id" value="<?php echo 

 

$_GET["id"] ?>" size="35" />

         </label>

         <tr>
            <td>
            name
            </td>
            <td>
            <label>
               <input id="new_name" type="text" class="big-field" name="new_name" size="35" />
            </label>
            </td>
         </tr>
         <tr>
            <td>
            familyname
            </td>
            <td>
            <label>
               <input id="new_familyname" type="text" class="big-field" name="new_name" size="35" />
            </label>
            </td>
         </tr>
         <tr>
            <td>
            group_id
            </td>
            <td>
            <label>
               <input id="new_group_id" value="<?php echo $num?>" type="text" class="big-field" 
name="new_name" size="35" />
            </label>
            </td>
            <td>
            <label>
               <!--  <input type="submit" name="Add" 
onclick='location.href="/admin/tasks/superadm/university_tasks/add_university.php"'  
value="add_value" class="big-button" /> -->
              <input type="button" id="edit_button" onclick="editPupil();" name="Edit" 
value="edit_pupil" class="big-button" />
            </label>
            </td>
         </tr>

</table>

         </form>
         </div>
         
<?php

77

  echo "There are groups, which is already exists in the system :";
  echo "<br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>univ_id</td>");

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

  $result1 = $dbh -> query ( "SELECT * from pupil_group order by id" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();

    while ( $row = $result1 -> fetch() )
    { 
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']."</td>"."<td>".$row['univ_id']);  

  echo ("</td>"."</tr>");

    } 

  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
    echo("</table>");
    $_COOKIE['mode'] = "admin";

    

?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

файл admin/tasks/superadm/pupil_tasks/edit_pupil_2.php
<?php
try
{

$id = $_GET["id"];
$name = $_GET["name"];
$familyname=$_GET["familyname"];
$group_id=$_GET["group_id"];

$dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

$result1 = $dbh -> query ( "UPDATE pupil set name = '$name',familyname = 

'$familyname',group_id = '$group_id' where id = '$id' ");
}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

}

var_dump($result1);

?>

В пункте 2.2. и его подпунктах был реализован веб – интерфейс для некоторых возможностей 
главного администратора. Эти листинги были написаны при помощи связи с БД данной 
обучающей системы и технологии Ajax и реализованы мной при помощи удалённого доступа 
к сайту программой ZendStudio 9.0 Professional.

78

Листинг к пункту 3
файл prof/test/index.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<script language="JavaScript">
function addTest2()
{
var req = new XMLHttpRequest();
add_test = document.getElementById("add_test_button").value;
var_dump(add_test);
req.open( 'POST', 'http://edu2.nscience.ru/prof/test/?add_new_test='+add_test, true );
}
</script>

<?php
//var_dump($_POST);
try
{
    $dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

    $result = $dbh->query( "SELECT * from professor_item where login like '".$_COOKIE["login"]."'" 
);
    $professor = $result->fetch();

    foreach( $dbh->query( "SELECT * FROM pupil_group, group2prof where group2prof.prof_id = ".
$professor["id"]." and group2prof.group_id = pupil_group.id" ) as $row )
    {
        
        $pupils = Array();

        //var_dump( $row['group_id'] );

        foreach( $dbh->query( "SELECT * FROM pupil where pupil.group_id = ".$row['group_id']."" ) 
as $row2 )
        {
            $pupils[] = $row2;
        }

//var_dump( $pupils );        

        $gr = $row;
        $gr['pupils'] = $pupils;
        $group[] = $gr;
    }

    $dbh = null;
}
catch( PDOException $e )
{
    print "Error!: " . $e->getMessage() . "<br/>";
    die();
}

echo '
<br><a href="/prof/">return back to the task list</a>
<br><br><br><b><u>Assign test to a group</u></b>';

$i = 0;

//var_dump( $group );

while( $i < count( $group ) )
{
  echo '<br><span style="color:#888888" title="Please, click on the group name to assign tests to 
it\'s students.">'.$group[$i]["name"].'</span>';
  $i++;
}

//var_dump( $group );

79

?>

 

 </  u  >  </b>

<br><br><b><  u  >  Tests list
<!--
<br><a href="/prof/test/edit.php?id=1">Test 1</a>
<br><span style="color:#888888" title="You can add a new test by clicking this link">add new 
test</span>
-->

<?php
$k=$_POST["id"];
if ($k == "")
  
$j=1; 
else 

$j=$k;

?>
<?php

}

if ($j == 1)
  echo $add_form;
 
?>

$add_form=<<<EOD
<div><form id="add_form_1" method="post" action="">
<input type="submit" name="add_new_test" value="add_test$j">
</form></div>
EOD;
for ($m=1;$m<=$j;$m++)

echo("<br><a href="."/prof/test/edit.php?id=".$m.">Test".$m."</a>");

if ($_POST['add_new_test'] == "add_test".$j)
{

addTest();

<?php 
function addTest()
{
global $j;
echo("<br><a href="."/prof/test/edit.php?id=".++$j.">Test".$j."</a>");
$add_form=<<<EOD
<div><form id="add_form_2" method="post" action="">
<input type="hidden" name="id" value="$j">
<input type="submit" name="add_new_test" value="add_test$j">
</form></div>
EOD;
echo $add_form;
if ($_POST['add_new_test'] == "add_test".$j)
{

addTest();

}
}
?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>    

В этом листинге мною была сделана возможность делать неограниченное количество тестов, 
а до этого была возможность создать максимум 3 теста.
файл prof/test/edit.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
include( $_SERVER["DOCUMENT_ROOT"].'/prof/category.php' );
?>

<script language="JavaScript">

  var tasknumber = 0;
  
  saveSelection()

80

  { 
    alert( '1' );
  }

</script>

<?php

//$j=0;

try
{
    $dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

    $result = $dbh->query( "SELECT * from professor_item where login like '".$_COOKIE["login"]."'" 
);
    $professor = $result->fetch();

    foreach( $dbh->query( "SELECT * FROM pupil_group, group2prof where group2prof.prof_id = ".
$professor["id"]." and group2prof.group_id = pupil_group.id" ) as $row )
    {
В этом листинге мною была сделана возможность делать неограниченное количество тестов, а до этого 
была возможность создать максимум 3 теста.        
        $pupils = Array();

        //var_dump( $row['group_id'] );

        foreach( $dbh->query( "SELECT * FROM pupil where pupil.group_id = ".$row['group_id']."" ) 
as $row2 )
        {
            $pupils[] = $row2;
        }

//var_dump( $pupils );        

        $gr = $row;
        $gr['pupils'] = $pupils;
        $group[] = $gr;
    }

    $dbh = null;
}
catch( PDOException $e )
{
    print "Error!: " . $e->getMessage() . "<br/>";
    die();
}

echo '
<br><a href="/prof/">return back to the task list</a>';

$f=$_GET["id"];
$str= <<< E
<br><br><b><u>Test$f</u></b>
E;
echo $str;
?>

<br><span id="tasklist1"></span>

<div id="div_add_new_task" style="display: none;">

<br><br>Please, select the problem category:
<br><form method="post" action="">
<select id="select_new_task_category" name="select_new_task_category" onchange="
tasknumber++;
$('#div_add_new_task').hide();
$('#tasklist1').html( $('#tasklist1').html() + tasknumber + '. ' + $('#select_new_task_category 
option:selected').val() + '
 
">
  <option value=""></option>
<?php
function showSub( $ar, $sep, $tree )
{

 <  br  >  ');   

81

  $i = 0;
  while( $i < count( $ar ))
  {
    echo '
    <option value="'.$tree.'->'.$ar[$i]["name"].'">'.$sep.''.$ar[$i]["name"].'</option>
    ';
    if( count( $ar[$i]["sub"] ) > 0 )
    {
      showSub( $ar[$i]["sub"], $sep."__", $tree.'->'.$ar[$i]["name"] );  
    }
    $i++;
  }
}

showSub( $category, "", "Problem" );
  
  //<option value="saab">Saab</option>  
?>

</select>
</form>

</div>

<br><u><a href="#" onclick="$('#select_new_task_category :nth-child(1)').attr('selected', 
'selected'); $('#div_add_new_task').show();" title="You can add a new test by clicking this 
link">add new problem</a></u>

<!--  <br>generate_bilet<br> -->
<?php 
$log=$_COOKIE["login"];
try
{

$dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

$result1 = $dbh -> query ( "SELECT * from professor_item where login = '$log' " );
$result1 -> setFetchMode(PDO::FETCH_ASSOC);

while ( $row = $result1 -> fetch() )
{

$id=$row['id'];

}

$dbh=null;
}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

}
//echo ("<table border = '1'>");
//echo ("<tr><td>id</td><td>name</td>");
try
{

$dbh1 = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

$result2 = $dbh1 -> query ( "SELECT pupil_group.id,pupil_group.name from 

professor_item,pupil_group where professor_item.id='$id' and 
professor_item.univ_id=pupil_group.univ_id " );

$result2 -> setFetchMode(PDO::FETCH_ASSOC);

while ( $row1 = $result2 -> fetch() )
{

//echo ("<tr>"."<td>".$row1['id']."</td>"."<td>".$row1['name']);
//echo ("</td>"."</tr>");
$i++;
$ar[$i]=$row1;

}
$dbh1=null;

}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";

82

die();

}
?>
<?php
$a=serialize($ar);
$form='<form method="post" action="">
<input type="submit" name="generate" value="generate_bilet">
</form>';
echo $form;
if ($_POST['generate'] == "generate_bilet")
{

chooseCat();

}
function chooseCat()
{

}
?>

global $a;
echo("<br>"."Choose one of these ways of generating bilet : "."<br>");
echo("<br><a href="."/prof/test/show_1_1.php?ar=".$a.">using only public tasks</a>");
echo("<br><a href="."/prof/test/show_2.php>using only private tasks</a>");
echo("<br><a href="."/prof/test/show_3.php>using public and private tasks</a>");

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

В этом листинге мною была сделана возможность выбрать с помощью каких задач 
формировать билет : только с помощью уникальных задач преподавателя, только с помощью 
задач, общих для всех пользователей системы или с помощью общих и уникальных задач.
файл prof/test/show_1_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php 
echo ("<table border = '1'>");
echo ("<tr><td>id_group</td><td>name_group</td>");
echo ("<td>choose_group</td>");
$a=$_GET["ar"];
$b=unserialize($a);
for ($i=1;$i<=count($b);$i++)
{

$number=0;
$id=$b[$i]['id'];
$name=$b[$i]['name'];
try
{

$dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

 $result = $dbh->query( "select * from pupil where group_id = '$id'" );
 $result -> setFetchMode(PDO::FETCH_ASSOC);

$dbh=null;

}
catch( PDOException $e )
{

print "Error!: " . $e->getMessage() . "<br/>";
die();

}
while ( $row = $result -> fetch() )
{

++$number;

}
echo ("<tr>"."<td>".$id."</td>"."<td>".$name);
echo ("</td>"."<td>"."<a href="."/prof/test/show_1.php?num_of_pupils=".

$number.">generate_examemation_papers_for_this_group</a>");

echo ("</td>"."</tr>");
//var_dump($number);

83

}
?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

В этом листинге мною была сделана возможность выбрать группу, для которой будут 
автоматически сгенерированы билеты.
Далее, в следующих листингах мною была сделана возможность автоматической генерации 
билета с возможностью изменения задачи в билете.
файл prof/test/show_1.php
<?php
include( $_SERVER["DOCUMENT_ROOT"].'/lt.php' );
?>

<?php

try
{

  $dbh = new PDO('mysql:host=localhost;dbname=dshirokov','033035009_ppp','rioter');

    

  $result1 = $dbh -> query ( "SELECT * from task_template where professorid = 0 order by id" );
  $result1 -> setFetchMode(PDO::FETCH_ASSOC);
  //$row = $result1 -> fetch();
  
  $dbh=null;
}
catch( PDOException $e )
{
  print "Error!: " . $e->getMessage() . "<br/>";
  die();
}
  echo "<br><br>There are all public tasks in the system :";
  echo "<br><br>";
  echo ("<table border = '1'>");
  echo ("<tr><td>id</td><td>name</td><td>prof_id</td></tr>");
  $i=0;
    while ( $row = $result1 -> fetch() )
    {  
      echo ("<tr>"."<td>".$row['id']."</td>"."<td>".$row['name']);
      echo ("</td>"."<td>".$row['professorid']);

  echo ("</td>"."</tr>");
  $a[$i] = $row['template_file_name'];
  ++$i;

$l=rand(0,$i-1);
$b[$k]=$a[$l];

    } 
    echo("</table>");
    
  $j=4;
  for ($k=1;$k<=$j;$k++)
  {
  
  
  }
$str=serialize($b); 
$number=$_GET["num_of_pupils"];
$info=<<< F
<br>There are $number pupils in this group. Group was selected in the previous page.<br>
There are examenation papers for this group : <br>
F;
echo $info;
echo "<br><a href='/edu/bilet.php?task=".$str."&number=".$number."&mode=prof'> Show Examenation 
papers for this group </a>";
?>

<?php
include( $_SERVER["DOCUMENT_ROOT"].'/rb.php' );
?>

84

файл edu/bilet.php
<?php

include( "pl.php" );

function xml2assoc($xml)
{
    print "<ul>";

    $tree = null;
    
    while($xml->read())
    {
        if($xml->nodeType == XMLReader::END_ELEMENT)
        {
            print "</ul>";
            return $tree;
        }
       
        else if($xml->nodeType == XMLReader::ELEMENT)
        {
            $node = array();
           
            print("Adding " . $xml->name ."<br>");
            $node['tag'] = $xml->name;

            if($xml->hasAttributes)
            {
                $attributes = array();
                while($xml->moveToNextAttribute())
                {
                    print("Adding attr " . $xml->name ." = " . $xml->value . "<br>");
                    $attributes[$xml->name] = $xml->value;
                }
                $node['attr'] = $attributes;
            }
           
            if(!$xml->isEmptyElement)
            {
                $childs = xml2assoc($xml, $node['tag']);
                $node['childs'] = $childs;
            }
           
            print($node['tag'] . " added <br>");
            $tree[] = $node;
        }
       
        else if($xml->nodeType == XMLReader::TEXT)
        {
            $node = array();
            $node['text'] = $xml->value;
            $tree[] = $node;
            print "text added = " . $node['text'] . "<br>";
        }
    }
   
    print "returning " . count($tree) . " childs<br>";
    print "</ul>";
   
    return $tree;
}

$id=time();
$str1=$_GET["task"];
$number=$_GET["number"];
$a=unserialize($str1);файл edu/bilet.php
for ($j=1;$j<=$number;$j++)
{

$paper_num=$j;
for ($i=1;$i<=4;$i++)
{

$paper_num=$j;
$b=$a;

85

//var_dump(strlen($str1[1]));

if( strlen( $a[$i] ) > 0 )
{

$taskFileName = $a[$i];
//var_dump($taskFileName);

//$taskFileName = "limit";
$taskFileName = "";
//var_dump(2);

}
else
{

}

if( $_GET['mode'] === 'pupil' )
{
    try
    {
        $dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' 

        $result = $dbh->query( "SELECT * from pupil where email like '".$_COOKIE["login"]."'" 

        $pupil = $файл edu/bilet.phpresult->fetch();

);

);

        $result = $dbh->query( "SELECT * from task_template where template_file_name like '".

$taskFileName."'" );

        $task = $result->fetch();

        $result = $dbh->exec( "insert into stat values ( 0, ".$pupil['id'].", ".

$task['id'].", 0, 0, 0, 0 )" );

        $insert_id = $dbh->lastInsertId();

        $dbh = null;
    }
    catch( PDOException $e )
    {
        print "Error!: " . $e->getMessage() . "<br/>";
        die();
    }
}

$str = file_get_contents( "http://int.pm.miem.edu.ru/taskpower3_war_exploded/getTask.do?

task=".$taskFileName );

$task2 = new XMLReader();
$task2->xml( $str );

//$ar2 = xml2assoc( $task );

//$task->read();
$task2->read();
$task2->read();
$task2->read();
$task_problem = $task2->readInnerXML();
$c[$j][$i]=$task_problem;
if ($i != 1 && $j файл edu/bilet.php!= 1)
{

for ($k=1;$k<=$j;$k++)
{

for ($l=1;$l <= $i-1;$l++)
{

"http://int.pm.miem.edu.ru/taskpower3_war_exploded/getTask.do?task=".$taskFileName );

if ($c[$j][$i] == $c[$k][$l])
{

$str = file_get_contents( 

$task2 = new XMLReader();
$task2->xml( $str );
$task2->read();
$task2->read();
$task2->read();

86

$task_problem = $task2->readInnerXML();
$c[$j][$i]=$task_problem;

}

}

}
elseif ($j != 1 && $i==1)
{

for ($k=1;$k<=$j-1;$k++)
{

for ($l=1;$l <= 4;$l++)
{

}

}

         

if ($c[$j][$i] == $c[$k][$l])
{
$str = file_get_contents( 

"http://int.pm.miem.edu.ru/taskpower3_war_exploded/getTask.do?task=".$taskFileName );

$task2 = new XMLReader();
$task2->xml( $str );
$task2->read();
$task2->read();
$task2->read();
$task_problem = $task2->readInnerXML();
$c[$j][$i]=$task_problem;

}

}

}
if ($i==4 && $j==$number)
{
  $dom=new DOMDocument('1.0','utf-8');
  $root = $dom -> createElement('root');
  $info = $dom -> createElement('info');
  for ($count=1;$count<=$number;$count++)
  {
      $item = $dom -> createElement('item');
      $item -> setAttributeNode(new DOMAttr('id', $count ));

  for ($num=1;$num<=4;$num++)
  {
    $el = $dom -> createElement('el');
    $el -> setAttributeNode(new DOMAttr('id', $num ));
    $elem = $dom -> createElement('elem');
    $elem -> setAttributeNode(new DOMAttr('name', $c[$count][$num] ));
    $el   -> appendChild($elem);
    $item -> appendChild($el);
  }
  $info -> appendChild($item);

  }   
  $root -> appendChild($info);
  $dom  -> appendChild($root);
  $dom ->  save('old_test.xml');
  $dom1=new DOMDocument('1.0','utf-8');
  $root = $dom1 -> createElement('root');
  $info = $dom1 -> createElement('info');
  for ($num=1;$num<=count($a);$num++)
  {
  $el = $dom1 -> createElement('el');
  $el -> setAttributeNode(new DOMAttr('number_task', $a[$num] ));
  $info -> appendChild($el);
  }
  $root -> appendChild($info);
  $dom1  -> appendChild($root);
  $dom1 ->  save('old_task.xml');
}
$task2->next();
$task2->next();
$task_solution = $task2->readInnerXML();
$task2->next();
$task2->next();
$task_answer = $task2->readInnerXML();

//var_dump( $task2->name );

87

$task = explode( "$", $str );

//var_dump( $task_answer );

//$id = time();
if ($i == 1 && $j == 1)
{

$str_prefix = '<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN"
               "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd" [
  <!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<!--<meta http-equiv="content-type" content="text/xml; charset=UTF-8"/>-->

<title>Задача '.$id.'</title>

<style type="text/css">
#resultBox { width: 600px; }
body { font-size: 14pt; }
h1 { font-size: 18pt; }
</style>

</head>
<body>

<a href="/'.$_COOKIE['mode'].'">back to professor menu</a>
<br></br><message> If are you sure, that your examenations papers are ready, please, 

<br></br><a href="/edu/print_bilet.php?number='.$number.'"> version for print </a> 
<br></br><message> If you want to edit one or more of the tasks, please, click this 

<br></br><a href="/edu/bilet1.php?number='.$number.'">change task in examenation 

click this link : </message>

link : </message> 

paper</a>

<br></br><h1>Examenation paper #'.$paper_num.'</h1>
<h1>Task #'.$i.'</h1>
<div id="resultBox">

<p>
';

}
elseif ($i == 1 && $j != 1)
{

$str_prefix = '
<h1>Examenation paper #'.$paper_num.'</h1>
<h1>Task #'.$i.'</h1>
<div id="resultBox">

<p>
';

}
elseif ($i != 1)
{

$str_prefix = '

<h1>Task #'.$i.'</h1>
<div id="resultBox">

<p>
';

}

//var_dump( $_COOKIE['mode'] );

$str_postfix_solution = '
</body>
</html>
';

if ($i == 4 && $j == $number)
{

88

$str_postfix_problem = '

</body>
</html>
';

$str_postfix_problem = '

}
else 
{

';

}
$url = fopen( "generated_task/bilet_".$id.".xhtml", "a+" );
fwrite( $url, $str_prefix );
fwrite( $url, $c[$j][$i]);
fwrite( $url, '</p></div>' );
fwrite( $url, $str_postfix_problem );
fclose( $url );

}
}

header( "Location: http://edu2.nscience.ru/edu/generated_task/bilet_".$id.".xhtml", false );

?>

файл edu/print_bilet.php
<?php

include( "pl.php" );

function xml2assoc($xml)
{
    print "<ul>";

    $tree = null;
    
    while($xml->read())
    {
        if($xml->nodeType == XMLReader::END_ELEMENT)
        {
            print "</ul>";
            return $tree;
        }
       
        else if($xml->nodeType == XMLReader::ELEMENT)
        {
            $node = array();
           
            print("Adding " . $xml->name ."<br>");
            $node['tag'] = $xml->name;

            if($xml->hasAttributes)
            {
                $attributes = array();
                while($xml->moveToNextAttribute())
              файл edu/print_bilet.php  {
                    print("Adding attr " . $xml->name ." = " . $xml->value . "<br>");
                    $attributes[$xml->name] = $xml->value;
                }
                $node['attr'] = $attributes;
            }
           
            if(!$xml->isEmptyElement)
            {
                $childs = xml2assoc($xml, $node['tag']);
                $node['childs'] = $childs;
            }
           
            print($node['tag'] . " added <br>");
            $tree[] = $node;
        }

89

       
        else if($xml->nodeType == XMLReader::TEXT)
        {
            $node = array();
            $node['text'] = $xml->value;
            $tree[] = $node;
            print "text added = " . $node['text'] . "<br>";
        }
    }
   
    print "returning " . count($tree) . " childs<br>";
    print "</ul>";
   
    return $tree;
}

$id=time();
$number=$_GET["number"];
for ($j=1;$j<=$number;$j++)
{

$paper_num=$j;
for ($i=1;$i<=4;$i++)
{

$doc = new DOMDocument();
$doc -> load ('old_test.xml');
$ch = $doc -> getElementsByTagName('item');
$ch_el = $ch -> item($j - 1) -> childNodes -> item($i - 1);
$ch_text = $ch_el -> childNodes -> item(0);
$c[$j][$i] = $ch_text -> getAttribute('name');
$doc1 = new DOMDocument();
$doc1 -> load ('old_task.xml');
$ch1 = $doc1 -> getElementsByTagName('el');
$ch_el1 = $ch1 -> item($i - 1);
$a[$i] = $ch_el1 -> getAttribute('number_task');
//$ar2 = xml2assoc( $task );

//var_dump( $task_answer ); 

//$id = time();
if ($i==1 && $j==1)
{

$str_prefix = '<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN"
               "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd" [
  <!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<!--<meta http-equiv="content-type" content="text/xml; charset=UTF-8"/>-->

<title>Задача '.$id.'</title>

<style type="text/css">
#resultBox { width: 600px; }
body { font-size: 14pt; }
h1 { font-size: 18pt; }
</style>

</head>
<body>

<a href="/'.$_COOKIE['mode'].'">back to professor menu</a>
<h1>Examenation paper #'.$paper_num.'</h1>
<h1>Task #'.$i.'</h1>
<div id="resultBox">

<p>
';

}
elseif ($i == 1 && $j != 1)
{

$str_prefix = '
<h1>Examenation paper #'.$paper_num.'</h1>

90

<h1>Task #'.$i.'</h1>
<div id="resultBox">

<p>
';

}
elseif ($i != 1)
{

$str_prefix = '

<h1>Task #'.$i.'</h1>
<div id="resultBox">

<p>
';

}

//var_dump( $_COOKIE['mode'] );

$str_postfix_solution = '
</body>
</html>
';

if ($i == 4 && $j==$number)
{

$str_postfix_problem = '

</body>
</html>
';

$str_postfix_problem = '

}
else 
{

';

}
$url = fopen( "generated_task/bilet_".$id.".xhtml", "a+" );
fwrite( $url, $str_prefix );
fwrite( $url, $c[$j][$i]);
fwrite( $url, '</p></div>' );
fwrite( $url, $str_postfix_problem );
fclose( $url );

}
}

header( "Location: http://edu2.nscience.ru/edu/generated_task/bilet_".$id.".xhtml", false );

?>

файл edu/bilet_1.php
<?php

include( "pl.php" );

function xml2assoc($xml)
{
    print "<ul>";

    $tree = null;
    
    while($xml->read())
    {
        if($xml->nodeType == XMLReader::END_ELEMENT)
        {
            print "</ul>";
            return $tree;
        }
       
        else if($xml->nodeType == XMLReader::ELEMENT)

91

        {
            $node = array();
           
            print("Adding " . $xml->name ."<br>");
            $node['tag'] = $xml->name;

            if($xml->hasAttributes)
            {
                $attributes = array();
                while($xml->moveToNextAttribute())
                {
                    print("Adding attr " . $xml->name ." = " . $xml->value . "<br>");
                    $attributes[$xml->name] = $xml->value;
                }
                $node['attr'] = $attributes;
            }
           
            if(!$xml->isEmptyElement)
            {
                $childs = xml2assoc($xml, $node['tag']);
                $node['childs'] = $childs;
            }
           
            print($node['tag'] . " added <br>");
            $tree[] = $node;
        }
       
        else if($xml->nodeType == XMLReader::TEXT)
        {
            $node = array();
            $node['text'] = $xml->value;
            $tree[] = $node;
            print "text added = " . $node['text'] . "<br>";
        }
    }
   
    print "returning " . count($tree) . " childs<br>";
    print "</ul>";
   
    return $tree;
}

$id=time();
$number=$_GET["number"];
for ($j=1;$j<=$number;$j++)
{

$paper_num=$j;
for ($i=1;$i<=4;$i++)
{

$doc = new DOMDocument();
$doc -> load ('old_test.xml');
$ch = $doc -> getElementsByTagName('item');
$ch_el = $ch -> item($j - 1) -> childNodes -> item($i - 1);
$ch_text = $ch_el -> childNodes -> item(0);
$c[$j][$i] = $ch_text -> getAttribute('name');
$doc1 = new DOMDocument();
$doc1 -> load ('old_task.xml');
$ch1 = $doc1 -> getElementsByTagName('el');
$ch_el1 = $ch1 -> item($i - 1);
$a[$i] = $ch_el1 -> getAttribute('number_task');
if ($i == 1 && $j == 1)
{

$str_prefix = '<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN"
               "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd" [
  <!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<!--<meta http-equiv="content-type" content="text/xml; charset=UTF-8"/>-->

<title>Задача '.$id.'</title>

92

<style type="text/css">
#resultBox { width: 600px; }
body { font-size: 14pt; }
h1 { font-size: 18pt; }
</style>

</head>
<body>

<a href="/'.$_COOKIE['mode'].'">back to professor menu</a>
<h1>Examenation paper #'.$paper_num.'</h1>
<h1>Task #'.$i.'</h1>
<a href="/edu/change_task.php?task='.$a[$i].'&amp;number='.$number.'&amp;id='.

$i.'&amp;bil_num='.$paper_num.'">change this task for the task of same type</a>

<div id="resultBox">

<p>
';

}
elseif ($i == 1 && $j != 1)
{

$str_prefix = '
<h1>Examenation paper #'.$paper_num.'</h1>
<h1>Task #'.$i.'</h1>
<a href="/edu/change_task.php?task='.$a[$i].'&amp;number='.$number.'&amp;id='.

$i.'&amp;bil_num='.$paper_num.'">change this task for the task of same type</a>

<div id="resultBox">

<p>
';

}
elseif ($i != 1)
{

$str_prefix = '

<h1>Task #'.$i.'</h1>
<a href="/edu/change_task.php?task='.$a[$i].'&amp;number='.$number.'&amp;id='.

$i.'&amp;bil_num='.$paper_num.'">change this task for the task of same type</a>

<div id="resultBox">

<p>
';

}

//var_dump( $_COOKIE['mode'] );

$str_postfix_solution = '
</body>
</html>
';

if ($i == 4 && $j == $number)
{

$str_postfix_problem = '

</body>
</html>
';

$str_postfix_problem = '

}
else 
{

';

}

$url = fopen( "generated_task/bilet_".$id.".xhtml", "a+" );
fwrite( $url, $str_prefix );
fwrite( $url, $c[$j][$i]);
fwrite( $url, '</p></div>' );
fwrite( $url, $str_postfix_problem );
fclose( $url );

93

}
}

header( "Location: http://edu2.nscience.ru/edu/generated_task/bilet_".$id.".xhtml", false );

?>

файл edu/change_task.php
<?php

include( "pl.php" );

function xml2assoc($xml)
{
    print "<ul>";

    $tree = null;
    
    while($xml->read())
    {
        if($xml->nodeType == XMLReader::END_ELEMENT)
        {
            print "</ul>";
            return $tree;
        }
       
        else if($xml->nodeType == XMLReader::ELEMENT)
        {
            $node = array();
           
            print("Adding " . $xml->name ."<br>");
            $node['tag'] = $xml->name;

            if($xml->hasAttributes)
            {
                $attributes = array();
                while($xml->moveToNextAttribute())
                {
                    print("Adding attr " . $xml->name ." = " . $xml->value . "<br>");
                    $attributes[$xml->name] = $xml->value;
                }
                $node['attr'] = $attributes;
            }
           
            if(!$xml->isEmptyElement)
            {
                $childs = xml2assoc($xml, $node['tag']);
              файл edu/change_task.php  $node['childs'] = $childs;
            }
           
            print($node['tag'] . " added <br>");
            $tree[] = $node;
        }
       
        else if($xml->nodeType == XMLReader::TEXT)
        {
            $node = array();
            $node['text'] = $xml->value;
            $tree[] = $node;
            print "text added = " . $node['text'] . "<br>";
        }
    }
   
    print "returning " . count($tree) . " childs<br>";
    print "</ul>";
   
    return $tree;
}

if( strlen( $_GET["task"] ) > 0 )

94

{

}
else
{

}

$taskFileName = $_GET["task"];
//var_dump($taskFileName);

//$taskFileName = "limit";
$taskFileName = "";
//var_dump(2);

if( $_GET['mode'] === 'pupil' )
{
    tryфайл edu/change_task.php
    {
        $dbh = new PDO( 'mysql:host=localhost;dbname=dshirokov', '033035009_ppp', 'rioter' );

        $result = $dbh->query( "SELECT * from pupil where email like '".$_COOKIE["login"]."'" );
        $pupil = $result->fetch();

        $result = $dbh->query( "SELECT * from task_template where template_file_name like '".
$taskFileName."'" );
        $task = $result->fetch();

        $result = $dbh->exec( "insert into stat values ( 0, ".$pupil['id'].", ".$task['id'].", 0, 0, 
0, 0 )" );
        $insert_id = $dbh->lastInsertId();

        $dbh = null;
    }
    catch( PDOException $e )
    {
        print "Error!: " . $e->getMessage() . "<br/>";
        die();
    }
}

$str = file_get_contents( "http://int.pm.miem.edu.ru/taskpower3_war_exploded/getTask.do?task=".
$taskFileName );

$task2 = new XMLReader();
$task2->xml( $str );

//$ar2 = xml2assoc( $task );

//$task->read();
$task2->read();
$task2->read();
$task2->read();
$task_problem = $task2->readInnerXML();
$bil_num=$_GET["bil_num"];
$num=$_GET["id"];
$number=$_GET["number"];
$doc = new DOMDocument();
$doc -> load ('old_test.xml');
$ch = $doc -> getElementsByTagName('item');
$ch_el = $ch -> item($bil_num - 1);
$ch_text = $ch_el -> childNodes -> item($num - 1) -> childNodes -> item(0);
$ch_text -> setAttributeNode(new DOMAttr('name', $task_problem ));
$doc ->  save('new_test.xml');
$task2->next();
$task2->next();
$task_solution = $task2->readInnerXML();
$task2->next();
$task2->next();
$task_answer = $task2->readInnerXML();

//var_dump( $task2->name );

95

$task = explode( "$", $str );

//var_dump( $task_answer );

$id = time();

$str_prefix = '<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN"
               "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd" [
  <!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<!--<meta http-equiv="content-type" content="text/xml; charset=UTF-8"/>-->

<title>Задача '.$id.'</title>

<style type="text/css">
#resultBox { width: 600px; }
body { font-size: 14pt; }
h1 { font-size: 18pt; }
</style>

</head>
<body>

<h1>You changed Task #'.$num.' in Examenation Paper #'.$bil_num.'</h1>
   

<a href="/'.$_COOKIE['mode'].'">back to tasks list</a>
<br></br><a href="/edu/changed_bilet.php?bil_num='.$bil_num.'&amp;number='.$number.'">back to 
Examenation Paper</a>
<br></br><a href="/edu/change_task.php?task='.$_GET["task"].'&amp;number='.$number.'&amp;id='.
$num.'&amp;bil_num='.$bil_num.'">generate new task of the same type</a>

<div id="resultBox">

<p>
';

//var_dump( $_COOKIE['mode'] );

$str_postfix_solution = '
</body>
</html>
';

$str_postfix_problem = '

</body>
</html>
';

$url = fopen( "generated_task/problem_".$id.".xhtml", "wr" );
fwrite( $url, $str_prefix );
fwrite( $url, $task_problem );
fwrite( $url, '</p></div>' );
fwrite( $url, $str_postfix_problem );
fclose( $url );

header( "Location: http://edu2.nscience.ru/edu/generated_task/problem_".$id.".xhtml", false );

?>

96

файл edu/changed_bilet.php
<?php

include( "pl.php" );

function xml2assoc($xml)
{
    print "<ul>";

    $tree = null;
    
    while($xml->read())
    {
        if($xml->nodeType == XMLReader::END_ELEMENT)
        {
            print "</ul>";
            return $tree;
        }
       
        else if($xml->nodeType == XMLReader::ELEMENT)
        {
            $node = array();
           
            print("Adding " . $xml->name ."<br>");
            $node['tag'] = $xml->name;

            if($xml->hasAttributes)
            {
                $attributes = array();
                while($xml->moveToNextAttribute())
                {
                    print("Adding attr " . $xml->name ." = " . $xml->value . "<br>");
                    $attributes[$xml->name] = $xml->value;
                }
                $node['attr'] = $attributes;
            }
           
            if(!$xml->isEmptyElement)
            {
                $childs = xml2assoc($xml, $node['tag']);
                $node['childs'] = $childs;
            }
           
            print($node['tag'] . " added <br>");
            $tree[] = $node;
        }
       
        else if($xml->nodeType == XMLReader::TEXT)
        {
            $node = array();
            $node['text'] = $xml->value;
            $tree[] = $node;
            print "text added = " . $node['text'] . "<br>";
        }
    }
   
    print "returning " . count($tree) . " childs<br>";
    print "</ul>";
   
    return $tree;
}

$id=time();
$number=$_GET["number"];
for ($j=1;$j<=$number;$j++)
{

$paper_num=$j;
for ($i=1;$i<=4;$i++)
{

$doc = new DOMDocument();
$doc -> load ('new_test.xml');
$ch = $doc -> getElementsByTagName('item');
$ch_el = $ch -> item($j - 1) -> childNodes -> item($i - 1);

97

$ch_text = $ch_el -> childNodes -> item(0);
$c[$j][$i] = $ch_text -> getAttribute('name');
$doc ->  save('old_test.xml');
$doc1 = new DOMDocument();
$doc1 -> load ('old_task.xml');
$ch1 = $doc1 -> getElementsByTagName('el');
$ch_el1 = $ch1 -> item($i - 1);
$a[$i] = $ch_el1 -> getAttribute('number_task');
//$ar2 = xml2assoc( $task );

//var_dump( $task_answer ); 

//$id = time();
if ($i==1 && $j==1)
{

$str_prefix = '<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN"
               "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd" [
  <!ENTITY mathml "http://www.w3.org/1998/Math/MathML">
]>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<!--<meta http-equiv="content-type" content="text/xml; charset=UTF-8"/>-->

<title>Задача '.$id.'</title>

<style type="text/css">
#resultBox { width: 600px; }
body { font-size: 14pt; }
h1 { font-size: 18pt; }
</style>

</head>
<body>

</message> 

paper</a>

<a href="/'.$_COOKIE['mode'].'">back to professor menu</a>
<br></br><message> If there are no same tasks, please, click this link : </message> 
<br></br><a href="/edu/print_bilet.php?number='.$number.'"> version for print </a> 
<br></br><message> If there are two or more same tasks, please, click this link : 

<br></br><a href="/edu/bilet1.php?number='.$number.'">change task in examenation 

<h1>Examenation paper #'.$paper_num.'</h1>
<h1>Task #'.$i.'</h1>
<div id="resultBox">

<p>
';

}
elseif ($i == 1 && $j != 1)
{

$str_prefix = '
<h1>Examenation paper #'.$paper_num.'</h1>
<h1>Task #'.$i.'</h1>
<div id="resultBox">

<p>
';

}
elseif ($i != 1)
{

$str_prefix = '

<h1>Task #'.$i.'</h1>
<div id="resultBox">

<p>
';

}

//var_dump( $_COOKIE['mode'] );

$str_postfix_solution = '

98

</body>
</html>
';

if ($i == 4 && $j==$number)
{

$str_postfix_problem = '

</body>
</html>
';

$str_postfix_problem = '

}
else 
{

';

}
$url = fopen( "generated_task/bilet_".$id.".xhtml", "a+" );
fwrite( $url, $str_prefix );
fwrite( $url, $c[$j][$i]);
fwrite( $url, '</p></div>' );
fwrite( $url, $str_postfix_problem );
fclose( $url );

}
}

header( "Location: http://edu2.nscience.ru/edu/generated_task/bilet_".$id.".xhtml", false );

?>

99

